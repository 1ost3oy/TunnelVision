/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "(action-browser)/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync ***!
  \***********************************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(action-browser)/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%2C%5B%7B%22id%22%3A%22401ae30b412cc79b62a840f40bdb1486f250542779%22%2C%22exportedName%22%3A%22suggestTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%2C%5B%7B%22id%22%3A%22401948dddbe769be921caa36c53c2f42ff64fe9f65%22%2C%22exportedName%22%3A%22suggestServerOrder%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%7D%5D%5D%5D&__client_imported__=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%2C%5B%7B%22id%22%3A%22401ae30b412cc79b62a840f40bdb1486f250542779%22%2C%22exportedName%22%3A%22suggestTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%2C%5B%7B%22id%22%3A%22401948dddbe769be921caa36c53c2f42ff64fe9f65%22%2C%22exportedName%22%3A%22suggestServerOrder%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%7D%5D%5D%5D&__client_imported__=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"401948dddbe769be921caa36c53c2f42ff64fe9f65\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_ai_flows_suggest_server_order_flow_ts__WEBPACK_IMPORTED_MODULE_1__.suggestServerOrder),\n/* harmony export */   \"401ae30b412cc79b62a840f40bdb1486f250542779\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_ai_flows_suggest_tunnel_flow_ts__WEBPACK_IMPORTED_MODULE_0__.suggestTunnel)\n/* harmony export */ });\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_ai_flows_suggest_tunnel_flow_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/ai/flows/suggest-tunnel-flow.ts */ \"(action-browser)/./src/ai/flows/suggest-tunnel-flow.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_ai_flows_suggest_server_order_flow_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/ai/flows/suggest-server-order-flow.ts */ \"(action-browser)/./src/ai/flows/suggest-server-order-flow.ts\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWFjdGlvbi1lbnRyeS1sb2FkZXIuanM/YWN0aW9ucz0lNUIlNUIlMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24tbWFpbiU1QyU1Q3NyYyU1QyU1Q2FpJTVDJTVDZmxvd3MlNUMlNUNzdWdnZXN0LXR1bm5lbC1mbG93LnRzJTIyJTJDJTVCJTdCJTIyaWQlMjIlM0ElMjI0MDFhZTMwYjQxMmNjNzliNjJhODQwZjQwYmRiMTQ4NmYyNTA1NDI3NzklMjIlMkMlMjJleHBvcnRlZE5hbWUlMjIlM0ElMjJzdWdnZXN0VHVubmVsJTIyJTJDJTIyZmlsZW5hbWUlMjIlM0ElMjIuLiUyRkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDc3JjJTVDJTVDYWklNUMlNUNmbG93cyU1QyU1Q3N1Z2dlc3QtdHVubmVsLWZsb3cudHMlMjIlN0QlNUQlNUQlMkMlNUIlMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24tbWFpbiU1QyU1Q3NyYyU1QyU1Q2FpJTVDJTVDZmxvd3MlNUMlNUNzdWdnZXN0LXNlcnZlci1vcmRlci1mbG93LnRzJTIyJTJDJTVCJTdCJTIyaWQlMjIlM0ElMjI0MDE5NDhkZGRiZTc2OWJlOTIxY2FhMzZjNTNjMmY0MmZmNjRmZTlmNjUlMjIlMkMlMjJleHBvcnRlZE5hbWUlMjIlM0ElMjJzdWdnZXN0U2VydmVyT3JkZXIlMjIlMkMlMjJmaWxlbmFtZSUyMiUzQSUyMi4uJTJGQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNzcmMlNUMlNUNhaSU1QyU1Q2Zsb3dzJTVDJTVDc3VnZ2VzdC1zZXJ2ZXItb3JkZXItZmxvdy50cyUyMiU3RCU1RCU1RCU1RCZfX2NsaWVudF9pbXBvcnRlZF9fPXRydWUhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ2tMO0FBQ1ciLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCB7IHN1Z2dlc3RUdW5uZWwgYXMgXCI0MDFhZTMwYjQxMmNjNzliNjJhODQwZjQwYmRiMTQ4NmYyNTA1NDI3NzlcIiB9IGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxzcmNcXFxcYWlcXFxcZmxvd3NcXFxcc3VnZ2VzdC10dW5uZWwtZmxvdy50c1wiXG5leHBvcnQgeyBzdWdnZXN0U2VydmVyT3JkZXIgYXMgXCI0MDE5NDhkZGRiZTc2OWJlOTIxY2FhMzZjNTNjMmY0MmZmNjRmZTlmNjVcIiB9IGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxzcmNcXFxcYWlcXFxcZmxvd3NcXFxcc3VnZ2VzdC1zZXJ2ZXItb3JkZXItZmxvdy50c1wiXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%2C%5B%7B%22id%22%3A%22401ae30b412cc79b62a840f40bdb1486f250542779%22%2C%22exportedName%22%3A%22suggestTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%2C%5B%7B%22id%22%3A%22401948dddbe769be921caa36c53c2f42ff64fe9f65%22%2C%22exportedName%22%3A%22suggestServerOrder%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%7D%5D%5D%5D&__client_imported__=true!\n");

/***/ }),

/***/ "(action-browser)/./src/ai/flows/suggest-server-order-flow.ts":
/*!***************************************************!*\
  !*** ./src/ai/flows/suggest-server-order-flow.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   suggestServerOrder: () => (/* binding */ suggestServerOrder)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ai_genkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/ai/genkit */ \"(action-browser)/./src/ai/genkit.ts\");\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! genkit */ \"(action-browser)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"401948dddbe769be921caa36c53c2f42ff64fe9f65\":\"suggestServerOrder\"} */ \n\n\n\nconst SuggestServerOrderInputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    servers: genkit__WEBPACK_IMPORTED_MODULE_3__.z.array(genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n        id: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string(),\n        name: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string(),\n        ipAddress: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string()\n    })).describe('List of available servers'),\n    context: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('User context for server ordering')\n});\nconst SuggestServerOrderOutputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    orderedServerIds: genkit__WEBPACK_IMPORTED_MODULE_3__.z.array(genkit__WEBPACK_IMPORTED_MODULE_3__.z.string()).describe('Server IDs in optimal order: [source, intermediate, destination]'),\n    reason: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('Explanation for the server ordering in Persian')\n});\nasync function suggestServerOrder(input) {\n    return suggestServerOrderFlow(input);\n}\nconst prompt = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.definePrompt({\n    name: 'suggestServerOrderPrompt',\n    input: {\n        schema: SuggestServerOrderInputSchema\n    },\n    output: {\n        schema: SuggestServerOrderOutputSchema\n    },\n    prompt: `شما متخصص شبکه هستید. وظیفه شما تعیین بهترین ترتیب سرورها برای combined tunnel است.\n\nقوانین:\n- سرور اول: Source (منبع)\n- سرور دوم: Intermediate (واسط) \n- سرور سوم: Destination (مقصد)\n\nراهنماییها:\n- سرور ایران معمولاً بهتر است Source باشد\n- سرور اروپا/آمریکا بهتر است Destination باشد\n- سرور با بهترین اتصال بین دو سرور دیگر، Intermediate مناسبی است\n\nسرورهای موجود:\n{{{servers}}}\n\nبافت کاربر:\n{{{context}}}\n\nبهترین ترتیب سرورها را تعیین کنید و دلیل انتخابتان را به فارسی توضیح دهید.`\n});\nconst suggestServerOrderFlow = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.defineFlow({\n    name: 'suggestServerOrderFlow',\n    inputSchema: SuggestServerOrderInputSchema,\n    outputSchema: SuggestServerOrderOutputSchema\n}, async (input)=>{\n    const { output } = await prompt(input);\n    return output;\n});\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_4__.ensureServerEntryExports)([\n    suggestServerOrder\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(suggestServerOrder, \"401948dddbe769be921caa36c53c2f42ff64fe9f65\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9haS9mbG93cy9zdWdnZXN0LXNlcnZlci1vcmRlci1mbG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUUrQjtBQUNOO0FBRXpCLE1BQU1FLGdDQUFnQ0QscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUM3Q0MsU0FBU0gscUNBQUNBLENBQUNJLEtBQUssQ0FBQ0oscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztRQUN4QkcsSUFBSUwscUNBQUNBLENBQUNNLE1BQU07UUFDWkMsTUFBTVAscUNBQUNBLENBQUNNLE1BQU07UUFDZEUsV0FBV1IscUNBQUNBLENBQUNNLE1BQU07SUFDckIsSUFBSUcsUUFBUSxDQUFDO0lBQ2JDLFNBQVNWLHFDQUFDQSxDQUFDTSxNQUFNLEdBQUdHLFFBQVEsQ0FBQztBQUMvQjtBQUVBLE1BQU1FLGlDQUFpQ1gscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUM5Q1Usa0JBQWtCWixxQ0FBQ0EsQ0FBQ0ksS0FBSyxDQUFDSixxQ0FBQ0EsQ0FBQ00sTUFBTSxJQUFJRyxRQUFRLENBQUM7SUFDL0NJLFFBQVFiLHFDQUFDQSxDQUFDTSxNQUFNLEdBQUdHLFFBQVEsQ0FBQztBQUM5QjtBQUtPLGVBQWVLLG1CQUFtQkMsS0FBOEI7SUFDckUsT0FBT0MsdUJBQXVCRDtBQUNoQztBQUVBLE1BQU1FLFNBQVNsQiwwQ0FBRUEsQ0FBQ21CLFlBQVksQ0FBQztJQUM3QlgsTUFBTTtJQUNOUSxPQUFPO1FBQUNJLFFBQVFsQjtJQUE2QjtJQUM3Q21CLFFBQVE7UUFBQ0QsUUFBUVI7SUFBOEI7SUFDL0NNLFFBQVEsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBFQWtCK0QsQ0FBQztBQUMzRTtBQUVBLE1BQU1ELHlCQUF5QmpCLDBDQUFFQSxDQUFDc0IsVUFBVSxDQUMxQztJQUNFZCxNQUFNO0lBQ05lLGFBQWFyQjtJQUNic0IsY0FBY1o7QUFDaEIsR0FDQSxPQUFNSTtJQUNKLE1BQU0sRUFBQ0ssTUFBTSxFQUFDLEdBQUcsTUFBTUgsT0FBT0Y7SUFDOUIsT0FBT0s7QUFDVDs7O0lBdENvQk47O0FBQUFBLDBGQUFBQSxDQUFBQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb24tbWFpblxcc3JjXFxhaVxcZmxvd3NcXHN1Z2dlc3Qtc2VydmVyLW9yZGVyLWZsb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInO1xuXG5pbXBvcnQge2FpfSBmcm9tICdAL2FpL2dlbmtpdCc7XG5pbXBvcnQge3p9IGZyb20gJ2dlbmtpdCc7XG5cbmNvbnN0IFN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICBzZXJ2ZXJzOiB6LmFycmF5KHoub2JqZWN0KHtcbiAgICBpZDogei5zdHJpbmcoKSxcbiAgICBuYW1lOiB6LnN0cmluZygpLFxuICAgIGlwQWRkcmVzczogei5zdHJpbmcoKVxuICB9KSkuZGVzY3JpYmUoJ0xpc3Qgb2YgYXZhaWxhYmxlIHNlcnZlcnMnKSxcbiAgY29udGV4dDogei5zdHJpbmcoKS5kZXNjcmliZSgnVXNlciBjb250ZXh0IGZvciBzZXJ2ZXIgb3JkZXJpbmcnKVxufSk7XG5cbmNvbnN0IFN1Z2dlc3RTZXJ2ZXJPcmRlck91dHB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgb3JkZXJlZFNlcnZlcklkczogei5hcnJheSh6LnN0cmluZygpKS5kZXNjcmliZSgnU2VydmVyIElEcyBpbiBvcHRpbWFsIG9yZGVyOiBbc291cmNlLCBpbnRlcm1lZGlhdGUsIGRlc3RpbmF0aW9uXScpLFxuICByZWFzb246IHouc3RyaW5nKCkuZGVzY3JpYmUoJ0V4cGxhbmF0aW9uIGZvciB0aGUgc2VydmVyIG9yZGVyaW5nIGluIFBlcnNpYW4nKVxufSk7XG5cbmV4cG9ydCB0eXBlIFN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0ID0gei5pbmZlcjx0eXBlb2YgU3VnZ2VzdFNlcnZlck9yZGVySW5wdXRTY2hlbWE+O1xuZXhwb3J0IHR5cGUgU3VnZ2VzdFNlcnZlck9yZGVyT3V0cHV0ID0gei5pbmZlcjx0eXBlb2YgU3VnZ2VzdFNlcnZlck9yZGVyT3V0cHV0U2NoZW1hPjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1Z2dlc3RTZXJ2ZXJPcmRlcihpbnB1dDogU3VnZ2VzdFNlcnZlck9yZGVySW5wdXQpOiBQcm9taXNlPFN1Z2dlc3RTZXJ2ZXJPcmRlck91dHB1dD4ge1xuICByZXR1cm4gc3VnZ2VzdFNlcnZlck9yZGVyRmxvdyhpbnB1dCk7XG59XG5cbmNvbnN0IHByb21wdCA9IGFpLmRlZmluZVByb21wdCh7XG4gIG5hbWU6ICdzdWdnZXN0U2VydmVyT3JkZXJQcm9tcHQnLFxuICBpbnB1dDoge3NjaGVtYTogU3VnZ2VzdFNlcnZlck9yZGVySW5wdXRTY2hlbWF9LFxuICBvdXRwdXQ6IHtzY2hlbWE6IFN1Z2dlc3RTZXJ2ZXJPcmRlck91dHB1dFNjaGVtYX0sXG4gIHByb21wdDogYNi02YXYpyDZhdiq2K7Ytdi1INi02KjaqdmHINmH2LPYqtuM2K8uINmI2LjbjNmB2Ycg2LTZhdinINiq2LnbjNuM2YYg2KjZh9iq2LHbjNmGINiq2LHYqtuM2Kgg2LPYsdmI2LHZh9inINio2LHYp9uMIGNvbWJpbmVkIHR1bm5lbCDYp9iz2KouXG5cbtmC2YjYp9mG24zZhjpcbi0g2LPYsdmI2LEg2KfZiNmEOiBTb3VyY2UgKNmF2YbYqNi5KVxuLSDYs9ix2YjYsSDYr9mI2YU6IEludGVybWVkaWF0ZSAo2YjYp9iz2LcpIFxuLSDYs9ix2YjYsSDYs9mI2YU6IERlc3RpbmF0aW9uICjZhdmC2LXYrylcblxu2LHYp9mH2YbZhdin24zbjNmH2Kc6XG4tINiz2LHZiNixINin24zYsdin2YYg2YXYudmF2YjZhNin2Ysg2KjZh9iq2LEg2KfYs9iqIFNvdXJjZSDYqNin2LTYr1xuLSDYs9ix2YjYsSDYp9ix2YjZvtinL9ii2YXYsduM2qnYpyDYqNmH2KrYsSDYp9iz2KogRGVzdGluYXRpb24g2KjYp9i02K9cbi0g2LPYsdmI2LEg2KjYpyDYqNmH2KrYsduM2YYg2KfYqti12KfZhCDYqNuM2YYg2K/ZiCDYs9ix2YjYsSDYr9uM2q/YsdiMIEludGVybWVkaWF0ZSDZhdmG2KfYs9io24wg2KfYs9iqXG5cbtiz2LHZiNix2YfYp9uMINmF2YjYrNmI2K86XG57e3tzZXJ2ZXJzfX19XG5cbtio2KfZgdiqINqp2KfYsdio2LE6XG57e3tjb250ZXh0fX19XG5cbtio2YfYqtix24zZhiDYqtix2KrbjNioINiz2LHZiNix2YfYpyDYsdinINiq2LnbjNuM2YYg2qnZhtuM2K8g2Ygg2K/ZhNuM2YQg2KfZhtiq2K7Yp9io2KrYp9mGINix2Kcg2KjZhyDZgdin2LHYs9uMINiq2YjYttuM2K0g2K/Zh9uM2K8uYCxcbn0pO1xuXG5jb25zdCBzdWdnZXN0U2VydmVyT3JkZXJGbG93ID0gYWkuZGVmaW5lRmxvdyhcbiAge1xuICAgIG5hbWU6ICdzdWdnZXN0U2VydmVyT3JkZXJGbG93JyxcbiAgICBpbnB1dFNjaGVtYTogU3VnZ2VzdFNlcnZlck9yZGVySW5wdXRTY2hlbWEsXG4gICAgb3V0cHV0U2NoZW1hOiBTdWdnZXN0U2VydmVyT3JkZXJPdXRwdXRTY2hlbWEsXG4gIH0sXG4gIGFzeW5jIGlucHV0ID0+IHtcbiAgICBjb25zdCB7b3V0cHV0fSA9IGF3YWl0IHByb21wdChpbnB1dCk7XG4gICAgcmV0dXJuIG91dHB1dCE7XG4gIH1cbik7Il0sIm5hbWVzIjpbImFpIiwieiIsIlN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0U2NoZW1hIiwib2JqZWN0Iiwic2VydmVycyIsImFycmF5IiwiaWQiLCJzdHJpbmciLCJuYW1lIiwiaXBBZGRyZXNzIiwiZGVzY3JpYmUiLCJjb250ZXh0IiwiU3VnZ2VzdFNlcnZlck9yZGVyT3V0cHV0U2NoZW1hIiwib3JkZXJlZFNlcnZlcklkcyIsInJlYXNvbiIsInN1Z2dlc3RTZXJ2ZXJPcmRlciIsImlucHV0Iiwic3VnZ2VzdFNlcnZlck9yZGVyRmxvdyIsInByb21wdCIsImRlZmluZVByb21wdCIsInNjaGVtYSIsIm91dHB1dCIsImRlZmluZUZsb3ciLCJpbnB1dFNjaGVtYSIsIm91dHB1dFNjaGVtYSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./src/ai/flows/suggest-server-order-flow.ts\n");

/***/ }),

/***/ "(action-browser)/./src/ai/flows/suggest-tunnel-flow.ts":
/*!*********************************************!*\
  !*** ./src/ai/flows/suggest-tunnel-flow.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   suggestTunnel: () => (/* binding */ suggestTunnel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ai_genkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/ai/genkit */ \"(action-browser)/./src/ai/genkit.ts\");\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! genkit */ \"(action-browser)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/types */ \"(action-browser)/./src/lib/types.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"401ae30b412cc79b62a840f40bdb1486f250542779\":\"suggestTunnel\"} */ \n\n/**\n * @fileOverview An AI flow to suggest the best tunnel type based on user context.\n *\n * - suggestTunnel - A function that suggests a tunnel type.\n * - SuggestTunnelInput - The input type for the suggestTunnel function.\n * - SuggestTunnelOutput - The return type for the suggestTunnel function.\n */ \n\n\nconst SuggestTunnelInputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    context: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('The user\\'s description of their needs, network conditions, or goals.')\n});\nconst SuggestTunnelOutputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    tunnelType: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe(`The suggested tunnel type. Must be one of the following values: [${_lib_types__WEBPACK_IMPORTED_MODULE_4__.tunnelTypes.join(', ')}]`),\n    reason: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('A brief explanation for why this tunnel type was recommended, based on the user\\'s context.')\n});\nasync function suggestTunnel(input) {\n    return suggestTunnelFlow(input);\n}\nconst prompt = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.definePrompt({\n    name: 'suggestTunnelPrompt',\n    input: {\n        schema: SuggestTunnelInputSchema\n    },\n    output: {\n        schema: SuggestTunnelOutputSchema\n    },\n    prompt: `شما یک متخصص شبکه و امنیت کامپیوتر هستید. وظیفه شما پیشنهاد بهترین نوع تونل برای کاربر بر اساس نیازهایش است.\n\nبافت کاربر را تحلیل کنید و مناسب‌ترین نوع تونل را از گزینه‌های موجود انتخاب کنید.\n\nانواع تونل موجود: ${_lib_types__WEBPACK_IMPORTED_MODULE_4__.tunnelTypes.join(', ')}\n\nراهنمایی‌های تخصصی:\n- برای سرورهای ایران، WireGuard بهترین تعادل سرعت و امنیت را ارائه می‌دهد. OpenVPN جایگزین خوبی است.\n- از GRE/IPIP فقط زمانی استفاده کنید که رمزگذاری یا مخفی‌سازی نیاز نیست، معمولاً برای شبکه‌های داخلی تمیز.\n- V2Ray (WS+TLS) بهترین انتخاب برای شبکه‌هایی با Deep Packet Inspection (DPI) یا سانسور سنگین است.\n- Reverse Tunnel (via SSH) زمانی ضروری است که سرور مقصد پشت NAT یا فایروال باشد و پورت باز نداشته باشد.\n\nبافت کاربر:\n{{{context}}}\n\nبر اساس بافت، بهترین نوع تونل و دلیل مختصر انتخابتان را به فارسی ارائه دهید.\n`\n});\nconst suggestTunnelFlow = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.defineFlow({\n    name: 'suggestTunnelFlow',\n    inputSchema: SuggestTunnelInputSchema,\n    outputSchema: SuggestTunnelOutputSchema\n}, async (input)=>{\n    const { output } = await prompt(input);\n    return output;\n});\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__.ensureServerEntryExports)([\n    suggestTunnel\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(suggestTunnel, \"401ae30b412cc79b62a840f40bdb1486f250542779\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9haS9mbG93cy9zdWdnZXN0LXR1bm5lbC1mbG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQTs7Ozs7O0NBTUMsR0FFOEI7QUFDTjtBQUNpQjtBQUUxQyxNQUFNRywyQkFBMkJGLHFDQUFDQSxDQUFDRyxNQUFNLENBQUM7SUFDeENDLFNBQVNKLHFDQUFDQSxDQUFDSyxNQUFNLEdBQUdDLFFBQVEsQ0FBQztBQUMvQjtBQUdBLE1BQU1DLDRCQUE0QlAscUNBQUNBLENBQUNHLE1BQU0sQ0FBQztJQUN6Q0ssWUFBWVIscUNBQUNBLENBQUNLLE1BQU0sR0FBR0MsUUFBUSxDQUFDLENBQUMsaUVBQWlFLEVBQUVMLG1EQUFXQSxDQUFDUSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0hDLFFBQVFWLHFDQUFDQSxDQUFDSyxNQUFNLEdBQUdDLFFBQVEsQ0FBQztBQUM5QjtBQUlPLGVBQWVLLGNBQWNDLEtBQXlCO0lBQzNELE9BQU9DLGtCQUFrQkQ7QUFDM0I7QUFFQSxNQUFNRSxTQUFTZiwwQ0FBRUEsQ0FBQ2dCLFlBQVksQ0FBQztJQUM3QkMsTUFBTTtJQUNOSixPQUFPO1FBQUNLLFFBQVFmO0lBQXdCO0lBQ3hDZ0IsUUFBUTtRQUFDRCxRQUFRVjtJQUF5QjtJQUMxQ08sUUFBUSxDQUFDOzs7O2tCQUlPLEVBQUViLG1EQUFXQSxDQUFDUSxJQUFJLENBQUMsTUFBTTs7Ozs7Ozs7Ozs7O0FBWTNDLENBQUM7QUFDRDtBQUVBLE1BQU1JLG9CQUFvQmQsMENBQUVBLENBQUNvQixVQUFVLENBQ3JDO0lBQ0VILE1BQU07SUFDTkksYUFBYWxCO0lBQ2JtQixjQUFjZDtBQUNoQixHQUNBLE9BQU1LO0lBQ0osTUFBTSxFQUFDTSxNQUFNLEVBQUMsR0FBRyxNQUFNSixPQUFPRjtJQUM5QixPQUFPTTtBQUNUOzs7SUFwQ29CUDs7QUFBQUEsMEZBQUFBLENBQUFBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvbi1tYWluXFxzcmNcXGFpXFxmbG93c1xcc3VnZ2VzdC10dW5uZWwtZmxvdy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG4vKipcbiAqIEBmaWxlT3ZlcnZpZXcgQW4gQUkgZmxvdyB0byBzdWdnZXN0IHRoZSBiZXN0IHR1bm5lbCB0eXBlIGJhc2VkIG9uIHVzZXIgY29udGV4dC5cbiAqXG4gKiAtIHN1Z2dlc3RUdW5uZWwgLSBBIGZ1bmN0aW9uIHRoYXQgc3VnZ2VzdHMgYSB0dW5uZWwgdHlwZS5cbiAqIC0gU3VnZ2VzdFR1bm5lbElucHV0IC0gVGhlIGlucHV0IHR5cGUgZm9yIHRoZSBzdWdnZXN0VHVubmVsIGZ1bmN0aW9uLlxuICogLSBTdWdnZXN0VHVubmVsT3V0cHV0IC0gVGhlIHJldHVybiB0eXBlIGZvciB0aGUgc3VnZ2VzdFR1bm5lbCBmdW5jdGlvbi5cbiAqL1xuXG5pbXBvcnQge2FpfSBmcm9tICdAL2FpL2dlbmtpdCc7XG5pbXBvcnQge3p9IGZyb20gJ2dlbmtpdCc7XG5pbXBvcnQgeyB0dW5uZWxUeXBlcyB9IGZyb20gJ0AvbGliL3R5cGVzJztcblxuY29uc3QgU3VnZ2VzdFR1bm5lbElucHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICBjb250ZXh0OiB6LnN0cmluZygpLmRlc2NyaWJlKCdUaGUgdXNlclxcJ3MgZGVzY3JpcHRpb24gb2YgdGhlaXIgbmVlZHMsIG5ldHdvcmsgY29uZGl0aW9ucywgb3IgZ29hbHMuJyksXG59KTtcbmV4cG9ydCB0eXBlIFN1Z2dlc3RUdW5uZWxJbnB1dCA9IHouaW5mZXI8dHlwZW9mIFN1Z2dlc3RUdW5uZWxJbnB1dFNjaGVtYT47XG5cbmNvbnN0IFN1Z2dlc3RUdW5uZWxPdXRwdXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHR1bm5lbFR5cGU6IHouc3RyaW5nKCkuZGVzY3JpYmUoYFRoZSBzdWdnZXN0ZWQgdHVubmVsIHR5cGUuIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgdmFsdWVzOiBbJHt0dW5uZWxUeXBlcy5qb2luKCcsICcpfV1gKSxcbiAgcmVhc29uOiB6LnN0cmluZygpLmRlc2NyaWJlKCdBIGJyaWVmIGV4cGxhbmF0aW9uIGZvciB3aHkgdGhpcyB0dW5uZWwgdHlwZSB3YXMgcmVjb21tZW5kZWQsIGJhc2VkIG9uIHRoZSB1c2VyXFwncyBjb250ZXh0LicpLFxufSk7XG5leHBvcnQgdHlwZSBTdWdnZXN0VHVubmVsT3V0cHV0ID0gei5pbmZlcjx0eXBlb2YgU3VnZ2VzdFR1bm5lbE91dHB1dFNjaGVtYT47XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1Z2dlc3RUdW5uZWwoaW5wdXQ6IFN1Z2dlc3RUdW5uZWxJbnB1dCk6IFByb21pc2U8U3VnZ2VzdFR1bm5lbE91dHB1dD4ge1xuICByZXR1cm4gc3VnZ2VzdFR1bm5lbEZsb3coaW5wdXQpO1xufVxuXG5jb25zdCBwcm9tcHQgPSBhaS5kZWZpbmVQcm9tcHQoe1xuICBuYW1lOiAnc3VnZ2VzdFR1bm5lbFByb21wdCcsXG4gIGlucHV0OiB7c2NoZW1hOiBTdWdnZXN0VHVubmVsSW5wdXRTY2hlbWF9LFxuICBvdXRwdXQ6IHtzY2hlbWE6IFN1Z2dlc3RUdW5uZWxPdXRwdXRTY2hlbWF9LFxuICBwcm9tcHQ6IGDYtNmF2Kcg24zaqSDZhdiq2K7Ytdi1INi02KjaqdmHINmIINin2YXZhtuM2Kog2qnYp9mF2b7bjNmI2KrYsSDZh9iz2KrbjNivLiDZiNi424zZgdmHINi02YXYpyDZvtuM2LTZhtmH2KfYryDYqNmH2KrYsduM2YYg2YbZiNi5INiq2YjZhtmEINio2LHYp9uMINqp2KfYsdio2LEg2KjYsSDYp9iz2KfYsyDZhtuM2KfYstmH2KfbjNi0INin2LPYqi5cblxu2KjYp9mB2Kog2qnYp9ix2KjYsSDYsdinINiq2K3ZhNuM2YQg2qnZhtuM2K8g2Ygg2YXZhtin2LPYqOKAjNiq2LHbjNmGINmG2YjYuSDYqtmI2YbZhCDYsdinINin2LIg2q/YstuM2YbZh+KAjNmH2KfbjCDZhdmI2KzZiNivINin2YbYqtiu2KfYqCDaqdmG24zYry5cblxu2KfZhtmI2KfYuSDYqtmI2YbZhCDZhdmI2KzZiNivOiAke3R1bm5lbFR5cGVzLmpvaW4oJywgJyl9XG5cbtix2KfZh9mG2YXYp9uM24zigIzZh9in24wg2KrYrti12LXbjDpcbi0g2KjYsdin24wg2LPYsdmI2LHZh9in24wg2KfbjNix2KfZhtiMIFdpcmVHdWFyZCDYqNmH2KrYsduM2YYg2KrYudin2K/ZhCDYs9ix2LnYqiDZiCDYp9mF2YbbjNiqINix2Kcg2KfYsdin2KbZhyDZhduM4oCM2K/Zh9ivLiBPcGVuVlBOINis2KfbjNqv2LLbjNmGINiu2YjYqNuMINin2LPYqi5cbi0g2KfYsiBHUkUvSVBJUCDZgdmC2Lcg2LLZhdin2YbbjCDYp9iz2KrZgdin2K/ZhyDaqdmG24zYryDaqdmHINix2YXYstqv2LDYp9ix24wg24zYpyDZhdiu2YHbjOKAjNiz2KfYstuMINmG24zYp9iyINmG24zYs9iq2Iwg2YXYudmF2YjZhNin2Ysg2KjYsdin24wg2LTYqNqp2YfigIzZh9in24wg2K/Yp9iu2YTbjCDYqtmF24zYsi5cbi0gVjJSYXkgKFdTK1RMUykg2KjZh9iq2LHbjNmGINin2YbYqtiu2KfYqCDYqNix2KfbjCDYtNio2qnZh+KAjNmH2KfbjNuMINio2KcgRGVlcCBQYWNrZXQgSW5zcGVjdGlvbiAoRFBJKSDbjNinINiz2KfZhtiz2YjYsSDYs9mG2q/bjNmGINin2LPYqi5cbi0gUmV2ZXJzZSBUdW5uZWwgKHZpYSBTU0gpINiy2YXYp9mG24wg2LbYsdmI2LHbjCDYp9iz2Kog2qnZhyDYs9ix2YjYsSDZhdmC2LXYryDZvti02KogTkFUINuM2Kcg2YHYp9uM2LHZiNin2YQg2KjYp9i02K8g2Ygg2b7ZiNix2Kog2KjYp9iyINmG2K/Yp9i02KrZhyDYqNin2LTYry5cblxu2KjYp9mB2Kog2qnYp9ix2KjYsTpcbnt7e2NvbnRleHR9fX1cblxu2KjYsSDYp9iz2KfYsyDYqNin2YHYqtiMINio2YfYqtix24zZhiDZhtmI2Lkg2KrZiNmG2YQg2Ygg2K/ZhNuM2YQg2YXYrtiq2LXYsSDYp9mG2KrYrtin2KjYqtin2YYg2LHYpyDYqNmHINmB2KfYsdiz24wg2KfYsdin2KbZhyDYr9mH24zYry5cbmAsXG59KTtcblxuY29uc3Qgc3VnZ2VzdFR1bm5lbEZsb3cgPSBhaS5kZWZpbmVGbG93KFxuICB7XG4gICAgbmFtZTogJ3N1Z2dlc3RUdW5uZWxGbG93JyxcbiAgICBpbnB1dFNjaGVtYTogU3VnZ2VzdFR1bm5lbElucHV0U2NoZW1hLFxuICAgIG91dHB1dFNjaGVtYTogU3VnZ2VzdFR1bm5lbE91dHB1dFNjaGVtYSxcbiAgfSxcbiAgYXN5bmMgaW5wdXQgPT4ge1xuICAgIGNvbnN0IHtvdXRwdXR9ID0gYXdhaXQgcHJvbXB0KGlucHV0KTtcbiAgICByZXR1cm4gb3V0cHV0ITtcbiAgfVxuKTtcbiJdLCJuYW1lcyI6WyJhaSIsInoiLCJ0dW5uZWxUeXBlcyIsIlN1Z2dlc3RUdW5uZWxJbnB1dFNjaGVtYSIsIm9iamVjdCIsImNvbnRleHQiLCJzdHJpbmciLCJkZXNjcmliZSIsIlN1Z2dlc3RUdW5uZWxPdXRwdXRTY2hlbWEiLCJ0dW5uZWxUeXBlIiwiam9pbiIsInJlYXNvbiIsInN1Z2dlc3RUdW5uZWwiLCJpbnB1dCIsInN1Z2dlc3RUdW5uZWxGbG93IiwicHJvbXB0IiwiZGVmaW5lUHJvbXB0IiwibmFtZSIsInNjaGVtYSIsIm91dHB1dCIsImRlZmluZUZsb3ciLCJpbnB1dFNjaGVtYSIsIm91dHB1dFNjaGVtYSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./src/ai/flows/suggest-tunnel-flow.ts\n");

/***/ }),

/***/ "(action-browser)/./src/ai/genkit.ts":
/*!**************************!*\
  !*** ./src/ai/genkit.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ai: () => (/* binding */ ai)\n/* harmony export */ });\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! genkit */ \"(action-browser)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var _genkit_ai_googleai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @genkit-ai/googleai */ \"(action-browser)/./node_modules/@genkit-ai/googleai/lib/index.mjs\");\n\n\nconst ai = (0,genkit__WEBPACK_IMPORTED_MODULE_0__.genkit)({\n    plugins: [\n        (0,_genkit_ai_googleai__WEBPACK_IMPORTED_MODULE_1__.googleAI)()\n    ],\n    model: 'googleai/gemini-2.5-flash'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9haS9nZW5raXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThCO0FBQ2U7QUFFdEMsTUFBTUUsS0FBS0YsOENBQU1BLENBQUM7SUFDdkJHLFNBQVM7UUFBQ0YsNkRBQVFBO0tBQUc7SUFDckJHLE9BQU87QUFDVCxHQUFHIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvbi1tYWluXFxzcmNcXGFpXFxnZW5raXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZW5raXR9IGZyb20gJ2dlbmtpdCc7XG5pbXBvcnQge2dvb2dsZUFJfSBmcm9tICdAZ2Vua2l0LWFpL2dvb2dsZWFpJztcblxuZXhwb3J0IGNvbnN0IGFpID0gZ2Vua2l0KHtcbiAgcGx1Z2luczogW2dvb2dsZUFJKCldLFxuICBtb2RlbDogJ2dvb2dsZWFpL2dlbWluaS0yLjUtZmxhc2gnLFxufSk7XG4iXSwibmFtZXMiOlsiZ2Vua2l0IiwiZ29vZ2xlQUkiLCJhaSIsInBsdWdpbnMiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./src/ai/genkit.ts\n");

/***/ }),

/***/ "(action-browser)/./src/lib/types.ts":
/*!**************************!*\
  !*** ./src/lib/types.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tunnelTypes: () => (/* binding */ tunnelTypes)\n/* harmony export */ });\nconst tunnelTypes = [\n    \"WireGuard\",\n    \"OpenVPN\",\n    \"IPIP\",\n    \"GRE\",\n    \"SIT\",\n    \"VTI\",\n    \"IPsec\",\n    \"V2Ray (WS+TLS)\",\n    \"Reverse Tunnel (via SSH)\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9saWIvdHlwZXMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQWNPLE1BQU1BLGNBQWM7SUFDekI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0QsQ0FBVSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb24tbWFpblxcc3JjXFxsaWJcXHR5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9iamVjdElkIH0gZnJvbSAnbW9uZ29kYic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VydmVyIHtcbiAgX2lkOiBPYmplY3RJZDtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBpcEFkZHJlc3M6IHN0cmluZztcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgc3NoUG9ydD86IG51bWJlcjtcbiAgcGFzc3dvcmQ/OiBzdHJpbmc7XG4gIHNzaEtleT86IHN0cmluZztcbiAgc3NoS2V5Q29uZmlndXJlZD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCB0dW5uZWxUeXBlcyA9IFtcbiAgXCJXaXJlR3VhcmRcIixcbiAgXCJPcGVuVlBOXCIsXG4gIFwiSVBJUFwiLFxuICBcIkdSRVwiLFxuICBcIlNJVFwiLFxuICBcIlZUSVwiLFxuICBcIklQc2VjXCIsXG4gIFwiVjJSYXkgKFdTK1RMUylcIixcbiAgXCJSZXZlcnNlIFR1bm5lbCAodmlhIFNTSClcIixcbl0gYXMgY29uc3Q7XG5cbmV4cG9ydCB0eXBlIFR1bm5lbFR5cGUgPSAodHlwZW9mIHR1bm5lbFR5cGVzKVtudW1iZXJdO1xuXG5leHBvcnQgaW50ZXJmYWNlIExvZ0VudHJ5IHtcbiAgdHlwZTogJ2luZm8nIHwgJ3N1Y2Nlc3MnIHwgJ2Vycm9yJyB8ICdjb21tYW5kJyB8ICd3YXJuaW5nJztcbiAgbWVzc2FnZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFR1bm5lbENyZWF0aW9uUmVzdWx0IHtcbiAgc3VjY2VzczogYm9vbGVhbjtcbiAgbG9nczogTG9nRW50cnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUdW5uZWwge1xuICBfaWQ6IE9iamVjdElkO1xuICBpZDogc3RyaW5nO1xuICBzZXJ2ZXIxSWQ6IHN0cmluZztcbiAgc2VydmVyMklkOiBzdHJpbmc7XG4gIHR5cGU6IFR1bm5lbFR5cGU7XG4gIGNyZWF0ZWRBdDogc3RyaW5nO1xuICB0dW5uZWxOYW1lOiBzdHJpbmc7XG4gIHR1bm5lbElwMTogc3RyaW5nO1xuICB0dW5uZWxJcDI6IHN0cmluZztcbiAgaXNTYXZlZDogYm9vbGVhbjtcbiAgZG9tYWluPzogc3RyaW5nO1xuICBsYXRlbmN5PzogbnVtYmVyIHwgbnVsbDtcbiAgaXNQaW5naW5nPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb2xvcnMge1xuICBjaGFsa3k6IHN0cmluZztcbiAgY29yYWw6IHN0cmluZztcbiAgY3lhbjogc3RyaW5nO1xuICBlcnJvcjogc3RyaW5nO1xuICBpdm9yeTogc3RyaW5nO1xuICBtYWxpYnU6IHN0cmluZztcbiAgc2FnZTogc3RyaW5nO1xuICBzdG9uZTogc3RyaW5nO1xuICB2aW9sZXQ6IHN0cmluZztcbiAgd2hpc2tleTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRva2VuR3JvdXAge1xuICBuYW1lOiBzdHJpbmdcbiAgc2NvcGU6IHN0cmluZ1tdXG4gIHNldHRpbmdzOiB7XG4gICAgZm9yZWdyb3VuZD86IHN0cmluZ1xuICAgIGZvbnRTdHlsZT86IHN0cmluZ1xuICB9XG59XG4iXSwibmFtZXMiOlsidHVubmVsVHlwZXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./src/lib/types.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?6a4d\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/./node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_app_render_strip_flight_headers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/app-render/strip-flight-headers */ \"(rsc)/./node_modules/next/dist/server/app-render/strip-flight-headers.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/./node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/./node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/./node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/./node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/./node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/./node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/./node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/./node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/./node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/./node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\nconst page5 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page5, \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\"],\n'global-error': [module1, \"next/dist/client/components/builtin/global-error.js\"],\n'not-found': [module2, \"next/dist/client/components/builtin/not-found.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\page.tsx\"];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig, interceptionRoutePatterns } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = routeModule.match(pathname, prerenderManifest);\n    const isPrerendered = !!prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_ROUTER_PREFETCH_HEADER] === '1' // exclude runtime prefetches, which use '2'\n    ;\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (!routeModule.isDev && !isDraftMode && isSSG && isRSCRequest && !isDynamicRSCRequest) {\n        (0,next_dist_server_app_render_strip_flight_headers__WEBPACK_IMPORTED_MODULE_7__.stripFlightHeaders)(req.headers);\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const varyHeader = routeModule.getVaryHeader(resolvedPathname, interceptionRoutePatterns);\n        res.setHeader('Vary', varyHeader);\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.cacheComponents && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir:  true ? (__webpack_require__(/*! path */ \"path\").join)(/* turbopackIgnore: true */ process.cwd(), routeModule.relativeProjectDir) : 0,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        clientParamParsing: Boolean(nextConfig.experimental.clientParamParsing),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a HTML bot request, we want to serve a blocking render and\n            // not the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__.isBot)(userAgent)) {\n                if (!isRoutePPREnabled || isHtmlBot) {\n                    fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER;\n                }\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    const cacheKey = typeof (prerenderInfo == null ? void 0 : prerenderInfo.fallback) === 'string' ? prerenderInfo.fallback : isProduction ? normalizedSrcPage : null;\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].EMPTY,\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].fromStatic(matchedSegment, next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_CONTENT_TYPE_HEADER),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].EMPTY,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].fromStatic(cachedData.rscData, next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_CONTENT_TYPE_HEADER),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode || isRSCRequest) {\n                // If we're in test mode, we should add a sentinel chunk to the response\n                // that's between the static and dynamic parts so we can compare the\n                // chunks and add assertions.\n                if (false) {}\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.push(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_22__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // If we're in test mode, we should add a sentinel chunk to the response\n            // that's between the static and dynamic parts so we can compare the\n            // chunks and add assertions.\n            if (false) {}\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.push(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                req,\n                res,\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n// TODO: omit this from production builds, only test builds should include it\n/**\n * Creates a readable stream that emits a PPR boundary sentinel.\n *\n * @returns A readable stream that emits a PPR boundary sentinel.\n */ function createPPRBoundarySentinel() {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(new TextEncoder().encode('<!-- PPR_BOUNDARY_SENTINEL -->'));\n            controller.close();\n        }\n    });\n}\n\n//# sourceMappingURL=app-page.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%2C%5B%7B%22id%22%3A%227f045e37cfb753486cbeef333464b8376c7413ef16%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2be93e72ecace55ffeb53e7113b64530cd1914a2%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2c7fb68295e0f2b3ed1be0680eb68418df27ef1e%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f480ccd90a8eec25e41cdb0c47529fe28c3e32cbb%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f5073b0cfb3112ae0828a2a85f77f0e488efc3ceb%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f5986dfb4ad8e8f87562b2b666c909f3e03f39ae6%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f7d16fb26395ca05c1d906ce242ba394c0f34b914%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8057ea857344074dd570791366eac181fdf52737%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f85bb6b3987fb0cc86ac38825109b3ab67f21acf7%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8d32b63e848c31386346fda91b637cbb10658b66%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fb53f28a95092e7b7d9b266ed0d5541aee4831ac5%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fbad9c286bcbdd27c604a3c1d6c7ce2142d70e025%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fc20147cdb397037bb8fe9c46c19b632341b1b701%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fcc71f19d98cf29b51bf1789df1cc8119d605a035%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fda74c952f564d22c03510c71fa90f4c13b321397%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fe6b50979e4ccf29e21f3019909dd1c24e03bb21b%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff6f0b31f612676728adb5d15525389bdc026757c%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffa8a242077b293029e28a1d65275231f2bbc8a6a%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffc2a9f1baf4c30046e078bea1c230bc3550b673b%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffc54d6732ff6b55f51da0fef0cae54a02949fb9a%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffe31aeedd08ab2eaf90674a488d593e924cdf283%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffe89bab8fd520998eeb37779602110e55355ccfc%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffeb1113d1b458dee7da2f2826f0bf2b85b3389ff%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%2C%5B%7B%22id%22%3A%220048e1f1b3c4360d8258c40a9c39cd60291427600d%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004e70a5c368878e0b02b35f518bfdbd671edd6a34%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22007e40449cd05c0ccde33026d0fe57cb3758f5b81d%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%2C%5B%7B%22id%22%3A%2200cd475e61dbe204a22dc8a1773a08b015b85174da%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240295591f30982c017fa74e0bba9ad965c4e0ec7ea%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22406c71ecdf0fd8aed97e8a1847e0d154dc347c7648%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%224074f32334cf6b73bf6c01df2df087e56b9eba31cd%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240dbe7535c2fec12c600d527d7ed3d5bbb254a2a64%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240df54430ad999df63cf882964c534fe560f1309be%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2260855ad9e88b4e443eb833cc0a6900175650d03c97%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%2C%5B%7B%22id%22%3A%22002655ffeb8b56bfb5f781a7721beab4ed9809897d%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%2C%7B%22id%22%3A%22604afe548d22c3f3b8478afe15fa126f33e0c125a3%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%2C%5B%7B%22id%22%3A%22000b64c20439500c04d27cc83b259e25ff7d6f3143%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%224035c159f07876bad8990e6b7037fc8c7456a216f2%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240e10b682b3cc7423d604239ffc6658ced55a04e69%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%2C%5B%7B%22id%22%3A%22783933480a03bd6e6efcbb415da08635aa36f757e7%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%2C%7B%22id%22%3A%227e9c0aab5f0f1eb7017187a1e04370c62f03f9dc1b%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%2C%5B%7B%22id%22%3A%2240942a7bc9e95fa152c974e785820ed6782eb18639%22%2C%22exportedName%22%3A%22getTunnelCommands%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%2C%5B%7B%22id%22%3A%224040539b8229a6e6f5036d732d972b88d124a88b16%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%2C%5B%7B%22id%22%3A%2260e54279e9c636e2b67d11e91ac855b67afd64de81%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%2C%5B%7B%22id%22%3A%220018c6fd9f1357a912fe47d68e5df0ad1b9cac54a2%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2200e611a80b2a0588ce5ce211faaae4edef1e958af1%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%224001295e7cee2450ad12bacad23b2f3acdeee1bd44%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2240d941e0e453240e3425e2245dac44d2f35061530b%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%5D%5D%5D&__client_imported__=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%2C%5B%7B%22id%22%3A%227f045e37cfb753486cbeef333464b8376c7413ef16%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2be93e72ecace55ffeb53e7113b64530cd1914a2%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2c7fb68295e0f2b3ed1be0680eb68418df27ef1e%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f480ccd90a8eec25e41cdb0c47529fe28c3e32cbb%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f5073b0cfb3112ae0828a2a85f77f0e488efc3ceb%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f5986dfb4ad8e8f87562b2b666c909f3e03f39ae6%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f7d16fb26395ca05c1d906ce242ba394c0f34b914%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8057ea857344074dd570791366eac181fdf52737%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f85bb6b3987fb0cc86ac38825109b3ab67f21acf7%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8d32b63e848c31386346fda91b637cbb10658b66%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fb53f28a95092e7b7d9b266ed0d5541aee4831ac5%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fbad9c286bcbdd27c604a3c1d6c7ce2142d70e025%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fc20147cdb397037bb8fe9c46c19b632341b1b701%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fcc71f19d98cf29b51bf1789df1cc8119d605a035%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fda74c952f564d22c03510c71fa90f4c13b321397%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fe6b50979e4ccf29e21f3019909dd1c24e03bb21b%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff6f0b31f612676728adb5d15525389bdc026757c%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffa8a242077b293029e28a1d65275231f2bbc8a6a%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffc2a9f1baf4c30046e078bea1c230bc3550b673b%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffc54d6732ff6b55f51da0fef0cae54a02949fb9a%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffe31aeedd08ab2eaf90674a488d593e924cdf283%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffe89bab8fd520998eeb37779602110e55355ccfc%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffeb1113d1b458dee7da2f2826f0bf2b85b3389ff%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%2C%5B%7B%22id%22%3A%220048e1f1b3c4360d8258c40a9c39cd60291427600d%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004e70a5c368878e0b02b35f518bfdbd671edd6a34%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22007e40449cd05c0ccde33026d0fe57cb3758f5b81d%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%2C%5B%7B%22id%22%3A%2200cd475e61dbe204a22dc8a1773a08b015b85174da%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240295591f30982c017fa74e0bba9ad965c4e0ec7ea%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22406c71ecdf0fd8aed97e8a1847e0d154dc347c7648%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%224074f32334cf6b73bf6c01df2df087e56b9eba31cd%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240dbe7535c2fec12c600d527d7ed3d5bbb254a2a64%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240df54430ad999df63cf882964c534fe560f1309be%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2260855ad9e88b4e443eb833cc0a6900175650d03c97%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%2C%5B%7B%22id%22%3A%22002655ffeb8b56bfb5f781a7721beab4ed9809897d%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%2C%7B%22id%22%3A%22604afe548d22c3f3b8478afe15fa126f33e0c125a3%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%2C%5B%7B%22id%22%3A%22000b64c20439500c04d27cc83b259e25ff7d6f3143%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%224035c159f07876bad8990e6b7037fc8c7456a216f2%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240e10b682b3cc7423d604239ffc6658ced55a04e69%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%2C%5B%7B%22id%22%3A%22783933480a03bd6e6efcbb415da08635aa36f757e7%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%2C%7B%22id%22%3A%227e9c0aab5f0f1eb7017187a1e04370c62f03f9dc1b%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%2C%5B%7B%22id%22%3A%2240942a7bc9e95fa152c974e785820ed6782eb18639%22%2C%22exportedName%22%3A%22getTunnelCommands%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%2C%5B%7B%22id%22%3A%224040539b8229a6e6f5036d732d972b88d124a88b16%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%2C%5B%7B%22id%22%3A%2260e54279e9c636e2b67d11e91ac855b67afd64de81%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%2C%5B%7B%22id%22%3A%220018c6fd9f1357a912fe47d68e5df0ad1b9cac54a2%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2200e611a80b2a0588ce5ce211faaae4edef1e958af1%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%224001295e7cee2450ad12bacad23b2f3acdeee1bd44%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2240d941e0e453240e3425e2245dac44d2f35061530b%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%5D%5D%5D&__client_imported__=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"000b64c20439500c04d27cc83b259e25ff7d6f3143\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__.getTunnels),\n/* harmony export */   \"0018c6fd9f1357a912fe47d68e5df0ad1b9cac54a2\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.exportSettings),\n/* harmony export */   \"002655ffeb8b56bfb5f781a7721beab4ed9809897d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_ssh_ts__WEBPACK_IMPORTED_MODULE_3__.getSshKeys),\n/* harmony export */   \"0048e1f1b3c4360d8258c40a9c39cd60291427600d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getServersCollection),\n/* harmony export */   \"004e70a5c368878e0b02b35f518bfdbd671edd6a34\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getDb),\n/* harmony export */   \"007e40449cd05c0ccde33026d0fe57cb3758f5b81d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getTunnelsCollection),\n/* harmony export */   \"00cd475e61dbe204a22dc8a1773a08b015b85174da\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.getServers),\n/* harmony export */   \"00e611a80b2a0588ce5ce211faaae4edef1e958af1\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.getSettings),\n/* harmony export */   \"4001295e7cee2450ad12bacad23b2f3acdeee1bd44\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.updateSettings),\n/* harmony export */   \"40295591f30982c017fa74e0bba9ad965c4e0ec7ea\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.updateServers),\n/* harmony export */   \"4035c159f07876bad8990e6b7037fc8c7456a216f2\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__.pingTunnel),\n/* harmony export */   \"4040539b8229a6e6f5036d732d972b88d124a88b16\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_persistence_ts__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig),\n/* harmony export */   \"406c71ecdf0fd8aed97e8a1847e0d154dc347c7648\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.cleanupServer),\n/* harmony export */   \"4074f32334cf6b73bf6c01df2df087e56b9eba31cd\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.pingServer),\n/* harmony export */   \"40942a7bc9e95fa152c974e785820ed6782eb18639\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_commands_ts__WEBPACK_IMPORTED_MODULE_6__.getTunnelCommands),\n/* harmony export */   \"40d941e0e453240e3425e2245dac44d2f35061530b\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.importSettings),\n/* harmony export */   \"40dbe7535c2fec12c600d527d7ed3d5bbb254a2a64\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.deleteServer),\n/* harmony export */   \"40df54430ad999df63cf882964c534fe560f1309be\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.addServer),\n/* harmony export */   \"40e10b682b3cc7423d604239ffc6658ced55a04e69\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__.deleteTunnel),\n/* harmony export */   \"604afe548d22c3f3b8478afe15fa126f33e0c125a3\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_ssh_ts__WEBPACK_IMPORTED_MODULE_3__.connectWithKeyManagement),\n/* harmony export */   \"60855ad9e88b4e443eb833cc0a6900175650d03c97\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.updateServer),\n/* harmony export */   \"60e54279e9c636e2b67d11e91ac855b67afd64de81\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_netmaker_ts__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork),\n/* harmony export */   \"783933480a03bd6e6efcbb415da08635aa36f757e7\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_creation_ts__WEBPACK_IMPORTED_MODULE_5__.createTunnel),\n/* harmony export */   \"7e9c0aab5f0f1eb7017187a1e04370c62f03f9dc1b\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_creation_ts__WEBPACK_IMPORTED_MODULE_5__.createCombinedTunnel),\n/* harmony export */   \"7f045e37cfb753486cbeef333464b8376c7413ef16\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.saveTunnelConfig),\n/* harmony export */   \"7f2be93e72ecace55ffeb53e7113b64530cd1914a2\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.cleanupServer),\n/* harmony export */   \"7f2c7fb68295e0f2b3ed1be0680eb68418df27ef1e\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.exportSettings),\n/* harmony export */   \"7f480ccd90a8eec25e41cdb0c47529fe28c3e32cbb\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.updateSettings),\n/* harmony export */   \"7f5073b0cfb3112ae0828a2a85f77f0e488efc3ceb\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.importSettings),\n/* harmony export */   \"7f5986dfb4ad8e8f87562b2b666c909f3e03f39ae6\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.createTunnel),\n/* harmony export */   \"7f7d16fb26395ca05c1d906ce242ba394c0f34b914\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getServers),\n/* harmony export */   \"7f8057ea857344074dd570791366eac181fdf52737\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getSshKeys),\n/* harmony export */   \"7f85bb6b3987fb0cc86ac38825109b3ab67f21acf7\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.updateServer),\n/* harmony export */   \"7f8d32b63e848c31386346fda91b637cbb10658b66\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.addServer),\n/* harmony export */   \"7fb53f28a95092e7b7d9b266ed0d5541aee4831ac5\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.deleteServer),\n/* harmony export */   \"7fbad9c286bcbdd27c604a3c1d6c7ce2142d70e025\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.connectWithKeyManagement),\n/* harmony export */   \"7fc20147cdb397037bb8fe9c46c19b632341b1b701\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getDb),\n/* harmony export */   \"7fcc71f19d98cf29b51bf1789df1cc8119d605a035\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.createCombinedTunnel),\n/* harmony export */   \"7fda74c952f564d22c03510c71fa90f4c13b321397\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getTunnels),\n/* harmony export */   \"7fe6b50979e4ccf29e21f3019909dd1c24e03bb21b\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.createMeshNetwork),\n/* harmony export */   \"7ff6f0b31f612676728adb5d15525389bdc026757c\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getTunnelsCollection),\n/* harmony export */   \"7ffa8a242077b293029e28a1d65275231f2bbc8a6a\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getSettings),\n/* harmony export */   \"7ffc2a9f1baf4c30046e078bea1c230bc3550b673b\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.updateServers),\n/* harmony export */   \"7ffc54d6732ff6b55f51da0fef0cae54a02949fb9a\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getServersCollection),\n/* harmony export */   \"7ffe31aeedd08ab2eaf90674a488d593e924cdf283\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.pingTunnel),\n/* harmony export */   \"7ffe89bab8fd520998eeb37779602110e55355ccfc\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.deleteTunnel),\n/* harmony export */   \"7ffeb1113d1b458dee7da2f2826f0bf2b85b3389ff\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.pingServer)\n/* harmony export */ });\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/app/actions/index.ts */ \"(rsc)/./src/app/actions/index.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/app/actions/db.ts */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/app/actions/server-actions.ts */ \"(rsc)/./src/app/actions/server-actions.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_ssh_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/actions/ssh.ts */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/app/actions/tunnels/core.ts */ \"(rsc)/./src/app/actions/tunnels/core.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_creation_ts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/app/actions/tunnels/creation.ts */ \"(rsc)/./src/app/actions/tunnels/creation.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_commands_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/app/actions/tunnels/commands.ts */ \"(rsc)/./src/app/actions/tunnels/commands.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_persistence_ts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/app/actions/tunnels/persistence.ts */ \"(rsc)/./src/app/actions/tunnels/persistence.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_tunnels_netmaker_ts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/app/actions/tunnels/netmaker.ts */ \"(rsc)/./src/app/actions/tunnels/netmaker.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_main_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/app/actions/settings-actions.ts */ \"(rsc)/./src/app/actions/settings-actions.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%2C%5B%7B%22id%22%3A%227f045e37cfb753486cbeef333464b8376c7413ef16%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2be93e72ecace55ffeb53e7113b64530cd1914a2%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2c7fb68295e0f2b3ed1be0680eb68418df27ef1e%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f480ccd90a8eec25e41cdb0c47529fe28c3e32cbb%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f5073b0cfb3112ae0828a2a85f77f0e488efc3ceb%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f5986dfb4ad8e8f87562b2b666c909f3e03f39ae6%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f7d16fb26395ca05c1d906ce242ba394c0f34b914%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8057ea857344074dd570791366eac181fdf52737%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f85bb6b3987fb0cc86ac38825109b3ab67f21acf7%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8d32b63e848c31386346fda91b637cbb10658b66%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fb53f28a95092e7b7d9b266ed0d5541aee4831ac5%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fbad9c286bcbdd27c604a3c1d6c7ce2142d70e025%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fc20147cdb397037bb8fe9c46c19b632341b1b701%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fcc71f19d98cf29b51bf1789df1cc8119d605a035%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fda74c952f564d22c03510c71fa90f4c13b321397%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fe6b50979e4ccf29e21f3019909dd1c24e03bb21b%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff6f0b31f612676728adb5d15525389bdc026757c%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffa8a242077b293029e28a1d65275231f2bbc8a6a%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffc2a9f1baf4c30046e078bea1c230bc3550b673b%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffc54d6732ff6b55f51da0fef0cae54a02949fb9a%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffe31aeedd08ab2eaf90674a488d593e924cdf283%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffe89bab8fd520998eeb37779602110e55355ccfc%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ffeb1113d1b458dee7da2f2826f0bf2b85b3389ff%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%2C%5B%7B%22id%22%3A%220048e1f1b3c4360d8258c40a9c39cd60291427600d%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004e70a5c368878e0b02b35f518bfdbd671edd6a34%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22007e40449cd05c0ccde33026d0fe57cb3758f5b81d%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%2C%5B%7B%22id%22%3A%2200cd475e61dbe204a22dc8a1773a08b015b85174da%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240295591f30982c017fa74e0bba9ad965c4e0ec7ea%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22406c71ecdf0fd8aed97e8a1847e0d154dc347c7648%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%224074f32334cf6b73bf6c01df2df087e56b9eba31cd%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240dbe7535c2fec12c600d527d7ed3d5bbb254a2a64%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240df54430ad999df63cf882964c534fe560f1309be%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2260855ad9e88b4e443eb833cc0a6900175650d03c97%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%2C%5B%7B%22id%22%3A%22002655ffeb8b56bfb5f781a7721beab4ed9809897d%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%2C%7B%22id%22%3A%22604afe548d22c3f3b8478afe15fa126f33e0c125a3%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%2C%5B%7B%22id%22%3A%22000b64c20439500c04d27cc83b259e25ff7d6f3143%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%224035c159f07876bad8990e6b7037fc8c7456a216f2%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240e10b682b3cc7423d604239ffc6658ced55a04e69%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%2C%5B%7B%22id%22%3A%22783933480a03bd6e6efcbb415da08635aa36f757e7%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%2C%7B%22id%22%3A%227e9c0aab5f0f1eb7017187a1e04370c62f03f9dc1b%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%2C%5B%7B%22id%22%3A%2240942a7bc9e95fa152c974e785820ed6782eb18639%22%2C%22exportedName%22%3A%22getTunnelCommands%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%2C%5B%7B%22id%22%3A%224040539b8229a6e6f5036d732d972b88d124a88b16%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%2C%5B%7B%22id%22%3A%2260e54279e9c636e2b67d11e91ac855b67afd64de81%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%2C%5B%7B%22id%22%3A%220018c6fd9f1357a912fe47d68e5df0ad1b9cac54a2%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2200e611a80b2a0588ce5ce211faaae4edef1e958af1%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%224001295e7cee2450ad12bacad23b2f3acdeee1bd44%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2240d941e0e453240e3425e2245dac44d2f35061530b%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%5D%5D%5D&__client_imported__=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/framework/boundary-components.js */ \"(rsc)/./node_modules/next/dist/lib/framework/boundary-components.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDYnVpbHRpbiU1QyU1Q2dsb2JhbC1lcnJvci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24tbWFpbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2NsaWVudC1wYWdlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNodHRwLWFjY2Vzcy1mYWxsYmFjayU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDbGF5b3V0LXJvdXRlci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24tbWFpbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q21ldGFkYXRhJTVDJTVDYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNmcmFtZXdvcmslNUMlNUNib3VuZGFyeS1jb21wb25lbnRzLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q2dlbmVyYXRlJTVDJTVDaWNvbi1tYXJrLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNuZXh0LWRldnRvb2xzJTVDJTVDdXNlcnNwYWNlJTVDJTVDYXBwJTVDJTVDc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxzUEFBdUs7QUFDdks7QUFDQSxvT0FBNko7QUFDN0o7QUFDQSwwT0FBZ0s7QUFDaEs7QUFDQSxvUkFBc0w7QUFDdEw7QUFDQSx3T0FBK0o7QUFDL0o7QUFDQSw0UEFBMEs7QUFDMUs7QUFDQSxzUUFBOEs7QUFDOUs7QUFDQSw0T0FBaUs7QUFDaks7QUFDQSx3T0FBZ0s7QUFDaEs7QUFDQSw0UUFBa0wiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcYnVpbHRpblxcXFxnbG9iYWwtZXJyb3IuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXNlZ21lbnQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcaHR0cC1hY2Nlc3MtZmFsbGJhY2tcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxtZXRhZGF0YVxcXFxhc3luYy1tZXRhZGF0YS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGxpYlxcXFxmcmFtZXdvcmtcXFxcYm91bmRhcnktY29tcG9uZW50cy5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcZ2VuZXJhdGVcXFxcaWNvbi1tYXJrLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXG5leHQtZGV2dG9vbHNcXFxcdXNlcnNwYWNlXFxcXGFwcFxcXFxzZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/toaster.tsx */ \"(rsc)/./src/components/ui/toaster.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDZ2xvYmFscy5jc3MlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNzcmMlNUMlNUNjb21wb25lbnRzJTVDJTVDdWklNUMlNUN0b2FzdGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDBLQUE4SiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXHVpXFxcXHRvYXN0ZXIudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/main-page/dynamic-main-page.tsx */ \"(rsc)/./src/components/main-page/dynamic-main-page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDc3JjJTVDJTVDY29tcG9uZW50cyU1QyU1Q21haW4tcGFnZSU1QyU1Q2R5bmFtaWMtbWFpbi1wYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkR5bmFtaWNNYWluUGFnZUxvYWRlciUyMiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsNE1BQTZMIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJEeW5hbWljTWFpblBhZ2VMb2FkZXJcIl0gKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxzcmNcXFxcY29tcG9uZW50c1xcXFxtYWluLXBhZ2VcXFxcZHluYW1pYy1tYWluLXBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/db.ts":
/*!*******************************!*\
  !*** ./src/app/actions/db.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDb: () => (/* binding */ getDb),\n/* harmony export */   getServersCollection: () => (/* binding */ getServersCollection),\n/* harmony export */   getTunnelsCollection: () => (/* binding */ getTunnelsCollection)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"0048e1f1b3c4360d8258c40a9c39cd60291427600d\":\"getServersCollection\",\"004e70a5c368878e0b02b35f518bfdbd671edd6a34\":\"getDb\",\"007e40449cd05c0ccde33026d0fe57cb3758f5b81d\":\"getTunnelsCollection\"} */ \n\n\nasync function getDb() {\n    const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    const dbName = process.env.MONGODB_DB_NAME || 'tunnel_vision_db';\n    return client.db(dbName);\n}\nasync function getServersCollection() {\n    const db = await getDb();\n    return db.collection('servers');\n}\nasync function getTunnelsCollection() {\n    const db = await getDb();\n    return db.collection('tunnels');\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_3__.ensureServerEntryExports)([\n    getDb,\n    getServersCollection,\n    getTunnelsCollection\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getDb, \"004e70a5c368878e0b02b35f518bfdbd671edd6a34\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getServersCollection, \"0048e1f1b3c4360d8258c40a9c39cd60291427600d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getTunnelsCollection, \"007e40449cd05c0ccde33026d0fe57cb3758f5b81d\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FjdGlvbnMvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUUwQztBQUtuQyxlQUFlQztJQUNsQixNQUFNQyxTQUFTLE1BQU1GLG9EQUFhQTtJQUNsQyxNQUFNRyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGVBQWUsSUFBSTtJQUM5QyxPQUFPSixPQUFPSyxFQUFFLENBQUNKO0FBQ3JCO0FBRU8sZUFBZUs7SUFDbEIsTUFBTUQsS0FBSyxNQUFNTjtJQUNqQixPQUFPTSxHQUFHRSxVQUFVLENBQVM7QUFDakM7QUFFTyxlQUFlQztJQUNsQixNQUFNSCxLQUFLLE1BQU1OO0lBQ2pCLE9BQU9NLEdBQUdFLFVBQVUsQ0FBUztBQUNqQzs7O0lBZHNCUjtJQU1BTztJQUtBRTs7QUFYQVQsMEZBQUFBLENBQUFBO0FBTUFPLDBGQUFBQSxDQUFBQTtBQUtBRSwwRkFBQUEsQ0FBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uLW1haW5cXHNyY1xcYXBwXFxhY3Rpb25zXFxkYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCBjbGllbnRQcm9taXNlIGZyb20gJ0AvbGliL21vbmdvZGInO1xuaW1wb3J0IHsgQ29sbGVjdGlvbiB9IGZyb20gJ21vbmdvZGInO1xuaW1wb3J0IHR5cGUgeyBTZXJ2ZXIsIFR1bm5lbCB9IGZyb20gJ0AvbGliL3R5cGVzJztcblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RGIoKSB7XG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgY2xpZW50UHJvbWlzZTtcbiAgICBjb25zdCBkYk5hbWUgPSBwcm9jZXNzLmVudi5NT05HT0RCX0RCX05BTUUgfHwgJ3R1bm5lbF92aXNpb25fZGInO1xuICAgIHJldHVybiBjbGllbnQuZGIoZGJOYW1lKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlcnNDb2xsZWN0aW9uKCk6IFByb21pc2U8Q29sbGVjdGlvbjxTZXJ2ZXI+PiB7XG4gICAgY29uc3QgZGIgPSBhd2FpdCBnZXREYigpO1xuICAgIHJldHVybiBkYi5jb2xsZWN0aW9uPFNlcnZlcj4oJ3NlcnZlcnMnKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFR1bm5lbHNDb2xsZWN0aW9uKCk6IFByb21pc2U8Q29sbGVjdGlvbjxUdW5uZWw+PiB7XG4gICAgY29uc3QgZGIgPSBhd2FpdCBnZXREYigpO1xuICAgIHJldHVybiBkYi5jb2xsZWN0aW9uPFR1bm5lbD4oJ3R1bm5lbHMnKTtcbn1cbiJdLCJuYW1lcyI6WyJjbGllbnRQcm9taXNlIiwiZ2V0RGIiLCJjbGllbnQiLCJkYk5hbWUiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9EQl9OQU1FIiwiZGIiLCJnZXRTZXJ2ZXJzQ29sbGVjdGlvbiIsImNvbGxlY3Rpb24iLCJnZXRUdW5uZWxzQ29sbGVjdGlvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/index.ts":
/*!**********************************!*\
  !*** ./src/app/actions/index.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.addServer),\n/* harmony export */   cleanupServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.cleanupServer),\n/* harmony export */   connectWithKeyManagement: () => (/* reexport safe */ _ssh__WEBPACK_IMPORTED_MODULE_4__.connectWithKeyManagement),\n/* harmony export */   createCombinedTunnel: () => (/* reexport safe */ _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createCombinedTunnel),\n/* harmony export */   createMeshNetwork: () => (/* reexport safe */ _tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork),\n/* harmony export */   createTunnel: () => (/* reexport safe */ _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createTunnel),\n/* harmony export */   deleteServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.deleteServer),\n/* harmony export */   deleteTunnel: () => (/* reexport safe */ _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.deleteTunnel),\n/* harmony export */   exportSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.exportSettings),\n/* harmony export */   getDb: () => (/* reexport safe */ _db__WEBPACK_IMPORTED_MODULE_2__.getDb),\n/* harmony export */   getServers: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.getServers),\n/* harmony export */   getServersCollection: () => (/* reexport safe */ _db__WEBPACK_IMPORTED_MODULE_2__.getServersCollection),\n/* harmony export */   getSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.getSettings),\n/* harmony export */   getSshKeys: () => (/* reexport safe */ _ssh__WEBPACK_IMPORTED_MODULE_4__.getSshKeys),\n/* harmony export */   getTunnels: () => (/* reexport safe */ _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.getTunnels),\n/* harmony export */   getTunnelsCollection: () => (/* reexport safe */ _db__WEBPACK_IMPORTED_MODULE_2__.getTunnelsCollection),\n/* harmony export */   importSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.importSettings),\n/* harmony export */   pingServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.pingServer),\n/* harmony export */   pingTunnel: () => (/* reexport safe */ _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.pingTunnel),\n/* harmony export */   saveTunnelConfig: () => (/* reexport safe */ _tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig),\n/* harmony export */   updateServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServer),\n/* harmony export */   updateServers: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServers),\n/* harmony export */   updateSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.updateSettings)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _server_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./server-actions */ \"(rsc)/./src/app/actions/server-actions.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var _tunnels_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tunnels/core */ \"(rsc)/./src/app/actions/tunnels/core.ts\");\n/* harmony import */ var _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tunnels/creation */ \"(rsc)/./src/app/actions/tunnels/creation.ts\");\n/* harmony import */ var _tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tunnels/persistence */ \"(rsc)/./src/app/actions/tunnels/persistence.ts\");\n/* harmony import */ var _tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tunnels/netmaker */ \"(rsc)/./src/app/actions/tunnels/netmaker.ts\");\n/* harmony import */ var _settings_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settings-actions */ \"(rsc)/./src/app/actions/settings-actions.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"7f045e37cfb753486cbeef333464b8376c7413ef16\":\"saveTunnelConfig\",\"7f2be93e72ecace55ffeb53e7113b64530cd1914a2\":\"cleanupServer\",\"7f2c7fb68295e0f2b3ed1be0680eb68418df27ef1e\":\"exportSettings\",\"7f480ccd90a8eec25e41cdb0c47529fe28c3e32cbb\":\"updateSettings\",\"7f5073b0cfb3112ae0828a2a85f77f0e488efc3ceb\":\"importSettings\",\"7f5986dfb4ad8e8f87562b2b666c909f3e03f39ae6\":\"createTunnel\",\"7f7d16fb26395ca05c1d906ce242ba394c0f34b914\":\"getServers\",\"7f8057ea857344074dd570791366eac181fdf52737\":\"getSshKeys\",\"7f85bb6b3987fb0cc86ac38825109b3ab67f21acf7\":\"updateServer\",\"7f8d32b63e848c31386346fda91b637cbb10658b66\":\"addServer\",\"7fb53f28a95092e7b7d9b266ed0d5541aee4831ac5\":\"deleteServer\",\"7fbad9c286bcbdd27c604a3c1d6c7ce2142d70e025\":\"connectWithKeyManagement\",\"7fc20147cdb397037bb8fe9c46c19b632341b1b701\":\"getDb\",\"7fcc71f19d98cf29b51bf1789df1cc8119d605a035\":\"createCombinedTunnel\",\"7fda74c952f564d22c03510c71fa90f4c13b321397\":\"getTunnels\",\"7fe6b50979e4ccf29e21f3019909dd1c24e03bb21b\":\"createMeshNetwork\",\"7ff6f0b31f612676728adb5d15525389bdc026757c\":\"getTunnelsCollection\",\"7ffa8a242077b293029e28a1d65275231f2bbc8a6a\":\"getSettings\",\"7ffc2a9f1baf4c30046e078bea1c230bc3550b673b\":\"updateServers\",\"7ffc54d6732ff6b55f51da0fef0cae54a02949fb9a\":\"getServersCollection\",\"7ffe31aeedd08ab2eaf90674a488d593e924cdf283\":\"pingTunnel\",\"7ffe89bab8fd520998eeb37779602110e55355ccfc\":\"deleteTunnel\",\"7ffeb1113d1b458dee7da2f2826f0bf2b85b3389ff\":\"pingServer\"} */ \n\n\n\n\n\n\n\n\n\n// Explicitly export all the functions to comply with \"use server\"\n\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_10__.ensureServerEntryExports)([\n    _db__WEBPACK_IMPORTED_MODULE_2__.getDb,\n    _db__WEBPACK_IMPORTED_MODULE_2__.getServersCollection,\n    _db__WEBPACK_IMPORTED_MODULE_2__.getTunnelsCollection,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.getServers,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.addServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServers,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.deleteServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.pingServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.cleanupServer,\n    _ssh__WEBPACK_IMPORTED_MODULE_4__.getSshKeys,\n    _ssh__WEBPACK_IMPORTED_MODULE_4__.connectWithKeyManagement,\n    _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.getTunnels,\n    _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.deleteTunnel,\n    _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.pingTunnel,\n    _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createCombinedTunnel,\n    _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createTunnel,\n    _tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig,\n    _tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.exportSettings,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.importSettings,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.getSettings,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.updateSettings\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_db__WEBPACK_IMPORTED_MODULE_2__.getDb, \"7fc20147cdb397037bb8fe9c46c19b632341b1b701\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_db__WEBPACK_IMPORTED_MODULE_2__.getServersCollection, \"7ffc54d6732ff6b55f51da0fef0cae54a02949fb9a\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_db__WEBPACK_IMPORTED_MODULE_2__.getTunnelsCollection, \"7ff6f0b31f612676728adb5d15525389bdc026757c\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.getServers, \"7f7d16fb26395ca05c1d906ce242ba394c0f34b914\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.addServer, \"7f8d32b63e848c31386346fda91b637cbb10658b66\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServer, \"7f85bb6b3987fb0cc86ac38825109b3ab67f21acf7\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServers, \"7ffc2a9f1baf4c30046e078bea1c230bc3550b673b\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.deleteServer, \"7fb53f28a95092e7b7d9b266ed0d5541aee4831ac5\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.pingServer, \"7ffeb1113d1b458dee7da2f2826f0bf2b85b3389ff\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.cleanupServer, \"7f2be93e72ecace55ffeb53e7113b64530cd1914a2\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_ssh__WEBPACK_IMPORTED_MODULE_4__.getSshKeys, \"7f8057ea857344074dd570791366eac181fdf52737\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_ssh__WEBPACK_IMPORTED_MODULE_4__.connectWithKeyManagement, \"7fbad9c286bcbdd27c604a3c1d6c7ce2142d70e025\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_core__WEBPACK_IMPORTED_MODULE_5__.getTunnels, \"7fda74c952f564d22c03510c71fa90f4c13b321397\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_core__WEBPACK_IMPORTED_MODULE_5__.deleteTunnel, \"7ffe89bab8fd520998eeb37779602110e55355ccfc\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_core__WEBPACK_IMPORTED_MODULE_5__.pingTunnel, \"7ffe31aeedd08ab2eaf90674a488d593e924cdf283\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createCombinedTunnel, \"7fcc71f19d98cf29b51bf1789df1cc8119d605a035\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createTunnel, \"7f5986dfb4ad8e8f87562b2b666c909f3e03f39ae6\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig, \"7f045e37cfb753486cbeef333464b8376c7413ef16\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork, \"7fe6b50979e4ccf29e21f3019909dd1c24e03bb21b\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.exportSettings, \"7f2c7fb68295e0f2b3ed1be0680eb68418df27ef1e\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.importSettings, \"7f5073b0cfb3112ae0828a2a85f77f0e488efc3ceb\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.getSettings, \"7ffa8a242077b293029e28a1d65275231f2bbc8a6a\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.updateSettings, \"7f480ccd90a8eec25e41cdb0c47529fe28c3e32cbb\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FjdGlvbnMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUV5RTtBQVMvQztBQUNtQztBQUNTO0FBQ0U7QUFDZjtBQUNGO0FBQzBDO0FBRWpHLGtFQUFrRTtBQXlCaEU7OztJQXZCRUEsc0NBQUtBO0lBQ0xDLHFEQUFvQkE7SUFDcEJDLHFEQUFvQkE7SUFDcEJDLHVEQUFVQTtJQUNWQyxzREFBU0E7SUFDVEMseURBQVlBO0lBQ1pDLDBEQUFhQTtJQUNiQyx5REFBWUE7SUFDWkMsdURBQVVBO0lBQ1ZDLDBEQUFhQTtJQUNiQyw0Q0FBVUE7SUFDVkMsMERBQXdCQTtJQUN4QkMscURBQVVBO0lBQ1ZDLHVEQUFZQTtJQUNaQyxxREFBVUE7SUFDVkMsbUVBQW9CQTtJQUNwQkMsMkRBQVlBO0lBQ1pDLGtFQUFnQkE7SUFDaEJDLGdFQUFpQkE7SUFDakJDLDZEQUFjQTtJQUNkQyw2REFBY0E7SUFDZEMsMERBQVdBO0lBQ1hDLDZEQUFjQTs7QUF0QmR0QiwwRkFBQUEsQ0FBQUEsc0NBQUtBO0FBQ0xDLDBGQUFBQSxDQUFBQSxxREFBb0JBO0FBQ3BCQywwRkFBQUEsQ0FBQUEscURBQW9CQTtBQUNwQkMsMEZBQUFBLENBQUFBLHVEQUFVQTtBQUNWQywwRkFBQUEsQ0FBQUEsc0RBQVNBO0FBQ1RDLDBGQUFBQSxDQUFBQSx5REFBWUE7QUFDWkMsMEZBQUFBLENBQUFBLDBEQUFhQTtBQUNiQywwRkFBQUEsQ0FBQUEseURBQVlBO0FBQ1pDLDBGQUFBQSxDQUFBQSx1REFBVUE7QUFDVkMsMEZBQUFBLENBQUFBLDBEQUFhQTtBQUNiQywwRkFBQUEsQ0FBQUEsNENBQVVBO0FBQ1ZDLDBGQUFBQSxDQUFBQSwwREFBd0JBO0FBQ3hCQywwRkFBQUEsQ0FBQUEscURBQVVBO0FBQ1ZDLDBGQUFBQSxDQUFBQSx1REFBWUE7QUFDWkMsMEZBQUFBLENBQUFBLHFEQUFVQTtBQUNWQywwRkFBQUEsQ0FBQUEsbUVBQW9CQTtBQUNwQkMsMEZBQUFBLENBQUFBLDJEQUFZQTtBQUNaQywwRkFBQUEsQ0FBQUEsa0VBQWdCQTtBQUNoQkMsMEZBQUFBLENBQUFBLGdFQUFpQkE7QUFDakJDLDBGQUFBQSxDQUFBQSw2REFBY0E7QUFDZEMsMEZBQUFBLENBQUFBLDZEQUFjQTtBQUNkQywwRkFBQUEsQ0FBQUEsMERBQVdBO0FBQ1hDLDBGQUFBQSxDQUFBQSw2REFBY0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uLW1haW5cXHNyY1xcYXBwXFxhY3Rpb25zXFxpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IGdldERiLCBnZXRTZXJ2ZXJzQ29sbGVjdGlvbiwgZ2V0VHVubmVsc0NvbGxlY3Rpb24gfSBmcm9tICcuL2RiJztcbmltcG9ydCB7IFxuICAgIGdldFNlcnZlcnMsIFxuICAgIGFkZFNlcnZlciwgXG4gICAgdXBkYXRlU2VydmVyLCBcbiAgICB1cGRhdGVTZXJ2ZXJzLCBcbiAgICBkZWxldGVTZXJ2ZXIsIFxuICAgIHBpbmdTZXJ2ZXIsIFxuICAgIGNsZWFudXBTZXJ2ZXIgXG59IGZyb20gJy4vc2VydmVyLWFjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0U3NoS2V5cywgY29ubmVjdFdpdGhLZXlNYW5hZ2VtZW50IH0gZnJvbSAnLi9zc2gnO1xuaW1wb3J0IHsgZ2V0VHVubmVscywgZGVsZXRlVHVubmVsLCBwaW5nVHVubmVsIH0gZnJvbSAnLi90dW5uZWxzL2NvcmUnO1xuaW1wb3J0IHsgY3JlYXRlQ29tYmluZWRUdW5uZWwsIGNyZWF0ZVR1bm5lbCB9IGZyb20gJy4vdHVubmVscy9jcmVhdGlvbic7XG5pbXBvcnQgeyBzYXZlVHVubmVsQ29uZmlnIH0gZnJvbSAnLi90dW5uZWxzL3BlcnNpc3RlbmNlJztcbmltcG9ydCB7IGNyZWF0ZU1lc2hOZXR3b3JrIH0gZnJvbSAnLi90dW5uZWxzL25ldG1ha2VyJztcbmltcG9ydCB7IGV4cG9ydFNldHRpbmdzLCBpbXBvcnRTZXR0aW5ncywgZ2V0U2V0dGluZ3MsIHVwZGF0ZVNldHRpbmdzIH0gZnJvbSAnLi9zZXR0aW5ncy1hY3Rpb25zJztcblxuLy8gRXhwbGljaXRseSBleHBvcnQgYWxsIHRoZSBmdW5jdGlvbnMgdG8gY29tcGx5IHdpdGggXCJ1c2Ugc2VydmVyXCJcbmV4cG9ydCB7XG4gICAgZ2V0RGIsXG4gICAgZ2V0U2VydmVyc0NvbGxlY3Rpb24sXG4gICAgZ2V0VHVubmVsc0NvbGxlY3Rpb24sXG4gICAgZ2V0U2VydmVycyxcbiAgICBhZGRTZXJ2ZXIsXG4gICAgdXBkYXRlU2VydmVyLFxuICAgIHVwZGF0ZVNlcnZlcnMsXG4gICAgZGVsZXRlU2VydmVyLFxuICAgIHBpbmdTZXJ2ZXIsXG4gICAgY2xlYW51cFNlcnZlcixcbiAgICBnZXRTc2hLZXlzLFxuICAgIGNvbm5lY3RXaXRoS2V5TWFuYWdlbWVudCxcbiAgICBnZXRUdW5uZWxzLFxuICAgIGRlbGV0ZVR1bm5lbCxcbiAgICBwaW5nVHVubmVsLFxuICAgIGNyZWF0ZUNvbWJpbmVkVHVubmVsLFxuICAgIGNyZWF0ZVR1bm5lbCxcbiAgICBzYXZlVHVubmVsQ29uZmlnLFxuICAgIGNyZWF0ZU1lc2hOZXR3b3JrLFxuICAgIGV4cG9ydFNldHRpbmdzLFxuICAgIGltcG9ydFNldHRpbmdzLFxuICAgIGdldFNldHRpbmdzLFxuICAgIHVwZGF0ZVNldHRpbmdzLFxufTtcbiJdLCJuYW1lcyI6WyJnZXREYiIsImdldFNlcnZlcnNDb2xsZWN0aW9uIiwiZ2V0VHVubmVsc0NvbGxlY3Rpb24iLCJnZXRTZXJ2ZXJzIiwiYWRkU2VydmVyIiwidXBkYXRlU2VydmVyIiwidXBkYXRlU2VydmVycyIsImRlbGV0ZVNlcnZlciIsInBpbmdTZXJ2ZXIiLCJjbGVhbnVwU2VydmVyIiwiZ2V0U3NoS2V5cyIsImNvbm5lY3RXaXRoS2V5TWFuYWdlbWVudCIsImdldFR1bm5lbHMiLCJkZWxldGVUdW5uZWwiLCJwaW5nVHVubmVsIiwiY3JlYXRlQ29tYmluZWRUdW5uZWwiLCJjcmVhdGVUdW5uZWwiLCJzYXZlVHVubmVsQ29uZmlnIiwiY3JlYXRlTWVzaE5ldHdvcmsiLCJleHBvcnRTZXR0aW5ncyIsImltcG9ydFNldHRpbmdzIiwiZ2V0U2V0dGluZ3MiLCJ1cGRhdGVTZXR0aW5ncyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/index.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/server-actions.ts":
/*!*******************************************!*\
  !*** ./src/app/actions/server-actions.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addServer: () => (/* binding */ addServer),\n/* harmony export */   cleanupServer: () => (/* binding */ cleanupServer),\n/* harmony export */   deleteServer: () => (/* binding */ deleteServer),\n/* harmony export */   getServers: () => (/* binding */ getServers),\n/* harmony export */   pingServer: () => (/* binding */ pingServer),\n/* harmony export */   updateServer: () => (/* binding */ updateServer),\n/* harmony export */   updateServers: () => (/* binding */ updateServers)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_schemas__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/schemas */ \"(rsc)/./src/lib/schemas.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"00cd475e61dbe204a22dc8a1773a08b015b85174da\":\"getServers\",\"40295591f30982c017fa74e0bba9ad965c4e0ec7ea\":\"updateServers\",\"406c71ecdf0fd8aed97e8a1847e0d154dc347c7648\":\"cleanupServer\",\"4074f32334cf6b73bf6c01df2df087e56b9eba31cd\":\"pingServer\",\"40dbe7535c2fec12c600d527d7ed3d5bbb254a2a64\":\"deleteServer\",\"40df54430ad999df63cf882964c534fe560f1309be\":\"addServer\",\"60855ad9e88b4e443eb833cc0a6900175650d03c97\":\"updateServer\"} */ \n\n\n\n\n\n\n// Server Actions\nasync function getServers() {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const servers = await serversCollection.find({}).sort({\n        order: 1,\n        name: 1\n    }).toArray();\n    return servers;\n}\nasync function addServer(formData) {\n    const newServerData = {\n        name: formData.get('name'),\n        ipAddress: formData.get('ipAddress'),\n        username: formData.get('username'),\n        sshPort: formData.get('sshPort'),\n        password: formData.get('password'),\n        sshKey: formData.get('sshKey')\n    };\n    const validatedFields = _lib_schemas__WEBPACK_IMPORTED_MODULE_4__.serverSchema.safeParse(newServerData);\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors\n        };\n    }\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const newServer = {\n        name: validatedFields.data.name,\n        ipAddress: validatedFields.data.ipAddress,\n        username: validatedFields.data.username,\n        sshPort: validatedFields.data.sshPort,\n        password: validatedFields.data.password || '',\n        sshKey: validatedFields.data.sshKey || '',\n        sshKeyConfigured: false\n    };\n    await serversCollection.insertOne({\n        ...newServer,\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(),\n        id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId().toString()\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    return {\n        success: true\n    };\n}\nasync function updateServer(formData, serverId) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(serverId)) {\n        return {\n            errors: {\n                _form: [\n                    'Invalid Server ID.'\n                ]\n            }\n        };\n    }\n    const updatedServerData = {\n        name: formData.get('name'),\n        ipAddress: formData.get('ipAddress'),\n        username: formData.get('username'),\n        sshPort: formData.get('sshPort'),\n        password: formData.get('password'),\n        sshKey: formData.get('sshKey')\n    };\n    const validatedFields = _lib_schemas__WEBPACK_IMPORTED_MODULE_4__.serverSchema.safeParse(updatedServerData);\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors\n        };\n    }\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const result = await serversCollection.updateOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(serverId)\n    }, {\n        $set: {\n            ...validatedFields.data,\n            password: validatedFields.data.password || '',\n            sshKey: validatedFields.data.sshKey || ''\n        }\n    });\n    if (result.matchedCount === 0) {\n        return {\n            errors: {\n                _form: [\n                    'Server not found.'\n                ]\n            }\n        };\n    }\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    return {\n        success: true\n    };\n}\nasync function updateServers(updatedServers) {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const bulkOps = updatedServers.map((server, index)=>({\n            updateOne: {\n                filter: {\n                    _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(server.id)\n                },\n                update: {\n                    $set: {\n                        order: index\n                    }\n                }\n            }\n        }));\n    if (bulkOps.length > 0) {\n        await serversCollection.bulkWrite(bulkOps);\n    }\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n}\nasync function deleteServer(id) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id)) return;\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getTunnelsCollection)();\n    await serversCollection.deleteOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id)\n    });\n    await tunnelsCollection.deleteMany({\n        $or: [\n            {\n                server1Id: id\n            },\n            {\n                server2Id: id\n            }\n        ]\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n}\nasync function pingServer(ipAddress) {\n    try {\n        const checkHostUrl = `https://check-host.net/check-ping?host=${ipAddress}&node=ir1.node.check-host.net`;\n        const checkResponse = await fetch(checkHostUrl, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n        if (!checkResponse.ok) {\n            throw new Error(`check-host.net initial request failed with status ${checkResponse.status}`);\n        }\n        const checkData = await checkResponse.json();\n        if (checkData.ok !== 1) {\n            throw new Error(`check-host.net returned an error: ${checkData.error}`);\n        }\n        const requestId = checkData.request_id;\n        await new Promise((resolve)=>setTimeout(resolve, 3000));\n        const resultUrl = `https://check-host.net/check-result/${requestId}`;\n        const resultResponse = await fetch(resultUrl, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n        if (!resultResponse.ok) {\n            throw new Error(`check-host.net result request failed with status ${resultResponse.status}`);\n        }\n        const resultData = await resultResponse.json();\n        const pingResults = resultData['ir1.node.check-host.net'];\n        if (!pingResults) {\n            return {\n                latency: null\n            };\n        }\n        const successfulPings = pingResults[0].filter((res)=>res[0] === 'OK').map((res)=>res[1]);\n        if (successfulPings.length === 0) {\n            return {\n                latency: null\n            };\n        }\n        const avgLatency = successfulPings.reduce((a, b)=>a + b, 0) / successfulPings.length;\n        return {\n            latency: Math.round(avgLatency * 1000)\n        };\n    } catch (error) {\n        console.error(`Ping failed for ${ipAddress}:`, error);\n        return {\n            latency: null\n        };\n    }\n}\nasync function cleanupServer(serverId) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(serverId)) {\n        return {\n            success: false,\n            message: 'Invalid Server ID.',\n            logs: [\n                {\n                    type: 'error',\n                    message: 'Invalid Server ID.'\n                }\n            ]\n        };\n    }\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const server = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(serverId)\n    });\n    const logs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        logs.push(entry);\n    };\n    if (!server) {\n        return {\n            success: false,\n            message: 'Server not found.',\n            logs: [\n                {\n                    type: 'error',\n                    message: 'Server not found in database.'\n                }\n            ]\n        };\n    }\n    let ssh = null;\n    try {\n        log({\n            type: 'info',\n            message: `Connecting to server ${server.name} (${server.ipAddress}) to begin cleanup...`\n        });\n        ssh = await (0,_ssh__WEBPACK_IMPORTED_MODULE_6__.connectWithKeyManagement)(server, log);\n        // اجرای همه دستورات در یک اسکریپت واحد برای سرعت بیشتر\n        const cleanupScript = `\n#!/bin/bash\nset -e\n\n# Stop and disable services\nsystemctl stop 'wg-quick@*' 'openvpn@*' ipsec v2ray 2>/dev/null || true\nsystemctl disable 'wg-quick@*' 'openvpn@*' ipsec v2ray 2>/dev/null || true\n\n# Remove configurations\nrm -rf /etc/wireguard/* /etc/openvpn/* /usr/local/etc/v2ray/* 2>/dev/null || true\nrm -f /etc/ipsec.conf /etc/ipsec.secrets /etc/network/interfaces.d/tun* 2>/dev/null || true\n\n# Delete tunnel interfaces\nfor iface in $(ip -o link show | awk -F': ' '{print $2}' | grep -E '^tun|^gre|^ipip|^sit|^vti' 2>/dev/null || true); do\n    ip link delete \"$iface\" 2>/dev/null || true\ndone\n\n# Reload systemd\nsystemctl daemon-reload 2>/dev/null || true\n\necho \"Cleanup completed successfully\"\n`;\n        log({\n            type: 'info',\n            message: 'Executing optimized cleanup script...'\n        });\n        const result = await ssh.execCommand(cleanupScript);\n        if (result.code === 0) {\n            log({\n                type: 'success',\n                message: 'All cleanup operations completed successfully.'\n            });\n        } else {\n            log({\n                type: 'warning',\n                message: `Cleanup completed with warnings: ${result.stderr || 'Unknown error'}`\n            });\n        }\n        // حذف تونل‌های مرتبط از دیتابیس\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getTunnelsCollection)();\n        const { deletedCount } = await tunnelsCollection.deleteMany({\n            $or: [\n                {\n                    server1Id: serverId\n                },\n                {\n                    server2Id: serverId\n                }\n            ]\n        });\n        if (deletedCount > 0) {\n            log({\n                type: 'success',\n                message: `${deletedCount} tunnel(s) removed from database.`\n            });\n        }\n        log({\n            type: 'success',\n            message: `Server ${server.name} has been cleaned up successfully.`\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true,\n            logs\n        };\n    } catch (e) {\n        log({\n            type: 'error',\n            message: `An error occurred: ${e.message}`\n        });\n        return {\n            success: false,\n            message: e.message || 'An unexpected error occurred.',\n            logs\n        };\n    } finally{\n        if (ssh?.isConnected()) {\n            ssh.dispose();\n        }\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__.ensureServerEntryExports)([\n    getServers,\n    addServer,\n    updateServer,\n    updateServers,\n    deleteServer,\n    pingServer,\n    cleanupServer\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getServers, \"00cd475e61dbe204a22dc8a1773a08b015b85174da\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(addServer, \"40df54430ad999df63cf882964c534fe560f1309be\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(updateServer, \"60855ad9e88b4e443eb833cc0a6900175650d03c97\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(updateServers, \"40295591f30982c017fa74e0bba9ad965c4e0ec7ea\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(deleteServer, \"40dbe7535c2fec12c600d527d7ed3d5bbb254a2a64\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(pingServer, \"4074f32334cf6b73bf6c01df2df087e56b9eba31cd\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(cleanupServer, \"406c71ecdf0fd8aed97e8a1847e0d154dc347c7648\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/server-actions.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/settings-actions.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/settings-actions.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportSettings: () => (/* binding */ exportSettings),\n/* harmony export */   getSettings: () => (/* binding */ getSettings),\n/* harmony export */   importSettings: () => (/* binding */ importSettings),\n/* harmony export */   updateSettings: () => (/* binding */ updateSettings)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _server_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./server-actions */ \"(rsc)/./src/app/actions/server-actions.ts\");\n/* harmony import */ var _tunnels_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tunnels/core */ \"(rsc)/./src/app/actions/tunnels/core.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"0018c6fd9f1357a912fe47d68e5df0ad1b9cac54a2\":\"exportSettings\",\"00e611a80b2a0588ce5ce211faaae4edef1e958af1\":\"getSettings\",\"4001295e7cee2450ad12bacad23b2f3acdeee1bd44\":\"updateSettings\",\"40d941e0e453240e3425e2245dac44d2f35061530b\":\"importSettings\"} */ \n\n\n\n\n\n\n\n\nconst envFilePath = path__WEBPACK_IMPORTED_MODULE_5___default().resolve(process.cwd(), '.env');\nasync function readEnvFile() {\n    try {\n        const content = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(envFilePath, 'utf-8');\n        const map = new Map();\n        content.split('\\n').forEach((line)=>{\n            if (line.trim() && !line.startsWith('#')) {\n                const [key, ...valueParts] = line.split('=');\n                if (key) {\n                    map.set(key.trim(), valueParts.join('=').trim().replace(/^\"|\"$/g, '').replace(/^'|'$/g, ''));\n                }\n            }\n        });\n        return map;\n    } catch (error) {\n        if (error.code === 'ENOENT') {\n            return new Map();\n        }\n        throw error;\n    }\n}\nasync function writeEnvFile(envMap) {\n    const content = Array.from(envMap.entries()).map(([key, value])=>`${key}=\"${value}\"`).join('\\n');\n    await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().writeFile(envFilePath, content + '\\n', 'utf-8');\n}\nasync function getSettings() {\n    const envMap = await readEnvFile();\n    return {\n        mongodbUri: envMap.get('MONGODB_URI') || '',\n        apiKey: envMap.get('API_SECRET_KEY') || '',\n        geminiApiKey: envMap.get('GEMINI_API_KEY') || ''\n    };\n}\nasync function updateSettings(settings) {\n    if (!settings.apiKey || settings.apiKey.length < 16) {\n        return {\n            success: false,\n            message: 'API Key must be at least 16 characters long.'\n        };\n    }\n    if (!settings.mongodbUri) {\n        return {\n            success: false,\n            message: 'MongoDB URI cannot be empty.'\n        };\n    }\n    try {\n        const envMap = await readEnvFile();\n        envMap.set('MONGODB_URI', settings.mongodbUri);\n        envMap.set('API_SECRET_KEY', settings.apiKey);\n        envMap.set('GEMINI_API_KEY', settings.geminiApiKey);\n        await writeEnvFile(envMap);\n        // This is a server-side environment variable, so we update the running process\n        process.env.MONGODB_URI = settings.mongodbUri;\n        process.env.API_SECRET_KEY = settings.apiKey;\n        process.env.GEMINI_API_KEY = settings.geminiApiKey;\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/'); // Revalidate to reflect changes if needed anywhere\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Failed to update settings:', error);\n        return {\n            success: false,\n            message: 'Failed to write to the environment file.'\n        };\n    }\n}\nasync function exportSettings() {\n    const servers = await (0,_server_actions__WEBPACK_IMPORTED_MODULE_6__.getServers)();\n    const tunnels = await (0,_tunnels_core__WEBPACK_IMPORTED_MODULE_7__.getTunnels)();\n    const exportedServers = servers.map(({ _id, ...s })=>({\n            ...s,\n            id: _id.toHexString()\n        }));\n    const exportedTunnels = tunnels.map(({ _id, ...t })=>({\n            ...t,\n            id: _id.toHexString()\n        }));\n    return JSON.stringify({\n        servers: exportedServers,\n        tunnels: exportedTunnels\n    }, null, 2);\n}\nasync function importSettings(jsonContent) {\n    try {\n        const data = JSON.parse(jsonContent);\n        if (!data || typeof data !== 'object' || !('servers' in data) || !('tunnels' in data) || !Array.isArray(data.servers) || !Array.isArray(data.tunnels)) {\n            throw new Error('Invalid JSON structure. The file must contain \"servers\" and \"tunnels\" arrays.');\n        }\n        const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_8__.getServersCollection)();\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_8__.getTunnelsCollection)();\n        await serversCollection.deleteMany({});\n        await tunnelsCollection.deleteMany({});\n        if (data.servers.length > 0) {\n            const serversToInsert = data.servers.map(({ id, ...s })=>({\n                    ...s,\n                    _id: mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id) ? new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id) : new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId()\n                }));\n            await serversCollection.insertMany(serversToInsert);\n        }\n        if (data.tunnels.length > 0) {\n            const tunnelsToInsert = data.tunnels.map(({ id, ...t })=>({\n                    ...t,\n                    _id: mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id) ? new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id) : new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId()\n                }));\n            await tunnelsCollection.insertMany(tunnelsToInsert);\n        }\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true\n        };\n    } catch (e) {\n        let message = 'An unexpected error occurred during import.';\n        if (e instanceof SyntaxError) {\n            message = 'The provided file is not valid JSON.';\n        } else if (e instanceof Error) {\n            message = e.message;\n        }\n        return {\n            success: false,\n            message\n        };\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__.ensureServerEntryExports)([\n    getSettings,\n    updateSettings,\n    exportSettings,\n    importSettings\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getSettings, \"00e611a80b2a0588ce5ce211faaae4edef1e958af1\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(updateSettings, \"4001295e7cee2450ad12bacad23b2f3acdeee1bd44\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(exportSettings, \"0018c6fd9f1357a912fe47d68e5df0ad1b9cac54a2\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(importSettings, \"40d941e0e453240e3425e2245dac44d2f35061530b\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/settings-actions.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/ssh.ts":
/*!********************************!*\
  !*** ./src/app/actions/ssh.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectWithKeyManagement: () => (/* binding */ connectWithKeyManagement),\n/* harmony export */   getSshKeys: () => (/* binding */ getSshKeys)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var node_ssh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node-ssh */ \"node-ssh\");\n/* harmony import */ var node_ssh__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_ssh__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"002655ffeb8b56bfb5f781a7721beab4ed9809897d\":\"getSshKeys\",\"604afe548d22c3f3b8478afe15fa126f33e0c125a3\":\"connectWithKeyManagement\"} */ \n\n\n\n\n\n\n\n\nconst SSH_KEY_PATH = path__WEBPACK_IMPORTED_MODULE_5___default().join(process.cwd(), 'ssh_keys.json');\nasync function generateSshKeyPair() {\n    try {\n        const keyPath = `/tmp/tunnelvision_key_${Date.now()}`;\n        // Generate SSH key pair\n        (0,child_process__WEBPACK_IMPORTED_MODULE_7__.execSync)(`ssh-keygen -t rsa -b 2048 -f ${keyPath} -N \"\"`, {\n            stdio: 'pipe'\n        });\n        const privateKey = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(keyPath, 'utf-8');\n        const publicKey = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(`${keyPath}.pub`, 'utf-8');\n        // Clean up temporary files\n        await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().unlink(keyPath).catch(()=>{});\n        await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().unlink(`${keyPath}.pub`).catch(()=>{});\n        return {\n            privateKey,\n            publicKey\n        };\n    } catch (error) {\n        // Fallback: generate using Node.js crypto\n        const { generateKeyPairSync } = (crypto__WEBPACK_IMPORTED_MODULE_6___default());\n        const { privateKey, publicKey } = generateKeyPairSync('rsa', {\n            modulusLength: 2048,\n            privateKeyEncoding: {\n                type: 'pkcs8',\n                format: 'pem'\n            },\n            publicKeyEncoding: {\n                type: 'spki',\n                format: 'pem'\n            }\n        });\n        // Convert to SSH format\n        const sshPublicKey = `ssh-rsa ${Buffer.from(publicKey).toString('base64')} tunnelvision@auto-generated`;\n        return {\n            privateKey,\n            publicKey: sshPublicKey\n        };\n    }\n}\nasync function getSshKeys() {\n    try {\n        const data = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(SSH_KEY_PATH, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if (error.code === 'ENOENT') {\n            console.log(\"SSH key file not found, generating new key pair...\");\n            const newKeys = await generateSshKeyPair();\n            await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().writeFile(SSH_KEY_PATH, JSON.stringify(newKeys, null, 2));\n            console.log(\"New SSH key pair generated and saved.\");\n            return newKeys;\n        }\n        throw error;\n    }\n}\nasync function connectWithKeyManagement(server, log) {\n    const ssh = new node_ssh__WEBPACK_IMPORTED_MODULE_2__.NodeSSH();\n    const keys = await getSshKeys();\n    let connectionOptions = {\n        host: server.ipAddress,\n        port: server.sshPort || 22,\n        username: server.username,\n        readyTimeout: 60000\n    };\n    const connectAndSetup = async (options, needsKeySetup = false)=>{\n        await ssh.connect(options);\n        log?.({\n            type: 'success',\n            message: `Successfully connected to server ${server.name}.`\n        });\n        if (needsKeySetup) {\n            log?.({\n                type: 'info',\n                message: 'Setting up SSH key authentication for future connections...'\n            });\n            try {\n                const authorizedKeysPath = `~/.ssh/authorized_keys`;\n                await ssh.execCommand(`mkdir -p ~/.ssh && chmod 700 ~/.ssh`);\n                const tempKeyFile = `/tmp/pubkey_${crypto__WEBPACK_IMPORTED_MODULE_6___default().randomBytes(8).toString('hex')}`;\n                await ssh.execCommand(`echo '${keys.publicKey}' > ${tempKeyFile}`);\n                await ssh.execCommand(`cat ${tempKeyFile} >> ${authorizedKeysPath} && rm ${tempKeyFile} && chmod 600 ${authorizedKeysPath}`);\n                log?.({\n                    type: 'success',\n                    message: 'SSH public key added to authorized_keys.'\n                });\n                const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_8__.getServersCollection)();\n                await serversCollection.updateOne({\n                    _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(server.id)\n                }, {\n                    $set: {\n                        sshKeyConfigured: true\n                    }\n                });\n                server.sshKeyConfigured = true;\n            } catch (setupError) {\n                log?.({\n                    type: 'warning',\n                    message: `Failed to set up SSH key automatically: ${setupError.message}`\n                });\n            }\n        }\n    };\n    if (server.sshKeyConfigured) {\n        try {\n            log?.({\n                type: 'info',\n                message: `Attempting key-based authentication for ${server.name}...`\n            });\n            connectionOptions.privateKey = keys.privateKey;\n            await connectAndSetup(connectionOptions);\n            return ssh;\n        } catch (keyError) {\n            log?.({\n                type: 'warning',\n                message: `Key-based authentication failed for ${server.name}. Falling back to other methods.`\n            });\n            if (ssh.isConnected()) ssh.dispose();\n        }\n    }\n    if (server.sshKey) {\n        try {\n            log?.({\n                type: 'info',\n                message: `Attempting connection with server-specific SSH key for ${server.name}...`\n            });\n            connectionOptions.privateKey = server.sshKey;\n            await connectAndSetup(connectionOptions, true);\n            return ssh;\n        } catch (specificKeyError) {\n            log?.({\n                type: 'warning',\n                message: `Server-specific key authentication failed for ${server.name}. Falling back to password.`\n            });\n            if (ssh.isConnected()) ssh.dispose();\n        }\n    }\n    if (server.password) {\n        try {\n            log?.({\n                type: 'info',\n                message: `Attempting password authentication for ${server.name}...`\n            });\n            connectionOptions.privateKey = undefined;\n            connectionOptions.password = server.password;\n            await connectAndSetup(connectionOptions, true);\n            return ssh;\n        } catch (passwordError) {\n            log?.({\n                type: 'error',\n                message: `Password authentication failed for ${server.name}: ${passwordError.message}`\n            });\n            if (ssh.isConnected()) ssh.dispose();\n            throw passwordError;\n        }\n    }\n    try {\n        log?.({\n            type: 'info',\n            message: `Final attempt: Trying shared key authentication for ${server.name}...`\n        });\n        connectionOptions = {\n            host: server.ipAddress,\n            port: server.sshPort || 22,\n            username: server.username,\n            readyTimeout: 60000,\n            privateKey: keys.privateKey\n        };\n        await connectAndSetup(connectionOptions);\n        return ssh;\n    } catch (finalKeyError) {\n        log?.({\n            type: 'error',\n            message: `All authentication methods have failed for ${server.name}. Please check credentials and server SSH configuration.`\n        });\n        if (ssh.isConnected()) ssh.dispose();\n        throw finalKeyError;\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__.ensureServerEntryExports)([\n    getSshKeys,\n    connectWithKeyManagement\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getSshKeys, \"002655ffeb8b56bfb5f781a7721beab4ed9809897d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(connectWithKeyManagement, \"604afe548d22c3f3b8478afe15fa126f33e0c125a3\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/ssh.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/commands.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/tunnels/commands.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTunnelCommands: () => (/* binding */ getTunnelCommands)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"40942a7bc9e95fa152c974e785820ed6782eb18639\":\"getTunnelCommands\"} */ \n\nasync function getTunnelCommands(options) {\n    const { tunnelType, server1, server2, ssh1, ssh2, tunnelName, tunnelIp1, tunnelIp2, domain, log } = options;\n    let commandsS1 = [];\n    let commandsS2 = [];\n    const extraLogs = [];\n    const localLog = (entry)=>extraLogs.push(entry);\n    switch(tunnelType){\n        case 'GRE':\n            // Check for existing tunnel\n            const greCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const greCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (greCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `GRE tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (greCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `GRE tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            commandsS1.push(`ip tunnel add ${tunnelName} mode gre remote ${server2.ipAddress} local ${server1.ipAddress} ttl 255`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode gre remote ${server1.ipAddress} local ${server2.ipAddress} ttl 255`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'IPIP':\n            // Check for existing tunnel\n            const ipipCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const ipipCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (ipipCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `IPIP tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (ipipCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `IPIP tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            commandsS1.push(`ip tunnel add ${tunnelName} mode ipip remote ${server2.ipAddress} local ${server1.ipAddress} ttl 255`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode ipip remote ${server1.ipAddress} local ${server2.ipAddress} ttl 255`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'SIT':\n            // Check for existing tunnel\n            const sitCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const sitCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (sitCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `SIT tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (sitCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `SIT tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            commandsS1.push(`ip tunnel add ${tunnelName} mode sit remote ${server2.ipAddress} local ${server1.ipAddress} ttl 255`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode sit remote ${server1.ipAddress} local ${server2.ipAddress} ttl 255`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'VTI':\n            // Check for existing tunnel\n            const vtiCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const vtiCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (vtiCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `VTI tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (vtiCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `VTI tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            const vtiKey = Math.floor(Math.random() * 100000);\n            localLog({\n                type: 'info',\n                message: `Using VTI key: ${vtiKey}`\n            });\n            commandsS1.push(`ip tunnel add ${tunnelName} mode vti remote ${server2.ipAddress} local ${server1.ipAddress} key ${vtiKey}`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode vti remote ${server1.ipAddress} local ${server2.ipAddress} key ${vtiKey}`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'WireGuard':\n            localLog({\n                type: 'info',\n                message: 'Generating WireGuard keys...'\n            });\n            // Check if config already exists\n            const wgCheckS1 = await ssh1.execCommand(`test -f /etc/wireguard/${tunnelName}.conf`);\n            const wgCheckS2 = await ssh2.execCommand(`test -f /etc/wireguard/${tunnelName}.conf`);\n            if (wgCheckS1.code === 0 || wgCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `WireGuard config ${tunnelName} already exists. Removing old config...`\n                });\n                await ssh1.execCommand(`wg-quick down ${tunnelName} 2>/dev/null || true`);\n                await ssh2.execCommand(`wg-quick down ${tunnelName} 2>/dev/null || true`);\n                await ssh1.execCommand(`rm -f /etc/wireguard/${tunnelName}.conf`);\n                await ssh2.execCommand(`rm -f /etc/wireguard/${tunnelName}.conf`);\n            }\n            const s1_keys_res = await ssh1.execCommand('umask 077 && wg genkey | tee privatekey | wg pubkey > publickey && cat privatekey && cat publickey');\n            const s2_keys_res = await ssh2.execCommand('umask 077 && wg genkey | tee privatekey | wg pubkey > publickey && cat privatekey && cat publickey');\n            if (s1_keys_res.code !== 0 || s2_keys_res.code !== 0) throw new Error(`Failed to generate WireGuard keys: ${s1_keys_res.stderr} ${s2_keys_res.stderr}`);\n            const [s1_priv, s1_pub] = s1_keys_res.stdout.split('\\n');\n            const [s2_priv, s2_pub] = s2_keys_res.stdout.split('\\n');\n            localLog({\n                type: 'success',\n                message: 'WireGuard keys generated.'\n            });\n            const randomPort = ()=>Math.floor(Math.random() * (65535 - 49152 + 1)) + 49152;\n            const s1_port = randomPort();\n            const s2_port = randomPort();\n            localLog({\n                type: 'info',\n                message: `Using port ${s1_port} for ${server1.name} and port ${s2_port} for ${server2.name}`\n            });\n            const wg_s1_config = `[Interface]\\nPrivateKey = ${s1_priv}\\nAddress = ${tunnelIp1}/24\\nListenPort = ${s1_port}\\n\\n[Peer]\\nPublicKey = ${s2_pub}\\nEndpoint = ${server2.ipAddress}:${s2_port}\\nAllowedIPs = ${tunnelIp2}/32\\nPersistentKeepalive = 25`;\n            const wg_s2_config = `[Interface]\\nPrivateKey = ${s2_priv}\\nAddress = ${tunnelIp2}/24\\nListenPort = ${s2_port}\\n\\n[Peer]\\nPublicKey = ${s1_pub}\\nEndpoint = ${server1.ipAddress}:${s1_port}\\nAllowedIPs = ${tunnelIp1}/32\\nPersistentKeepalive = 25`;\n            commandsS1.push(`echo \"${wg_s1_config}\" > /etc/wireguard/${tunnelName}.conf`);\n            commandsS1.push(`wg-quick up ${tunnelName}`);\n            commandsS2.push(`echo \"${wg_s2_config}\" > /etc/wireguard/${tunnelName}.conf`);\n            commandsS2.push(`wg-quick up ${tunnelName}`);\n            break;\n        case 'OpenVPN':\n            localLog({\n                type: 'info',\n                message: 'Checking for existing OpenVPN config...'\n            });\n            // Check and stop existing OpenVPN service\n            const ovpnCheckS1 = await ssh1.execCommand(`test -f /etc/openvpn/${tunnelName}.conf`);\n            const ovpnCheckS2 = await ssh2.execCommand(`test -f /etc/openvpn/${tunnelName}.conf`);\n            if (ovpnCheckS1.code === 0 || ovpnCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `OpenVPN config ${tunnelName} already exists. Stopping old service...`\n                });\n                await ssh1.execCommand(`systemctl stop openvpn@${tunnelName} 2>/dev/null || true`);\n                await ssh2.execCommand(`systemctl stop openvpn@${tunnelName} 2>/dev/null || true`);\n                await ssh1.execCommand(`rm -f /etc/openvpn/${tunnelName}.conf`);\n                await ssh2.execCommand(`rm -f /etc/openvpn/${tunnelName}.conf`);\n            }\n            localLog({\n                type: 'info',\n                message: 'Generating OpenVPN static key...'\n            });\n            const keyRes = await ssh1.execCommand('openvpn --genkey --secret static.key && cat static.key');\n            if (keyRes.code !== 0) throw new Error(`Failed to generate OpenVPN key: ${keyRes.stderr}`);\n            const staticKey = keyRes.stdout;\n            localLog({\n                type: 'success',\n                message: 'OpenVPN static key generated.'\n            });\n            const ovpn_port = Math.floor(Math.random() * (65535 - 49152 + 1)) + 49152;\n            localLog({\n                type: 'info',\n                message: `Using port ${ovpn_port} for OpenVPN connection.`\n            });\n            localLog({\n                type: 'info',\n                message: `Copying key to ${server2.name}...`\n            });\n            await ssh2.execCommand(`echo \"${staticKey}\" > /etc/openvpn/static.key`);\n            localLog({\n                type: 'success',\n                message: `Key copied to ${server2.name}.`\n            });\n            const s1_config = `dev ${tunnelName}\\nifconfig ${tunnelIp1} ${tunnelIp2}\\nremote ${server2.ipAddress}\\nsecret /etc/openvpn/static.key\\nport ${ovpn_port}\\nproto udp\\nkeepalive 10 60\\nping-timer-rem\\npersist-tun\\npersist-key\\nverb 3`;\n            const s2_config = `dev ${tunnelName}\\nifconfig ${tunnelIp2} ${tunnelIp1}\\nremote ${server1.ipAddress}\\nsecret /etc/openvpn/static.key\\nport ${ovpn_port}\\nproto udp\\nkeepalive 10 60\\nping-timer-rem\\npersist-tun\\npersist-key\\nverb 3`;\n            commandsS1.push(`echo \"${s1_config}\" > /etc/openvpn/${tunnelName}.conf`);\n            commandsS1.push(`systemctl start openvpn@${tunnelName}`);\n            commandsS2.push(`echo \"${s2_config}\" > /etc/openvpn/${tunnelName}.conf`);\n            commandsS2.push(`systemctl start openvpn@${tunnelName}`);\n            break;\n        case 'Reverse Tunnel (via SSH)':\n            localLog({\n                type: 'info',\n                message: 'Configuring SSH Reverse Tunnel...'\n            });\n            for (const [ssh, server] of [\n                [\n                    ssh1,\n                    server1\n                ],\n                [\n                    ssh2,\n                    server2\n                ]\n            ]){\n                if (!ssh) continue;\n                localLog({\n                    type: 'info',\n                    message: `Checking for PermitTunnel on ${server.name}`\n                });\n                const checkCmd = `grep -q \"^\\\\s*PermitTunnel\\\\s*yes\" /etc/ssh/sshd_config`;\n                const checkRes = await ssh.execCommand(checkCmd);\n                if (checkRes.code !== 0) {\n                    localLog({\n                        type: 'warning',\n                        message: `PermitTunnel not enabled on ${server.name}. Attempting to enable.`\n                    });\n                    const enableCmd = `echo 'PermitTunnel yes' | sudo tee -a /etc/ssh/sshd_config && sudo systemctl restart sshd`;\n                    log({\n                        type: 'command',\n                        message: `[${server.name}] ${enableCmd}`\n                    });\n                    const enableRes = await ssh.execCommand(enableCmd);\n                    if (enableRes.code !== 0) {\n                        throw new Error(`Failed to enable PermitTunnel on ${server.name}: ${enableRes.stderr}`);\n                    }\n                    localLog({\n                        type: 'success',\n                        message: `PermitTunnel enabled and sshd restarted on ${server.name}`\n                    });\n                } else {\n                    localLog({\n                        type: 'success',\n                        message: `PermitTunnel is already enabled on ${server.name}`\n                    });\n                }\n            }\n            localLog({\n                type: 'info',\n                message: `Establishing tunnel from ${server2.name} to ${server1.name}`\n            });\n            const anyTun = 'any';\n            const sshTunnelCmd = `ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -f -w ${anyTun}:${anyTun} ${server1.username}@${server1.ipAddress} 'true'`;\n            log({\n                type: 'command',\n                message: `[${server2.name}] ${sshTunnelCmd}`\n            });\n            const sshTunnelRes = await ssh2.execCommand(sshTunnelCmd);\n            if (sshTunnelRes.code !== 0 && !sshTunnelRes.stderr.includes(\"already exists\")) {\n                throw new Error(`Failed to establish SSH tunnel from ${server2.name}: ${sshTunnelRes.stderr}`);\n            }\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            localLog({\n                type: 'success',\n                message: `SSH tunnel process initiated on ${server2.name}.`\n            });\n            const findTunS1 = await ssh1.execCommand(\"ip -o tuntap | awk '{print $1}'\");\n            const findTunS2 = await ssh2.execCommand(\"ip -o tuntap | awk '{print $1}'\");\n            const tunDeviceS1 = findTunS1.stdout.split('\\n').filter(Boolean).pop();\n            const tunDeviceS2 = findTunS2.stdout.split('\\n').filter(Boolean).pop();\n            if (!tunDeviceS1 || !tunDeviceS2) {\n                throw new Error(\"Could not determine tunnel device name after SSH tunnel creation.\");\n            }\n            localLog({\n                type: 'info',\n                message: `Found tunnel device ${tunDeviceS1} on ${server1.name}`\n            });\n            localLog({\n                type: 'info',\n                message: `Found tunnel device ${tunDeviceS2} on ${server2.name}`\n            });\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunDeviceS1}`);\n            commandsS1.push(`ip link set ${tunDeviceS1} up`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunDeviceS2}`);\n            commandsS2.push(`ip link set ${tunDeviceS2} up`);\n            break;\n        case 'IPsec':\n            localLog({\n                type: 'info',\n                message: 'Configuring IPsec tunnel using strongSwan...'\n            });\n            const connName = `conn-${tunnelName}`;\n            // Check for existing connection\n            const ipsecCheckS1 = await ssh1.execCommand(`ipsec status | grep -q \"${connName}\"`);\n            const ipsecCheckS2 = await ssh2.execCommand(`ipsec status | grep -q \"${connName}\"`);\n            if (ipsecCheckS1.code === 0 || ipsecCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `IPsec connection ${connName} already exists. Stopping old connection...`\n                });\n                await ssh1.execCommand(`ipsec down ${connName} 2>/dev/null || true`);\n                await ssh2.execCommand(`ipsec down ${connName} 2>/dev/null || true`);\n            }\n            localLog({\n                type: 'info',\n                message: 'Generating Pre-Shared Key (PSK)...'\n            });\n            const pskRes = await ssh1.execCommand('openssl rand -base64 32');\n            if (pskRes.code !== 0) throw new Error('Failed to generate PSK.');\n            const psk = pskRes.stdout.trim();\n            localLog({\n                type: 'success',\n                message: 'PSK generated successfully.'\n            });\n            const ipsecConfigS1 = `\nconfig setup\n    charondebug=\"all\"\n    uniqueids=yes\n    strictcrlpolicy=no\n\nconn %default\n    ikelifetime=60m\n    keylife=20m\n    rekeymargin=3m\n    keyingtries=1\n    keyexchange=ikev2\n    authby=secret\n    \nconn ${connName}\n    left=%defaultroute\n    leftid=${server1.ipAddress}\n    leftsubnet=${tunnelIp1}/32\n    right=${server2.ipAddress}\n    rightid=${server2.ipAddress}\n    rightsubnet=${tunnelIp2}/32\n    auto=start\n`;\n            const ipsecConfigS2 = `\nconfig setup\n    charondebug=\"all\"\n    uniqueids=yes\n    strictcrlpolicy=no\n\nconn %default\n    ikelifetime=60m\n    keylife=20m\n    rekeymargin=3m\n    keyingtries=1\n    keyexchange=ikev2\n    authby=secret\n    \nconn ${connName}\n    left=%defaultroute\n    leftid=${server2.ipAddress}\n    leftsubnet=${tunnelIp2}/32\n    right=${server1.ipAddress}\n    rightid=${server1.ipAddress}\n    rightsubnet=${tunnelIp1}/32\n    auto=start\n`;\n            const ipsecSecrets = `${server1.ipAddress} ${server2.ipAddress} : PSK \"${psk}\"`;\n            commandsS1.push(`echo \"${ipsecConfigS1}\" > /etc/ipsec.conf`);\n            commandsS1.push(`echo \"${ipsecSecrets}\" > /etc/ipsec.secrets`);\n            commandsS1.push('ipsec restart');\n            commandsS1.push(`ipsec up ${connName}`);\n            commandsS2.push(`echo \"${ipsecConfigS2}\" > /etc/ipsec.conf`);\n            commandsS2.push(`echo \"${ipsecSecrets}\" > /etc/ipsec.secrets`);\n            commandsS2.push('ipsec restart');\n            commandsS2.push(`ipsec up ${connName}`);\n            break;\n        case 'V2Ray (WS+TLS)':\n            if (!domain) {\n                throw new Error(\"Domain name is required for V2Ray (WS+TLS) tunnels.\");\n            }\n            localLog({\n                type: 'success',\n                message: `Using domain: ${domain}`\n            });\n            const runCommand = async (ssh, serverName, command, ignoreErrors = false)=>{\n                log({\n                    type: 'command',\n                    message: `[${serverName}] $ ${command}`\n                });\n                const result = await ssh.execCommand(command);\n                if (result.code !== 0 && !ignoreErrors) {\n                    log({\n                        type: 'error',\n                        message: `Stderr: ${result.stderr}`\n                    });\n                    throw new Error(`Command failed on ${serverName}: ${command}`);\n                }\n                if (result.stdout) localLog({\n                    type: 'success',\n                    message: result.stdout\n                });\n                return result;\n            };\n            // Check if V2Ray is already installed\n            const v2rayCheckS2 = await ssh2.execCommand('which v2ray');\n            if (v2rayCheckS2.code !== 0) {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] Installing V2Ray...`\n                });\n                await runCommand(ssh2, server2.name, 'bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)');\n                localLog({\n                    type: 'success',\n                    message: `[${server2.name}] V2Ray installed.`\n                });\n            } else {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] V2Ray already installed.`\n                });\n            }\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Setting up SSL certificate for ${domain}...`\n            });\n            // Check if certificate already exists\n            const certCheck = await ssh2.execCommand(`test -f /etc/letsencrypt/live/${domain}/fullchain.pem`);\n            let certPath = `/etc/letsencrypt/live/${domain}`;\n            if (certCheck.code !== 0) {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] Creating self-signed certificate...`\n                });\n                await runCommand(ssh2, server2.name, `mkdir -p /etc/ssl/certs/${domain}`);\n                await runCommand(ssh2, server2.name, `openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/certs/${domain}/privkey.pem -out /etc/ssl/certs/${domain}/fullchain.pem -subj \"/C=US/ST=State/L=City/O=Organization/CN=${domain}\"`);\n                certPath = `/etc/ssl/certs/${domain}`;\n                localLog({\n                    type: 'success',\n                    message: `[${server2.name}] Self-signed certificate created.`\n                });\n            } else {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] Using existing certificate.`\n                });\n            }\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Setting up nginx SSL config...`\n            });\n            const sslNginxConfig = `server {\n    listen 80;\n    server_name ${domain};\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ${domain};\n    \n    ssl_certificate ${certPath}/fullchain.pem;\n    ssl_certificate_key ${certPath}/privkey.pem;\n    \n    location / {\n        return 200 'OK';\n        add_header Content-Type text/plain;\n    }\n}`;\n            await runCommand(ssh2, server2.name, `echo '${sslNginxConfig}' > /etc/nginx/sites-available/default`);\n            await runCommand(ssh2, server2.name, 'systemctl restart nginx');\n            localLog({\n                type: 'success',\n                message: `[${server2.name}] SSL certificate obtained and Nginx configured by Certbot.`\n            });\n            const v2rayPath = \"/v2raypath\";\n            const v2rayPort = 10000;\n            const v2rayUUID = (await ssh1.execCommand('cat /proc/sys/kernel/random/uuid')).stdout.trim();\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Generated V2Ray UUID: ${v2rayUUID}`\n            });\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Configuring V2Ray...`\n            });\n            const v2rayConfigS2 = `\n{\n  \"inbounds\": [{\n    \"port\": ${v2rayPort},\n    \"listen\":\"127.0.0.1\",\n    \"protocol\": \"vmess\",\n    \"settings\": {\n      \"clients\": [\n        {\n          \"id\": \"${v2rayUUID}\",\n          \"alterId\": 0\n        }\n      ]\n    },\n    \"streamSettings\": {\n      \"network\": \"ws\",\n      \"wsSettings\": {\n        \"path\": \"${v2rayPath}\"\n      }\n    }\n  }],\n  \"outbounds\": [{\n    \"protocol\": \"freedom\",\n    \"settings\": {}\n  }]\n}`;\n            await runCommand(ssh2, server2.name, `echo '${v2rayConfigS2}' > /usr/local/etc/v2ray/config.json`);\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Adding V2Ray proxy location to Nginx...`\n            });\n            const nginxConfPath = `/etc/nginx/sites-available/default`;\n            const nginxV2rayLocationBlock = `\n    location ${v2rayPath} {\n      if ($http_upgrade != \"websocket\") {\n        return 404;\n      }\n      proxy_redirect off;\n      proxy_pass http://127.0.0.1:${v2rayPort};\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n`;\n            const sedCommand = `sed -i '/^\\\\s*server\\\\s*{/,$ {/}/i \\\\${nginxV2rayLocationBlock.split('\\n').join('\\\\n')}}' ${nginxConfPath}`;\n            // Remove any existing v2raypath locations to prevent duplicates\n            await runCommand(ssh2, server2.name, `sed -i '/location.*\\/v2raypath/,/^[[:space:]]*}/d' ${nginxConfPath}`, true);\n            const nginxResult = await ssh2.execCommand(`cat ${nginxConfPath}`);\n            if (nginxResult.code !== 0) {\n                throw new Error(`Failed to read Nginx config on ${server2.name}: ${nginxResult.stderr}`);\n            }\n            let nginxConf = nginxResult.stdout;\n            // Find the HTTPS server block and add location there\n            const httpsServerMatch = nginxConf.match(/(server\\s*{[^}]*listen\\s+443[^}]*)(})/);\n            if (httpsServerMatch) {\n                const beforeClosing = httpsServerMatch[1];\n                const newServerBlock = beforeClosing + nginxV2rayLocationBlock + '\\n    }';\n                nginxConf = nginxConf.replace(httpsServerMatch[0], newServerBlock);\n            } else {\n                // Fallback: add to the end of first server block\n                const lastBracketIndex = nginxConf.lastIndexOf('}');\n                nginxConf = nginxConf.slice(0, lastBracketIndex) + nginxV2rayLocationBlock + nginxConf.slice(lastBracketIndex);\n            }\n            await runCommand(ssh2, server2.name, `echo '${nginxConf.replace(/'/g, \"'\\\\''\")}' > ${nginxConfPath}`);\n            localLog({\n                type: 'success',\n                message: `[${server2.name}] V2Ray location block added to Nginx config.`\n            });\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Restarting services...`\n            });\n            await runCommand(ssh2, server2.name, 'systemctl enable v2ray && systemctl restart v2ray');\n            await runCommand(ssh2, server2.name, 'nginx -t');\n            await runCommand(ssh2, server2.name, 'systemctl restart nginx');\n            localLog({\n                type: 'success',\n                message: `[${server2.name}] V2Ray and Nginx configured and started.`\n            });\n            // Check if V2Ray is already installed on client\n            const v2rayCheckS1 = await ssh1.execCommand('which v2ray');\n            if (v2rayCheckS1.code !== 0) {\n                localLog({\n                    type: 'info',\n                    message: `[${server1.name}] Installing V2Ray...`\n                });\n                await runCommand(ssh1, server1.name, 'bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)');\n            } else {\n                localLog({\n                    type: 'info',\n                    message: `[${server1.name}] V2Ray already installed.`\n                });\n            }\n            localLog({\n                type: 'info',\n                message: `[${server1.name}] Configuring V2Ray...`\n            });\n            const v2rayConfigS1 = `\n{\n  \"inbounds\": [{\n    \"port\": 1080,\n    \"protocol\": \"socks\",\n    \"settings\": {\n      \"auth\": \"noauth\"\n    }\n  }],\n  \"outbounds\": [{\n    \"protocol\": \"vmess\",\n    \"settings\": {\n      \"vnext\": [\n        {\n          \"address\": \"${domain}\",\n          \"port\": 443,\n          \"users\": [\n            {\n              \"id\": \"${v2rayUUID}\",\n              \"alterId\": 0\n            }\n          ]\n        }\n      ]\n    },\n    \"streamSettings\": {\n      \"network\": \"ws\",\n      \"security\": \"tls\",\n      \"wsSettings\": {\n        \"path\": \"${v2rayPath}\"\n      }\n    }\n  }]\n}`;\n            await runCommand(ssh1, server1.name, `echo '${v2rayConfigS1}' > /usr/local/etc/v2ray/config.json`);\n            localLog({\n                type: 'info',\n                message: `[${server1.name}] Restarting V2Ray...`\n            });\n            await runCommand(ssh1, server1.name, 'systemctl enable v2ray && systemctl restart v2ray');\n            localLog({\n                type: 'success',\n                message: `[${server1.name}] V2Ray client configured and started.`\n            });\n            localLog({\n                type: 'warning',\n                message: `V2Ray setup complete. Use SOCKS5 proxy on ${server1.ipAddress}:1080 to route traffic through the tunnel.`\n            });\n            break;\n        default:\n            localLog({\n                type: 'error',\n                message: `Tunnel type \"${tunnelType}\" is not yet implemented.`\n            });\n            throw new Error(`Tunnel type \"${tunnelType}\" is not yet implemented.`);\n    }\n    return {\n        commandsS1,\n        commandsS2,\n        extraLogs\n    };\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_2__.ensureServerEntryExports)([\n    getTunnelCommands\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getTunnelCommands, \"40942a7bc9e95fa152c974e785820ed6782eb18639\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/commands.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/core.ts":
/*!*****************************************!*\
  !*** ./src/app/actions/tunnels/core.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteTunnel: () => (/* binding */ deleteTunnel),\n/* harmony export */   getTunnels: () => (/* binding */ getTunnels),\n/* harmony export */   pingTunnel: () => (/* binding */ pingTunnel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"000b64c20439500c04d27cc83b259e25ff7d6f3143\":\"getTunnels\",\"4035c159f07876bad8990e6b7037fc8c7456a216f2\":\"pingTunnel\",\"40e10b682b3cc7423d604239ffc6658ced55a04e69\":\"deleteTunnel\"} */ \n\n\n\n\n\n// Tunnel Actions\nasync function getTunnels() {\n    const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n    const tunnels = await tunnelsCollection.find({}).sort({\n        createdAt: -1\n    }).toArray();\n    return tunnels;\n}\nasync function deleteTunnel(id) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id)) return;\n    const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n    await tunnelsCollection.deleteOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id)\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n}\nasync function pingTunnel(tunnel) {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getServersCollection)();\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(tunnel.server1Id)) return {\n        latency: null\n    };\n    const server1 = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(tunnel.server1Id)\n    });\n    if (!server1) {\n        console.error(`Server with ID ${tunnel.server1Id} not found for tunnel ping.`);\n        return {\n            latency: null\n        };\n    }\n    let ssh = null;\n    try {\n        ssh = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server1);\n        const result = await ssh.execCommand(`ping -c 1 -W 3 ${tunnel.tunnelIp2}`);\n        if (result.code !== 0) {\n            console.error(`Tunnel ping failed from ${server1.ipAddress} to ${tunnel.tunnelIp2}:`, result.stderr);\n            return {\n                latency: null\n            };\n        }\n        const match = result.stdout.match(/time=([\\d.]+) ms/);\n        if (match && match[1]) {\n            return {\n                latency: parseFloat(match[1])\n            };\n        }\n        return {\n            latency: null\n        };\n    } catch (error) {\n        console.error(`Tunnel ping failed for tunnel ${tunnel.id}:`, error);\n        return {\n            latency: null\n        };\n    } finally{\n        if (ssh?.isConnected()) {\n            ssh.dispose();\n        }\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__.ensureServerEntryExports)([\n    getTunnels,\n    deleteTunnel,\n    pingTunnel\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getTunnels, \"000b64c20439500c04d27cc83b259e25ff7d6f3143\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(deleteTunnel, \"40e10b682b3cc7423d604239ffc6658ced55a04e69\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(pingTunnel, \"4035c159f07876bad8990e6b7037fc8c7456a216f2\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FjdGlvbnMvdHVubmVscy9jb3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU0QztBQUVUO0FBR2dDO0FBQ2pCO0FBRWxELGlCQUFpQjtBQUNWLGVBQWVLO0lBQ2xCLE1BQU1DLG9CQUFvQixNQUFNSCx5REFBb0JBO0lBQ3BELE1BQU1JLFVBQVUsTUFBTUQsa0JBQWtCRSxJQUFJLENBQUMsQ0FBQyxHQUFHQyxJQUFJLENBQUM7UUFBRUMsV0FBVyxDQUFDO0lBQUUsR0FBR0MsT0FBTztJQUNoRixPQUFPSjtBQUNYO0FBRU8sZUFBZUssYUFBYUMsRUFBVTtJQUN6QyxJQUFJLENBQUNaLDZDQUFRQSxDQUFDYSxPQUFPLENBQUNELEtBQUs7SUFDM0IsTUFBTVAsb0JBQW9CLE1BQU1ILHlEQUFvQkE7SUFDcEQsTUFBTUcsa0JBQWtCUyxTQUFTLENBQUM7UUFBRUMsS0FBSyxJQUFJZiw2Q0FBUUEsQ0FBQ1k7SUFBSTtJQUMxRGIsMERBQWNBLENBQUM7QUFDbkI7QUFFTyxlQUFlaUIsV0FBV0MsTUFBYztJQUM3QyxNQUFNQyxvQkFBb0IsTUFBTWpCLHlEQUFvQkE7SUFDcEQsSUFBSSxDQUFDRCw2Q0FBUUEsQ0FBQ2EsT0FBTyxDQUFDSSxPQUFPRSxTQUFTLEdBQUcsT0FBTztRQUFFQyxTQUFTO0lBQUs7SUFDaEUsTUFBTUMsVUFBVSxNQUFNSCxrQkFBa0JJLE9BQU8sQ0FBQztRQUFFUCxLQUFLLElBQUlmLDZDQUFRQSxDQUFDaUIsT0FBT0UsU0FBUztJQUFFO0lBRXRGLElBQUksQ0FBQ0UsU0FBUztRQUNaRSxRQUFRQyxLQUFLLENBQUMsQ0FBQyxlQUFlLEVBQUVQLE9BQU9FLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQztRQUM3RSxPQUFPO1lBQUVDLFNBQVM7UUFBSztJQUN6QjtJQUVBLElBQUlLLE1BQXNCO0lBQzFCLElBQUk7UUFDRkEsTUFBTSxNQUFNdEIsOERBQXdCQSxDQUFDa0I7UUFFckMsTUFBTUssU0FBUyxNQUFNRCxJQUFJRSxXQUFXLENBQUMsQ0FBQyxlQUFlLEVBQUVWLE9BQU9XLFNBQVMsRUFBRTtRQUV6RSxJQUFJRixPQUFPRyxJQUFJLEtBQUssR0FBRztZQUNuQk4sUUFBUUMsS0FBSyxDQUFDLENBQUMsd0JBQXdCLEVBQUVILFFBQVFTLFNBQVMsQ0FBQyxJQUFJLEVBQUViLE9BQU9XLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRUYsT0FBT0ssTUFBTTtZQUNuRyxPQUFPO2dCQUFFWCxTQUFTO1lBQUs7UUFDM0I7UUFFQSxNQUFNWSxRQUFRTixPQUFPTyxNQUFNLENBQUNELEtBQUssQ0FBQztRQUNsQyxJQUFJQSxTQUFTQSxLQUFLLENBQUMsRUFBRSxFQUFFO1lBQ25CLE9BQU87Z0JBQUVaLFNBQVNjLFdBQVdGLEtBQUssQ0FBQyxFQUFFO1lBQUU7UUFDM0M7UUFFQSxPQUFPO1lBQUVaLFNBQVM7UUFBSztJQUV6QixFQUFFLE9BQU9JLE9BQU87UUFDZEQsUUFBUUMsS0FBSyxDQUFDLENBQUMsOEJBQThCLEVBQUVQLE9BQU9MLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRVk7UUFDN0QsT0FBTztZQUFFSixTQUFTO1FBQUs7SUFDekIsU0FBVTtRQUNOLElBQUdLLEtBQUtVLGVBQWU7WUFDbkJWLElBQUlXLE9BQU87UUFDZjtJQUNKO0FBQ0Y7OztJQWpEc0JoQztJQU1BTztJQU9BSzs7QUFiQVosMEZBQUFBLENBQUFBO0FBTUFPLDBGQUFBQSxDQUFBQTtBQU9BSywwRkFBQUEsQ0FBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uLW1haW5cXHNyY1xcYXBwXFxhY3Rpb25zXFx0dW5uZWxzXFxjb3JlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc2VydmVyJztcblxuaW1wb3J0IHsgcmV2YWxpZGF0ZVBhdGggfSBmcm9tICduZXh0L2NhY2hlJztcbmltcG9ydCB7IE5vZGVTU0ggfSBmcm9tICdub2RlLXNzaCc7XG5pbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gJ21vbmdvZGInO1xuXG5pbXBvcnQgdHlwZSB7IFNlcnZlciwgVHVubmVsIH0gZnJvbSAnQC9saWIvdHlwZXMnO1xuaW1wb3J0IHsgZ2V0U2VydmVyc0NvbGxlY3Rpb24sIGdldFR1bm5lbHNDb2xsZWN0aW9uIH0gZnJvbSAnLi4vZGInO1xuaW1wb3J0IHsgY29ubmVjdFdpdGhLZXlNYW5hZ2VtZW50IH0gZnJvbSAnLi4vc3NoJztcblxuLy8gVHVubmVsIEFjdGlvbnNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUdW5uZWxzKCk6IFByb21pc2U8VHVubmVsW10+IHtcbiAgICBjb25zdCB0dW5uZWxzQ29sbGVjdGlvbiA9IGF3YWl0IGdldFR1bm5lbHNDb2xsZWN0aW9uKCk7XG4gICAgY29uc3QgdHVubmVscyA9IGF3YWl0IHR1bm5lbHNDb2xsZWN0aW9uLmZpbmQoe30pLnNvcnQoeyBjcmVhdGVkQXQ6IC0xIH0pLnRvQXJyYXkoKTtcbiAgICByZXR1cm4gdHVubmVscyBhcyBUdW5uZWxbXTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVR1bm5lbChpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKCFPYmplY3RJZC5pc1ZhbGlkKGlkKSkgcmV0dXJuO1xuICAgIGNvbnN0IHR1bm5lbHNDb2xsZWN0aW9uID0gYXdhaXQgZ2V0VHVubmVsc0NvbGxlY3Rpb24oKTtcbiAgICBhd2FpdCB0dW5uZWxzQ29sbGVjdGlvbi5kZWxldGVPbmUoeyBfaWQ6IG5ldyBPYmplY3RJZChpZCkgfSk7XG4gICAgcmV2YWxpZGF0ZVBhdGgoJy8nKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBpbmdUdW5uZWwodHVubmVsOiBUdW5uZWwpOiBQcm9taXNlPHsgbGF0ZW5jeTogbnVtYmVyIHwgbnVsbCB9PiB7XG4gIGNvbnN0IHNlcnZlcnNDb2xsZWN0aW9uID0gYXdhaXQgZ2V0U2VydmVyc0NvbGxlY3Rpb24oKTtcbiAgaWYgKCFPYmplY3RJZC5pc1ZhbGlkKHR1bm5lbC5zZXJ2ZXIxSWQpKSByZXR1cm4geyBsYXRlbmN5OiBudWxsIH07XG4gIGNvbnN0IHNlcnZlcjEgPSBhd2FpdCBzZXJ2ZXJzQ29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBuZXcgT2JqZWN0SWQodHVubmVsLnNlcnZlcjFJZCkgfSk7XG5cbiAgaWYgKCFzZXJ2ZXIxKSB7XG4gICAgY29uc29sZS5lcnJvcihgU2VydmVyIHdpdGggSUQgJHt0dW5uZWwuc2VydmVyMUlkfSBub3QgZm91bmQgZm9yIHR1bm5lbCBwaW5nLmApO1xuICAgIHJldHVybiB7IGxhdGVuY3k6IG51bGwgfTtcbiAgfVxuICBcbiAgbGV0IHNzaDogTm9kZVNTSCB8IG51bGwgPSBudWxsO1xuICB0cnkge1xuICAgIHNzaCA9IGF3YWl0IGNvbm5lY3RXaXRoS2V5TWFuYWdlbWVudChzZXJ2ZXIxKTtcbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzc2guZXhlY0NvbW1hbmQoYHBpbmcgLWMgMSAtVyAzICR7dHVubmVsLnR1bm5lbElwMn1gKTtcbiAgICBcbiAgICBpZiAocmVzdWx0LmNvZGUgIT09IDApIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgVHVubmVsIHBpbmcgZmFpbGVkIGZyb20gJHtzZXJ2ZXIxLmlwQWRkcmVzc30gdG8gJHt0dW5uZWwudHVubmVsSXAyfTpgLCByZXN1bHQuc3RkZXJyKTtcbiAgICAgICAgcmV0dXJuIHsgbGF0ZW5jeTogbnVsbCB9O1xuICAgIH1cblxuICAgIGNvbnN0IG1hdGNoID0gcmVzdWx0LnN0ZG91dC5tYXRjaCgvdGltZT0oW1xcZC5dKykgbXMvKTtcbiAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHtcbiAgICAgICAgcmV0dXJuIHsgbGF0ZW5jeTogcGFyc2VGbG9hdChtYXRjaFsxXSkgfTtcbiAgICB9XG5cbiAgICByZXR1cm4geyBsYXRlbmN5OiBudWxsIH07XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGBUdW5uZWwgcGluZyBmYWlsZWQgZm9yIHR1bm5lbCAke3R1bm5lbC5pZH06YCwgZXJyb3IpO1xuICAgIHJldHVybiB7IGxhdGVuY3k6IG51bGwgfTtcbiAgfSBmaW5hbGx5IHtcbiAgICAgIGlmKHNzaD8uaXNDb25uZWN0ZWQoKSkge1xuICAgICAgICAgIHNzaC5kaXNwb3NlKCk7XG4gICAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJyZXZhbGlkYXRlUGF0aCIsIk9iamVjdElkIiwiZ2V0U2VydmVyc0NvbGxlY3Rpb24iLCJnZXRUdW5uZWxzQ29sbGVjdGlvbiIsImNvbm5lY3RXaXRoS2V5TWFuYWdlbWVudCIsImdldFR1bm5lbHMiLCJ0dW5uZWxzQ29sbGVjdGlvbiIsInR1bm5lbHMiLCJmaW5kIiwic29ydCIsImNyZWF0ZWRBdCIsInRvQXJyYXkiLCJkZWxldGVUdW5uZWwiLCJpZCIsImlzVmFsaWQiLCJkZWxldGVPbmUiLCJfaWQiLCJwaW5nVHVubmVsIiwidHVubmVsIiwic2VydmVyc0NvbGxlY3Rpb24iLCJzZXJ2ZXIxSWQiLCJsYXRlbmN5Iiwic2VydmVyMSIsImZpbmRPbmUiLCJjb25zb2xlIiwiZXJyb3IiLCJzc2giLCJyZXN1bHQiLCJleGVjQ29tbWFuZCIsInR1bm5lbElwMiIsImNvZGUiLCJpcEFkZHJlc3MiLCJzdGRlcnIiLCJtYXRjaCIsInN0ZG91dCIsInBhcnNlRmxvYXQiLCJpc0Nvbm5lY3RlZCIsImRpc3Bvc2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/core.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/creation.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/tunnels/creation.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCombinedTunnel: () => (/* binding */ createCombinedTunnel),\n/* harmony export */   createTunnel: () => (/* binding */ createTunnel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands */ \"(rsc)/./src/app/actions/tunnels/commands.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"783933480a03bd6e6efcbb415da08635aa36f757e7\":\"createTunnel\",\"7e9c0aab5f0f1eb7017187a1e04370c62f03f9dc1b\":\"createCombinedTunnel\"} */ \n\n\n\n\n\n\nasync function createCombinedTunnel(server1, server2, server3, tunnelType1, tunnelType2, domain) {\n    const combinedLogs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        combinedLogs.push(entry);\n    };\n    log({\n        type: 'info',\n        message: `Starting combined tunnel creation: ${server1.name} -> ${server2.name} -> ${server3.name}`\n    });\n    log({\n        type: 'info',\n        message: `--- Creating Tunnel 1: ${server1.name} to ${server2.name} (${tunnelType1}) ---`\n    });\n    const result1 = await createTunnel(server1, server2, tunnelType1, domain);\n    combinedLogs.push(...result1.logs);\n    if (!result1.success) {\n        log({\n            type: 'error',\n            message: 'Failed to create the first tunnel. Aborting combined tunnel creation.'\n        });\n        return {\n            success: false,\n            logs: combinedLogs\n        };\n    }\n    log({\n        type: 'success',\n        message: `--- Tunnel 1 (${server1.name} -> ${server2.name}) created successfully. ---`\n    });\n    log({\n        type: 'info',\n        message: `--- Creating Tunnel 2: ${server2.name} to ${server3.name} (${tunnelType2}) ---`\n    });\n    const result2 = await createTunnel(server2, server3, tunnelType2, domain);\n    combinedLogs.push(...result2.logs);\n    if (!result2.success) {\n        log({\n            type: 'error',\n            message: 'Failed to create the second tunnel. The first tunnel was created, but the chain is incomplete.'\n        });\n        return {\n            success: false,\n            logs: combinedLogs\n        };\n    }\n    log({\n        type: 'success',\n        message: `--- Tunnel 2 (${server2.name} -> ${server3.name}) created successfully. ---`\n    });\n    log({\n        type: 'success',\n        message: 'Combined tunnel creation process completed successfully!'\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    return {\n        success: true,\n        logs: combinedLogs\n    };\n}\nasync function createTunnel(server1, server2, tunnelType, domain) {\n    const logs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        logs.push(entry);\n    };\n    let ssh1 = null;\n    let ssh2 = null;\n    const tunnelName = `tun${Math.floor(Math.random() * 1000)}`;\n    const randomOctet = ()=>Math.floor(Math.random() * 253) + 1;\n    const subnet = randomOctet();\n    const tunnelIp1 = `10.0.${subnet}.1`;\n    const tunnelIp2 = `10.0.${subnet}.2`;\n    try {\n        log({\n            type: 'info',\n            message: 'Starting tunnel creation process...'\n        });\n        log({\n            type: 'info',\n            message: `Tunnel type: ${tunnelType}`\n        });\n        log({\n            type: 'info',\n            message: `Server 1: ${server1.name} (${server1.ipAddress})`\n        });\n        log({\n            type: 'info',\n            message: `Server 2: ${server2.name} (${server2.ipAddress})`\n        });\n        log({\n            type: 'info',\n            message: `Using tunnel name: ${tunnelName}`\n        });\n        log({\n            type: 'success',\n            message: `Server 1 Tunnel IP: ${tunnelIp1}`\n        });\n        log({\n            type: 'success',\n            message: `Server 2 Tunnel IP: ${tunnelIp2}`\n        });\n        log({\n            type: 'info',\n            message: `Connecting to ${server1.name}...`\n        });\n        ssh1 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server1, log);\n        log({\n            type: 'success',\n            message: `Connected to ${server1.name}`\n        });\n        log({\n            type: 'info',\n            message: `Connecting to ${server2.name}...`\n        });\n        ssh2 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server2, log);\n        log({\n            type: 'success',\n            message: `Connected to ${server2.name}`\n        });\n        log({\n            type: 'info',\n            message: `Selected tunnel type: ${tunnelType}`\n        });\n        const depsMap = {\n            'WireGuard': [\n                'wireguard-tools'\n            ],\n            'OpenVPN': [\n                'openvpn'\n            ],\n            'IPsec': [\n                'strongswan'\n            ],\n            'V2Ray (WS+TLS)': [\n                'curl',\n                'nginx',\n                'certbot',\n                'python3-certbot-nginx'\n            ]\n        };\n        const requiredDeps = depsMap[tunnelType] || [];\n        if (requiredDeps.length > 0) {\n            log({\n                type: 'info',\n                message: 'Checking and installing dependencies...'\n            });\n            const serversToProcess = [\n                {\n                    ssh: ssh1,\n                    server: server1,\n                    deps: requiredDeps\n                },\n                {\n                    ssh: ssh2,\n                    server: server2,\n                    deps: requiredDeps\n                }\n            ];\n            // Special handling for V2Ray: server1 (client) only needs curl.\n            if (tunnelType === 'V2Ray (WS+TLS)') {\n                serversToProcess[0].deps = [\n                    'curl'\n                ];\n            }\n            for (const { ssh, server, deps } of serversToProcess){\n                if (!ssh) continue;\n                let needsUpdate = false;\n                const depsToInstall = [];\n                for (const dep of deps){\n                    log({\n                        type: 'command',\n                        message: `[${server.name}] Checking for ${dep}...`\n                    });\n                    const checkResult = await ssh.execCommand(`dpkg -s ${dep}`);\n                    if (checkResult.code !== 0) {\n                        log({\n                            type: 'warning',\n                            message: `Dependency '${dep}' not found on ${server.name}. It will be installed.`\n                        });\n                        depsToInstall.push(dep);\n                        needsUpdate = true;\n                    } else {\n                        log({\n                            type: 'success',\n                            message: `Dependency '${dep}' is already installed on ${server.name}.`\n                        });\n                    }\n                }\n                if (depsToInstall.length > 0) {\n                    if (needsUpdate) {\n                        log({\n                            type: 'command',\n                            message: `[${server.name}] Running apt-get update...`\n                        });\n                        const updateResult = await ssh.execCommand('apt-get update');\n                        if (updateResult.code !== 0) {\n                            throw new Error(`Failed to run apt-get update on ${server.name}: ${updateResult.stderr}`);\n                        }\n                        log({\n                            type: 'success',\n                            message: `[${server.name}] Package list updated.`\n                        });\n                    }\n                    const installCmd = `apt-get install -y ${depsToInstall.join(' ')}`;\n                    log({\n                        type: 'command',\n                        message: `[${server.name}] ${installCmd}`\n                    });\n                    const installResult = await ssh.execCommand(installCmd);\n                    if (installResult.code !== 0) {\n                        throw new Error(`Failed to install dependencies on ${server.name}: ${installResult.stderr}`);\n                    }\n                    log({\n                        type: 'success',\n                        message: `[${server.name}] Dependencies installed successfully.`\n                    });\n                }\n            }\n        }\n        log({\n            type: 'info',\n            message: 'Generating tunnel commands...'\n        });\n        const { commandsS1, commandsS2, extraLogs } = await (0,_commands__WEBPACK_IMPORTED_MODULE_6__.getTunnelCommands)({\n            tunnelType,\n            server1,\n            server2,\n            ssh1,\n            ssh2,\n            tunnelName,\n            tunnelIp1,\n            tunnelIp2,\n            domain,\n            log\n        });\n        logs.push(...extraLogs);\n        log({\n            type: 'success',\n            message: 'Tunnel commands generated successfully'\n        });\n        if (tunnelType !== 'V2Ray (WS+TLS)') {\n            log({\n                type: 'info',\n                message: `Configuring tunnel on ${server1.name}...`\n            });\n            for (const cmd of commandsS1){\n                log({\n                    type: 'command',\n                    message: `[${server1.name}] ${cmd}`\n                });\n                const result = await ssh1.execCommand(cmd);\n                if (result.code !== 0) {\n                    log({\n                        type: 'error',\n                        message: `Stderr: ${result.stderr}`\n                    });\n                    throw new Error(`Command failed on ${server1.name}: ${cmd}`);\n                }\n                log({\n                    type: 'success',\n                    message: result.stdout || `Command executed successfully.`\n                });\n            }\n            log({\n                type: 'success',\n                message: `Tunnel configured on ${server1.name}.`\n            });\n            log({\n                type: 'info',\n                message: `Configuring tunnel on ${server2.name}...`\n            });\n            for (const cmd of commandsS2){\n                log({\n                    type: 'command',\n                    message: `[${server2.name}] ${cmd}`\n                });\n                const result = await ssh2.execCommand(cmd);\n                if (result.code !== 0) {\n                    log({\n                        type: 'error',\n                        message: `Stderr: ${result.stderr}`\n                    });\n                    throw new Error(`Command failed on ${server2.name}: ${cmd}`);\n                }\n                log({\n                    type: 'success',\n                    message: result.stdout || `Command executed successfully.`\n                });\n            }\n            log({\n                type: 'success',\n                message: `Tunnel configured on ${server2.name}.`\n            });\n        }\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n        log({\n            type: 'info',\n            message: 'Saving tunnel configuration...'\n        });\n        const newTunnelData = {\n            server1Id: server1.id,\n            server2Id: server2.id,\n            type: tunnelType,\n            createdAt: new Date().toISOString(),\n            isSaved: false,\n            tunnelName,\n            tunnelIp1,\n            tunnelIp2,\n            domain: tunnelType === 'V2Ray (WS+TLS)' ? domain : undefined\n        };\n        const { insertedId } = await tunnelsCollection.insertOne({\n            ...newTunnelData,\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(),\n            id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId().toString()\n        });\n        log({\n            type: 'success',\n            message: 'Tunnel configuration saved.'\n        });\n        log({\n            type: 'success',\n            message: 'Tunnel creation process completed successfully!'\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true,\n            logs\n        };\n    } catch (e) {\n        log({\n            type: 'error',\n            message: `Error: ${e.message || 'An unexpected error occurred during tunnel creation.'}`\n        });\n        log({\n            type: 'error',\n            message: `Stack: ${e.stack || 'No stack trace available'}`\n        });\n        log({\n            type: 'error',\n            message: 'Tunnel creation process failed. Please review the logs.'\n        });\n        return {\n            success: false,\n            logs\n        };\n    } finally{\n        try {\n            if (ssh1?.isConnected()) {\n                log({\n                    type: 'info',\n                    message: `Disconnecting from ${server1.name}...`\n                });\n                ssh1.dispose();\n            }\n            if (ssh2?.isConnected()) {\n                log({\n                    type: 'info',\n                    message: `Disconnecting from ${server2.name}...`\n                });\n                ssh2.dispose();\n            }\n        } catch (cleanupError) {\n            log({\n                type: 'warning',\n                message: `Cleanup error: ${cleanupError.message}`\n            });\n        }\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__.ensureServerEntryExports)([\n    createCombinedTunnel,\n    createTunnel\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(createCombinedTunnel, \"7e9c0aab5f0f1eb7017187a1e04370c62f03f9dc1b\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(createTunnel, \"783933480a03bd6e6efcbb415da08635aa36f757e7\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/creation.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/netmaker.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/tunnels/netmaker.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMeshNetwork: () => (/* binding */ createMeshNetwork)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"60e54279e9c636e2b67d11e91ac855b67afd64de81\":\"createMeshNetwork\"} */ \n\n\n\n\n\n\nfunction generateKeys() {\n    const privateKey = (0,child_process__WEBPACK_IMPORTED_MODULE_6__.execSync)('wg genkey', {\n        encoding: 'utf8'\n    }).trim();\n    const publicKey = (0,child_process__WEBPACK_IMPORTED_MODULE_6__.execSync)(`echo '${privateKey}' | wg pubkey`, {\n        encoding: 'utf8'\n    }).trim();\n    return {\n        privateKey,\n        publicKey\n    };\n}\nasync function generateSimpleNetmakerConfig(input) {\n    const brokerKeys = generateKeys();\n    const brokerIp = '10.20.0.1';\n    const clientConfigs = input.clients.map((client, index)=>{\n        const clientKeys = generateKeys();\n        const clientIp = `10.20.0.${index + 2}`;\n        const configFile = `[Interface]\\nPrivateKey = ${clientKeys.privateKey}\\nAddress = ${clientIp}/24\\n\\n[Peer]\\nPublicKey = ${brokerKeys.publicKey}\\nEndpoint = ${input.broker.ipAddress}:${input.listenPort}\\nAllowedIPs = 10.20.0.0/24\\nPersistentKeepalive = 25`;\n        return {\n            serverId: client.id,\n            configFile,\n            keys: clientKeys,\n            address: clientIp\n        };\n    });\n    const brokerPeers = clientConfigs.map((c)=>`[Peer]\\nPublicKey = ${c.keys.publicKey}\\nAllowedIPs = ${c.address}/32`).join('\\n\\n');\n    const brokerConfig = {\n        serverId: input.broker.id,\n        configFile: `[Interface]\\nPrivateKey = ${brokerKeys.privateKey}\\nAddress = ${brokerIp}/24\\nListenPort = ${input.listenPort}\\n\\n${brokerPeers}`,\n        keys: brokerKeys,\n        address: brokerIp\n    };\n    return {\n        brokerConfig,\n        clientConfigs\n    };\n}\nasync function executeCommand(ssh, command, serverName, log) {\n    log({\n        type: 'command',\n        message: `[${serverName}] $ ${command}`\n    });\n    const result = await ssh.execCommand(command);\n    if (result.code !== 0) {\n        log({\n            type: 'error',\n            message: `Stderr on ${serverName}: ${result.stderr}`\n        });\n        throw new Error(`Command failed on ${serverName}: ${command}`);\n    }\n    log({\n        type: 'success',\n        message: `[${serverName}] Command executed successfully.`\n    });\n    return result.stdout;\n}\nasync function createMeshNetwork(broker, clients) {\n    const logs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        logs.push(entry);\n    };\n    const sshConnections = {};\n    try {\n        log({\n            type: 'info',\n            message: 'Starting Netmaker mesh network creation...'\n        });\n        // 1. Generate all configs (fallback implementation)\n        log({\n            type: 'info',\n            message: 'Generating WireGuard configurations...'\n        });\n        const networkConfig = await generateSimpleNetmakerConfig({\n            broker: {\n                id: broker.id,\n                name: broker.name,\n                ipAddress: broker.ipAddress\n            },\n            clients: clients.map((c)=>({\n                    id: c.id,\n                    name: c.name,\n                    ipAddress: c.ipAddress\n                })),\n            networkBaseIp: '10.20.0.0',\n            listenPort: 51820\n        });\n        log({\n            type: 'success',\n            message: 'WireGuard configurations generated.'\n        });\n        // 2. Connect to all servers\n        const allServers = [\n            broker,\n            ...clients\n        ];\n        for (const server of allServers){\n            log({\n                type: 'info',\n                message: `Connecting to ${server.name}...`\n            });\n            sshConnections[server.id] = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server, log);\n            log({\n                type: 'success',\n                message: `Connected to ${server.name}.`\n            });\n        }\n        // 3. Install WireGuard on all servers\n        for (const server of allServers){\n            log({\n                type: 'info',\n                message: `Checking dependencies on ${server.name}...`\n            });\n            const ssh = sshConnections[server.id];\n            await executeCommand(ssh, 'apt-get update', server.name, log);\n            await executeCommand(ssh, 'apt-get install -y wireguard-tools', server.name, log);\n            log({\n                type: 'success',\n                message: `WireGuard is ready on ${server.name}.`\n            });\n        }\n        const tunnelName = \"nm0\"; // Static name for the Netmaker interface\n        // 4. Configure Broker\n        log({\n            type: 'info',\n            message: `Configuring broker server: ${broker.name}...`\n        });\n        const brokerSsh = sshConnections[broker.id];\n        await executeCommand(brokerSsh, `echo \"${networkConfig.brokerConfig.configFile}\" > /etc/wireguard/${tunnelName}.conf`, broker.name, log);\n        await executeCommand(brokerSsh, `wg-quick up ${tunnelName}`, broker.name, log);\n        await executeCommand(brokerSsh, `systemctl enable wg-quick@${tunnelName}`, broker.name, log);\n        log({\n            type: 'success',\n            message: `Broker ${broker.name} configured and tunnel is up.`\n        });\n        // 5. Configure Clients\n        for (const clientConfig of networkConfig.clientConfigs){\n            const clientServer = clients.find((c)=>c.id === clientConfig.serverId);\n            if (!clientServer) {\n                log({\n                    type: 'error',\n                    message: `Configuration generated for an unknown client ID: ${clientConfig.serverId}`\n                });\n                continue;\n            }\n            log({\n                type: 'info',\n                message: `Configuring client server: ${clientServer.name}...`\n            });\n            const clientSsh = sshConnections[clientServer.id];\n            await executeCommand(clientSsh, `echo \"${clientConfig.configFile}\" > /etc/wireguard/${tunnelName}.conf`, clientServer.name, log);\n            await executeCommand(clientSsh, `wg-quick up ${tunnelName}`, clientServer.name, log);\n            await executeCommand(clientSsh, `systemctl enable wg-quick@${tunnelName}`, clientServer.name, log);\n            log({\n                type: 'success',\n                message: `Client ${clientServer.name} configured and tunnel is up.`\n            });\n        }\n        // 6. Save tunnels to DB for visualization (each client to broker)\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n        const tunnelDocs = networkConfig.clientConfigs.map((clientConfig)=>({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(),\n                id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId().toString(),\n                server1Id: clientConfig.serverId,\n                server2Id: broker.id,\n                type: 'WireGuard',\n                createdAt: new Date().toISOString(),\n                isSaved: true,\n                tunnelName: `${tunnelName}-${clientConfig.serverId.substring(0, 4)}`,\n                tunnelIp1: clientConfig.address,\n                tunnelIp2: networkConfig.brokerConfig.address\n            }));\n        if (tunnelDocs.length > 0) {\n            await tunnelsCollection.insertMany(tunnelDocs);\n            log({\n                type: 'info',\n                message: `Saved ${tunnelDocs.length} client-broker tunnel configurations to the database.`\n            });\n        }\n        log({\n            type: 'success',\n            message: 'Netmaker mesh network created successfully!'\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true,\n            logs\n        };\n    } catch (e) {\n        log({\n            type: 'error',\n            message: `Mesh creation failed: ${e.message}`\n        });\n        return {\n            success: false,\n            logs\n        };\n    } finally{\n        for (const ssh of Object.values(sshConnections)){\n            if (ssh.isConnected()) {\n                ssh.dispose();\n            }\n        }\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__.ensureServerEntryExports)([\n    createMeshNetwork\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(createMeshNetwork, \"60e54279e9c636e2b67d11e91ac855b67afd64de81\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/netmaker.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/persistence.ts":
/*!************************************************!*\
  !*** ./src/app/actions/tunnels/persistence.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   saveTunnelConfig: () => (/* binding */ saveTunnelConfig)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"4040539b8229a6e6f5036d732d972b88d124a88b16\":\"saveTunnelConfig\"} */ \n\n\n\n\n\nasync function saveTunnelConfig(tunnel) {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getServersCollection)();\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(tunnel.server1Id) || !mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(tunnel.server2Id)) {\n        return {\n            success: false,\n            message: 'Invalid server ID in tunnel data.'\n        };\n    }\n    const server1 = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(tunnel.server1Id)\n    });\n    const server2 = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(tunnel.server2Id)\n    });\n    if (!server1 || !server2) {\n        return {\n            success: false,\n            message: 'Source or destination server not found.'\n        };\n    }\n    let ssh1 = null;\n    let ssh2 = null;\n    try {\n        ssh1 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server1);\n        ssh2 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server2);\n        const { tunnelName, tunnelIp1, tunnelIp2, type, id } = tunnel;\n        const run = async (ssh, cmd)=>{\n            const result = await ssh.execCommand(cmd);\n            if (result.code !== 0) {\n                throw new Error(`Failed to run '${cmd}' on server: ${result.stderr}`);\n            }\n            return result.stdout;\n        };\n        switch(type){\n            case 'GRE':\n            case 'IPIP':\n            case 'SIT':\n            case 'VTI':\n                const mode = type.toLowerCase();\n                const configPathS1 = `/etc/network/interfaces.d/${tunnelName}`;\n                const configPathS2 = `/etc/network/interfaces.d/${tunnelName}`;\n                const baseConfig = (local, remote, address, key)=>`auto ${tunnelName}\\niface ${tunnelName} inet tunnel\\nmode ${mode}\\nlocal ${local}\\nremote ${remote}\\naddress ${address}\\nnetmask 255.255.255.252\\nttl 255\\n` + (key ? `ikey ${key}\\nokey ${key}\\n` : '') + `up ip link set dev ${tunnelName} up`;\n                const vtiKey = type === 'VTI' ? Math.floor(Math.random() * 100000) : undefined;\n                const configS1 = baseConfig(server1.ipAddress, server2.ipAddress, tunnelIp1, vtiKey);\n                const configS2 = baseConfig(server2.ipAddress, server1.ipAddress, tunnelIp2, vtiKey);\n                await run(ssh1, `echo -e \"${configS1}\" | sudo tee ${configPathS1}`);\n                await run(ssh2, `echo -e \"${configS2}\" | sudo tee ${configPathS2}`);\n                break;\n            case 'OpenVPN':\n            case 'WireGuard':\n                const serviceNameWG = type === 'OpenVPN' ? `openvpn@${tunnelName}` : `wg-quick@${tunnelName}`;\n                await run(ssh1, `sudo systemctl enable ${serviceNameWG}`);\n                await run(ssh2, `sudo systemctl enable ${serviceNameWG}`);\n                break;\n            case 'IPsec':\n                await run(ssh1, `sudo systemctl enable ipsec`);\n                await run(ssh2, `sudo systemctl enable ipsec`);\n                break;\n            case 'Reverse Tunnel (via SSH)':\n                const serviceNameR = `reverse-tunnel-${server1.name.replace(/\\s/g, '_')}.service`;\n                const servicePath = `/etc/systemd/system/${serviceNameR}`;\n                const { privateKey } = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.getSshKeys)();\n                // Important: The user running the service on server2 needs the key.\n                const remoteKeyPath = `/home/${server2.username}/.ssh/reverse_tunnel_key_${tunnel.id}`;\n                await run(ssh2, `mkdir -p /home/${server2.username}/.ssh && chmod 700 /home/${server2.username}/.ssh`);\n                // Write the private key content directly\n                await run(ssh2, `echo '${privateKey.replace(/'/g, \"'\\\\''\")}' > ${remoteKeyPath} && chmod 600 ${remoteKeyPath}`);\n                const sshCommand = `/usr/bin/ssh -o \"ServerAliveInterval=60\" -o \"ExitOnForwardFailure=yes\" -o \"StrictHostKeyChecking=no\" -i ${remoteKeyPath} -w any:any ${server1.username}@${server1.ipAddress} 'true'`;\n                const serviceFileContent = `\n[Unit]\nDescription=Reverse SSH tunnel to ${server1.name}\nWants=network-online.target\nAfter=network-online.target\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nUser=${server2.username}\nExecStart=${sshCommand}\nRestart=always\nRestartSec=15\n\n[Install]\nWantedBy=multi-user.target\n`;\n                await run(ssh2, `echo '${serviceFileContent.replace(/'/g, \"'\\\\''\")}' | sudo tee ${servicePath}`);\n                await run(ssh2, `sudo systemctl daemon-reload`);\n                await run(ssh2, `sudo systemctl enable ${serviceNameR}`);\n                await run(ssh2, `sudo systemctl restart ${serviceNameR}`);\n                await new Promise((r)=>setTimeout(r, 2000));\n                const configureInterface = async (ssh, ip, serverName)=>{\n                    const findTunCmd = \"ip -o tuntap | awk '{print $1; exit}'\";\n                    let tunDevice = '';\n                    for(let i = 0; i < 5; i++){\n                        tunDevice = (await run(ssh, findTunCmd)).trim();\n                        if (tunDevice) break;\n                        await new Promise((r)=>setTimeout(r, 1000));\n                    }\n                    if (tunDevice) {\n                        await run(ssh, `ip addr add ${ip}/30 dev ${tunDevice}`);\n                        await run(ssh, `ip link set ${tunDevice} up`);\n                    } else {\n                        throw new Error(`Could not find tun device to configure on ${serverName}.`);\n                    }\n                };\n                await configureInterface(ssh1, tunnelIp1, server1.name);\n                await configureInterface(ssh2, tunnelIp2, server2.name);\n                break;\n            case 'V2Ray (WS+TLS)':\n                await run(ssh1, `sudo systemctl enable v2ray`);\n                await run(ssh2, `sudo systemctl enable v2ray`);\n                await run(ssh2, `sudo systemctl enable nginx`);\n                break;\n            default:\n                return {\n                    success: false,\n                    message: `Saving configuration for ${type} is not implemented.`\n                };\n        }\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n        await tunnelsCollection.updateOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id)\n        }, {\n            $set: {\n                isSaved: true\n            }\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true\n        };\n    } catch (e) {\n        console.error('Failed to save tunnel config:', e);\n        return {\n            success: false,\n            message: e.message || 'An unexpected error occurred.'\n        };\n    } finally{\n        if (ssh1?.isConnected()) ssh1.dispose();\n        if (ssh2?.isConnected()) ssh2.dispose();\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__.ensureServerEntryExports)([\n    saveTunnelConfig\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(saveTunnelConfig, \"4040539b8229a6e6f5036d732d972b88d124a88b16\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/persistence.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"b011499e0c4b\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvbi1tYWluXFxzcmNcXGFwcFxcZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJiMDExNDk5ZTBjNGJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_ui_toaster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/toaster */ \"(rsc)/./src/components/ui/toaster.tsx\");\n/* harmony import */ var _lib_process_cleanup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/process-cleanup */ \"(rsc)/./src/lib/process-cleanup.ts\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\n\n\nconst metadata = {\n    title: \"TunnelVision\",\n    description: \"Manage and create network tunnels with ease.\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        className: \"dark\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preconnect\",\n                        href: \"https://fonts.googleapis.com\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preconnect\",\n                        href: \"https://fonts.gstatic.com\",\n                        crossOrigin: \"anonymous\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        href: \"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300..700&display=swap\",\n                        rel: \"stylesheet\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 16 16%22><g fill=%22none%22 stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%221.1%22><path stroke=%22%23e10885%22 d=%22M8 15S5 6.5 1 4c1 .2 3.3.5 4.5.5c1 .5 2.5 3 2.5 4c0-1 1.5-3.5 2.5-4A31 31 0 0 0 15 4c-4 2.5-7 11-7 11%22 /><path stroke=%22%23928d99%22 d=%22M3.4 2.6S5 1 7.7 1S12 2.6 12 2.6m-10.9 4S.5 8.7 2 11a6 6 0 0 0 3.4 3m4.6 0s2.2-.6 3.5-3c1.4-2.2.8-4.5.8-4.5%22 /></g></svg>\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: \"font-body antialiased min-h-screen bg-background text-foreground\",\n                children: [\n                    children,\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toaster__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFDa0Q7QUFDbkI7QUFDUjtBQUVoQixNQUFNQyxXQUFxQjtJQUNoQ0MsT0FBTztJQUNQQyxhQUFhO0FBQ2YsRUFBRTtBQUVhLFNBQVNDLFdBQVcsRUFDakNDLFFBQVEsRUFHUjtJQUNBLHFCQUNFLDhEQUFDQztRQUFLQyxNQUFLO1FBQUtDLFdBQVU7OzBCQUN4Qiw4REFBQ0M7O2tDQUNDLDhEQUFDQzt3QkFBS0MsS0FBSTt3QkFBYUMsTUFBSzs7Ozs7O2tDQUM1Qiw4REFBQ0Y7d0JBQUtDLEtBQUk7d0JBQWFDLE1BQUs7d0JBQTRCQyxhQUFZOzs7Ozs7a0NBQ3BFLDhEQUFDSDt3QkFBS0UsTUFBSzt3QkFBb0ZELEtBQUk7Ozs7OztrQ0FDbkcsOERBQUNEO3dCQUFLQyxLQUFJO3dCQUFPQyxNQUFLOzs7Ozs7Ozs7Ozs7MEJBRXhCLDhEQUFDRTtnQkFBS04sV0FBVTs7b0JBQ2JIO2tDQUNELDhEQUFDTCwyREFBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSWhCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvbi1tYWluXFxzcmNcXGFwcFxcbGF5b3V0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE1ldGFkYXRhIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCB7IFRvYXN0ZXIgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3RvYXN0ZXJcIjtcbmltcG9ydCBcIkAvbGliL3Byb2Nlc3MtY2xlYW51cFwiO1xuaW1wb3J0IFwiLi9nbG9iYWxzLmNzc1wiO1xuXG5leHBvcnQgY29uc3QgbWV0YWRhdGE6IE1ldGFkYXRhID0ge1xuICB0aXRsZTogXCJUdW5uZWxWaXNpb25cIixcbiAgZGVzY3JpcHRpb246IFwiTWFuYWdlIGFuZCBjcmVhdGUgbmV0d29yayB0dW5uZWxzIHdpdGggZWFzZS5cIixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoe1xuICBjaGlsZHJlbixcbn06IFJlYWRvbmx5PHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0+KSB7XG4gIHJldHVybiAoXG4gICAgPGh0bWwgbGFuZz1cImVuXCIgY2xhc3NOYW1lPVwiZGFya1wiPlxuICAgICAgPGhlYWQ+XG4gICAgICAgIDxsaW5rIHJlbD1cInByZWNvbm5lY3RcIiBocmVmPVwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbVwiIC8+XG4gICAgICAgIDxsaW5rIHJlbD1cInByZWNvbm5lY3RcIiBocmVmPVwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbVwiIGNyb3NzT3JpZ2luPVwiYW5vbnltb3VzXCIgLz5cbiAgICAgICAgPGxpbmsgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9U3BhY2UrR3JvdGVzazp3Z2h0QDMwMC4uNzAwJmRpc3BsYXk9c3dhcFwiIHJlbD1cInN0eWxlc2hlZXRcIiAvPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSUyMmh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJTIyIHZpZXdCb3g9JTIyMCAwIDE2IDE2JTIyPjxnIGZpbGw9JTIybm9uZSUyMiBzdHJva2UtbGluZWNhcD0lMjJyb3VuZCUyMiBzdHJva2UtbGluZWpvaW49JTIycm91bmQlMjIgc3Ryb2tlLXdpZHRoPSUyMjEuMSUyMj48cGF0aCBzdHJva2U9JTIyJTIzZTEwODg1JTIyIGQ9JTIyTTggMTVTNSA2LjUgMSA0YzEgLjIgMy4zLjUgNC41LjVjMSAuNSAyLjUgMyAyLjUgNGMwLTEgMS41LTMuNSAyLjUtNEEzMSAzMSAwIDAgMCAxNSA0Yy00IDIuNS03IDExLTcgMTElMjIgLz48cGF0aCBzdHJva2U9JTIyJTIzOTI4ZDk5JTIyIGQ9JTIyTTMuNCAyLjZTNSAxIDcuNyAxUzEyIDIuNiAxMiAyLjZtLTEwLjkgNFMuNSA4LjcgMiAxMWE2IDYgMCAwIDAgMy40IDNtNC42IDBzMi4yLS42IDMuNS0zYzEuNC0yLjIuOC00LjUuOC00LjUlMjIgLz48L2c+PC9zdmc+XCIgLz5cbiAgICAgIDwvaGVhZD5cbiAgICAgIDxib2R5IGNsYXNzTmFtZT1cImZvbnQtYm9keSBhbnRpYWxpYXNlZCBtaW4taC1zY3JlZW4gYmctYmFja2dyb3VuZCB0ZXh0LWZvcmVncm91bmRcIj5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8VG9hc3RlciAvPlxuICAgICAgPC9ib2R5PlxuICAgIDwvaHRtbD5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJUb2FzdGVyIiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJjbGFzc05hbWUiLCJoZWFkIiwibGluayIsInJlbCIsImhyZWYiLCJjcm9zc09yaWdpbiIsImJvZHkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/actions */ \"(rsc)/./src/app/actions/index.ts\");\n/* harmony import */ var _components_main_page_dynamic_main_page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/main-page/dynamic-main-page */ \"(rsc)/./src/components/main-page/dynamic-main-page.tsx\");\n\n\n\nasync function Home() {\n    // This value is not used, but it's a good practice to set revalidate to 0\n    // for pages that fetch dynamic data on every request.\n    const revalidate = 0;\n    let initialServers = [];\n    let initialTunnels = [];\n    try {\n        const serversFromDb = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_1__.getServers)();\n        const tunnelsFromDb = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_1__.getTunnels)();\n        // Correctly and robustly serialize the data from the database.\n        // This is crucial to prevent hydration errors when passing data\n        // from a Server Component to a Client Component.\n        initialServers = serversFromDb.map((server)=>{\n            const { _id, ...rest } = server;\n            return {\n                ...rest,\n                id: _id.toHexString()\n            };\n        });\n        initialTunnels = tunnelsFromDb.map((tunnel)=>{\n            const { _id, ...rest } = tunnel;\n            return {\n                ...rest,\n                id: _id.toHexString(),\n                // Ensure createdAt is also a plain string if it's a Date object\n                createdAt: new Date(tunnel.createdAt).toISOString()\n            };\n        });\n    } catch (error) {\n        console.error(\"Could not load initial data from the database.\", error);\n    // It's safe to proceed with empty arrays. The UI will handle this state.\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_main_page_dynamic_main_page__WEBPACK_IMPORTED_MODULE_2__.DynamicMainPageLoader, {\n        initialServers: initialServers,\n        initialTunnels: initialTunnels\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 51,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUcwQjtBQVNsRSxlQUFlRztJQUM1QiwwRUFBMEU7SUFDMUUsc0RBQXNEO0lBQ3RELE1BQU1DLGFBQWE7SUFFbkIsSUFBSUMsaUJBQWdDLEVBQUU7SUFDdEMsSUFBSUMsaUJBQWdDLEVBQUU7SUFFdEMsSUFBSTtRQUNGLE1BQU1DLGdCQUFnQixNQUFNUCx3REFBVUE7UUFDdEMsTUFBTVEsZ0JBQWdCLE1BQU1QLHdEQUFVQTtRQUV0QywrREFBK0Q7UUFDL0QsZ0VBQWdFO1FBQ2hFLGlEQUFpRDtRQUNqREksaUJBQWlCRSxjQUFjRSxHQUFHLENBQUNDLENBQUFBO1lBQ2pDLE1BQU0sRUFBQ0MsR0FBRyxFQUFFLEdBQUdDLE1BQUssR0FBR0Y7WUFDdkIsT0FBTztnQkFDTCxHQUFHRSxJQUFJO2dCQUNQQyxJQUFJRixJQUFJRyxXQUFXO1lBQ3JCO1FBQ0Y7UUFFQVIsaUJBQWlCRSxjQUFjQyxHQUFHLENBQUNNLENBQUFBO1lBQ2hDLE1BQU0sRUFBQ0osR0FBRyxFQUFFLEdBQUdDLE1BQUssR0FBR0c7WUFDdkIsT0FBTztnQkFDTCxHQUFHSCxJQUFJO2dCQUNQQyxJQUFJRixJQUFJRyxXQUFXO2dCQUNuQixnRUFBZ0U7Z0JBQ2hFRSxXQUFXLElBQUlDLEtBQUtGLE9BQU9DLFNBQVMsRUFBRUUsV0FBVztZQUNuRDtRQUNIO0lBRUYsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrREFBa0RBO0lBQ2hFLHlFQUF5RTtJQUMzRTtJQUVBLHFCQUFPLDhEQUFDakIsMEZBQXFCQTtRQUFDRyxnQkFBZ0JBO1FBQWdCQyxnQkFBZ0JBOzs7Ozs7QUFDaEYiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uLW1haW5cXHNyY1xcYXBwXFxwYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTZXJ2ZXJzLCBnZXRUdW5uZWxzIH0gZnJvbSBcIkAvYXBwL2FjdGlvbnNcIjtcbmltcG9ydCB0eXBlIHsgU2VydmVyLCBUdW5uZWwgfSBmcm9tIFwiQC9saWIvdHlwZXNcIjtcbmltcG9ydCB7IE9iamVjdElkIH0gZnJvbSBcIm1vbmdvZGJcIjtcbmltcG9ydCB7IER5bmFtaWNNYWluUGFnZUxvYWRlciB9IGZyb20gXCJAL2NvbXBvbmVudHMvbWFpbi1wYWdlL2R5bmFtaWMtbWFpbi1wYWdlXCI7XG5cblxuLy8gSGVscGVyIHR5cGUgZm9yIHNlcmlhbGl6ZWQgZGF0YSwgZW5zdXJpbmcgaXQncyBhIHBsYWluIG9iamVjdC5cbnR5cGUgUGxhaW48VD4gPSBUIGV4dGVuZHMgT2JqZWN0SWQgPyBzdHJpbmcgOiBUIGV4dGVuZHMgRGF0ZSA/IHN0cmluZyA6IFQgZXh0ZW5kcyBvYmplY3QgPyB7W0sgaW4ga2V5b2YgVF06IFBsYWluPFRbS10+fSA6IFQ7XG50eXBlIFBsYWluU2VydmVyID0gUGxhaW48T21pdDxTZXJ2ZXIsICdfaWQnPj4gJiB7IGlkOiBzdHJpbmcgfTtcbnR5cGUgUGxhaW5UdW5uZWwgPSBQbGFpbjxPbWl0PFR1bm5lbCwgJ19pZCc+PiAmIHsgaWQ6IHN0cmluZyB9O1xuXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIEhvbWUoKSB7XG4gIC8vIFRoaXMgdmFsdWUgaXMgbm90IHVzZWQsIGJ1dCBpdCdzIGEgZ29vZCBwcmFjdGljZSB0byBzZXQgcmV2YWxpZGF0ZSB0byAwXG4gIC8vIGZvciBwYWdlcyB0aGF0IGZldGNoIGR5bmFtaWMgZGF0YSBvbiBldmVyeSByZXF1ZXN0LlxuICBjb25zdCByZXZhbGlkYXRlID0gMDtcblxuICBsZXQgaW5pdGlhbFNlcnZlcnM6IFBsYWluU2VydmVyW10gPSBbXTtcbiAgbGV0IGluaXRpYWxUdW5uZWxzOiBQbGFpblR1bm5lbFtdID0gW107XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBzZXJ2ZXJzRnJvbURiID0gYXdhaXQgZ2V0U2VydmVycygpO1xuICAgIGNvbnN0IHR1bm5lbHNGcm9tRGIgPSBhd2FpdCBnZXRUdW5uZWxzKCk7XG5cbiAgICAvLyBDb3JyZWN0bHkgYW5kIHJvYnVzdGx5IHNlcmlhbGl6ZSB0aGUgZGF0YSBmcm9tIHRoZSBkYXRhYmFzZS5cbiAgICAvLyBUaGlzIGlzIGNydWNpYWwgdG8gcHJldmVudCBoeWRyYXRpb24gZXJyb3JzIHdoZW4gcGFzc2luZyBkYXRhXG4gICAgLy8gZnJvbSBhIFNlcnZlciBDb21wb25lbnQgdG8gYSBDbGllbnQgQ29tcG9uZW50LlxuICAgIGluaXRpYWxTZXJ2ZXJzID0gc2VydmVyc0Zyb21EYi5tYXAoc2VydmVyID0+IHtcbiAgICAgIGNvbnN0IHtfaWQsIC4uLnJlc3R9ID0gc2VydmVyO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgaWQ6IF9pZC50b0hleFN0cmluZygpLFxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIGluaXRpYWxUdW5uZWxzID0gdHVubmVsc0Zyb21EYi5tYXAodHVubmVsID0+IHtcbiAgICAgICBjb25zdCB7X2lkLCAuLi5yZXN0fSA9IHR1bm5lbDtcbiAgICAgICByZXR1cm4ge1xuICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgIGlkOiBfaWQudG9IZXhTdHJpbmcoKSxcbiAgICAgICAgIC8vIEVuc3VyZSBjcmVhdGVkQXQgaXMgYWxzbyBhIHBsYWluIHN0cmluZyBpZiBpdCdzIGEgRGF0ZSBvYmplY3RcbiAgICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUodHVubmVsLmNyZWF0ZWRBdCkudG9JU09TdHJpbmcoKSxcbiAgICAgICB9O1xuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkNvdWxkIG5vdCBsb2FkIGluaXRpYWwgZGF0YSBmcm9tIHRoZSBkYXRhYmFzZS5cIiwgZXJyb3IpO1xuICAgIC8vIEl0J3Mgc2FmZSB0byBwcm9jZWVkIHdpdGggZW1wdHkgYXJyYXlzLiBUaGUgVUkgd2lsbCBoYW5kbGUgdGhpcyBzdGF0ZS5cbiAgfVxuXG4gIHJldHVybiA8RHluYW1pY01haW5QYWdlTG9hZGVyIGluaXRpYWxTZXJ2ZXJzPXtpbml0aWFsU2VydmVyc30gaW5pdGlhbFR1bm5lbHM9e2luaXRpYWxUdW5uZWxzfSAvPjtcbn1cbiJdLCJuYW1lcyI6WyJnZXRTZXJ2ZXJzIiwiZ2V0VHVubmVscyIsIkR5bmFtaWNNYWluUGFnZUxvYWRlciIsIkhvbWUiLCJyZXZhbGlkYXRlIiwiaW5pdGlhbFNlcnZlcnMiLCJpbml0aWFsVHVubmVscyIsInNlcnZlcnNGcm9tRGIiLCJ0dW5uZWxzRnJvbURiIiwibWFwIiwic2VydmVyIiwiX2lkIiwicmVzdCIsImlkIiwidG9IZXhTdHJpbmciLCJ0dW5uZWwiLCJjcmVhdGVkQXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJlcnJvciIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/main-page/dynamic-main-page.tsx":
/*!********************************************************!*\
  !*** ./src/components/main-page/dynamic-main-page.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicMainPageLoader: () => (/* binding */ DynamicMainPageLoader)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js\");\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);\n// This file is generated by the Webpack next-flight-loader.\n\nconst DynamicMainPageLoader = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call DynamicMainPageLoader() from the server but DynamicMainPageLoader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n\"DynamicMainPageLoader\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy9tYWluLXBhZ2UvZHluYW1pYy1tYWluLXBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBIiwic291cmNlcyI6WyJfTl9FLy4vc3JjL2NvbXBvbmVudHMvbWFpbi1wYWdlL2R5bmFtaWMtbWFpbi1wYWdlLnRzeC9fX25leHRqcy1pbnRlcm5hbC1wcm94eS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSB0aGUgV2VicGFjayBuZXh0LWZsaWdodC1sb2FkZXIuXG5pbXBvcnQgeyByZWdpc3RlckNsaWVudFJlZmVyZW5jZSB9IGZyb20gXCJyZWFjdC1zZXJ2ZXItZG9tLXdlYnBhY2svc2VydmVyXCI7XG5leHBvcnQgY29uc3QgRHluYW1pY01haW5QYWdlTG9hZGVyID0gcmVnaXN0ZXJDbGllbnRSZWZlcmVuY2UoXG5mdW5jdGlvbigpIHsgdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGNhbGwgRHluYW1pY01haW5QYWdlTG9hZGVyKCkgZnJvbSB0aGUgc2VydmVyIGJ1dCBEeW5hbWljTWFpblBhZ2VMb2FkZXIgaXMgb24gdGhlIGNsaWVudC4gSXQncyBub3QgcG9zc2libGUgdG8gaW52b2tlIGEgY2xpZW50IGZ1bmN0aW9uIGZyb20gdGhlIHNlcnZlciwgaXQgY2FuIG9ubHkgYmUgcmVuZGVyZWQgYXMgYSBDb21wb25lbnQgb3IgcGFzc2VkIHRvIHByb3BzIG9mIGEgQ2xpZW50IENvbXBvbmVudC5cIik7IH0sXG5cIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXG1haW4tcGFnZVxcXFxkeW5hbWljLW1haW4tcGFnZS50c3hcIixcblwiRHluYW1pY01haW5QYWdlTG9hZGVyXCIsXG4pOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/components/main-page/dynamic-main-page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/ui/toaster.tsx":
/*!***************************************!*\
  !*** ./src/components/ui/toaster.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js\");\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);\n// This file is generated by the Webpack next-flight-loader.\n\nconst Toaster = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n\"Toaster\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSIsInNvdXJjZXMiOlsiX05fRS8uL3NyYy9jb21wb25lbnRzL3VpL3RvYXN0ZXIudHN4L19fbmV4dGpzLWludGVybmFsLXByb3h5Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IHRoZSBXZWJwYWNrIG5leHQtZmxpZ2h0LWxvYWRlci5cbmltcG9ydCB7IHJlZ2lzdGVyQ2xpZW50UmVmZXJlbmNlIH0gZnJvbSBcInJlYWN0LXNlcnZlci1kb20td2VicGFjay9zZXJ2ZXJcIjtcbmV4cG9ydCBjb25zdCBUb2FzdGVyID0gcmVnaXN0ZXJDbGllbnRSZWZlcmVuY2UoXG5mdW5jdGlvbigpIHsgdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGNhbGwgVG9hc3RlcigpIGZyb20gdGhlIHNlcnZlciBidXQgVG9hc3RlciBpcyBvbiB0aGUgY2xpZW50LiBJdCdzIG5vdCBwb3NzaWJsZSB0byBpbnZva2UgYSBjbGllbnQgZnVuY3Rpb24gZnJvbSB0aGUgc2VydmVyLCBpdCBjYW4gb25seSBiZSByZW5kZXJlZCBhcyBhIENvbXBvbmVudCBvciBwYXNzZWQgdG8gcHJvcHMgb2YgYSBDbGllbnQgQ29tcG9uZW50LlwiKTsgfSxcblwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcc3JjXFxcXGNvbXBvbmVudHNcXFxcdWlcXFxcdG9hc3Rlci50c3hcIixcblwiVG9hc3RlclwiLFxuKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/components/ui/toaster.tsx\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// This approach is taken from https://github.com/vercel/next.js/tree/canary/examples/with-mongodb\n\nif (!process.env.MONGODB_URI) {\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {};\nlet client;\nlet clientPromise;\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    let globalWithMongo = global;\n    if (!globalWithMongo._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        globalWithMongo._mongoClientPromise = client.connect();\n    }\n    clientPromise = globalWithMongo._mongoClientPromise;\n} else {}\n// Export a module-scoped MongoClient promise. By doing this in a\n// separate module, the client can be shared across functions.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0dBQWtHO0FBQzdEO0FBRXJDLElBQUksQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLEVBQUU7SUFDNUIsTUFBTSxJQUFJQyxNQUFNO0FBQ2xCO0FBRUEsTUFBTUMsTUFBTUosUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0FBQ25DLE1BQU1HLFVBQVUsQ0FBQztBQUVqQixJQUFJQztBQUNKLElBQUlDO0FBRUosSUFBSVAsSUFBc0MsRUFBRTtJQUMxQywrREFBK0Q7SUFDL0QsNkVBQTZFO0lBQzdFLElBQUlRLGtCQUFrQkM7SUFJdEIsSUFBSSxDQUFDRCxnQkFBZ0JFLG1CQUFtQixFQUFFO1FBQ3hDSixTQUFTLElBQUlQLGdEQUFXQSxDQUFDSyxLQUFLQztRQUM5QkcsZ0JBQWdCRSxtQkFBbUIsR0FBR0osT0FBT0ssT0FBTztJQUN0RDtJQUNBSixnQkFBZ0JDLGdCQUFnQkUsbUJBQW1CO0FBQ3JELE9BQU8sRUFJTjtBQUVELGlFQUFpRTtBQUNqRSw4REFBOEQ7QUFDOUQsaUVBQWVILGFBQWFBLEVBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uLW1haW5cXHNyY1xcbGliXFxtb25nb2RiLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgYXBwcm9hY2ggaXMgdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvdHJlZS9jYW5hcnkvZXhhbXBsZXMvd2l0aC1tb25nb2RiXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCJcblxuaWYgKCFwcm9jZXNzLmVudi5NT05HT0RCX1VSSSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQvTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZTogXCJNT05HT0RCX1VSSVwiJylcbn1cblxuY29uc3QgdXJpID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUklcbmNvbnN0IG9wdGlvbnMgPSB7fVxuXG5sZXQgY2xpZW50XG5sZXQgY2xpZW50UHJvbWlzZTogUHJvbWlzZTxNb25nb0NsaWVudD5cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIpIHtcbiAgLy8gSW4gZGV2ZWxvcG1lbnQgbW9kZSwgdXNlIGEgZ2xvYmFsIHZhcmlhYmxlIHNvIHRoYXQgdGhlIHZhbHVlXG4gIC8vIGlzIHByZXNlcnZlZCBhY3Jvc3MgbW9kdWxlIHJlbG9hZHMgY2F1c2VkIGJ5IEhNUiAoSG90IE1vZHVsZSBSZXBsYWNlbWVudCkuXG4gIGxldCBnbG9iYWxXaXRoTW9uZ28gPSBnbG9iYWwgYXMgdHlwZW9mIGdsb2JhbFRoaXMgJiB7XG4gICAgX21vbmdvQ2xpZW50UHJvbWlzZT86IFByb21pc2U8TW9uZ29DbGllbnQ+XG4gIH1cblxuICBpZiAoIWdsb2JhbFdpdGhNb25nby5fbW9uZ29DbGllbnRQcm9taXNlKSB7XG4gICAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSwgb3B0aW9ucylcbiAgICBnbG9iYWxXaXRoTW9uZ28uX21vbmdvQ2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KClcbiAgfVxuICBjbGllbnRQcm9taXNlID0gZ2xvYmFsV2l0aE1vbmdvLl9tb25nb0NsaWVudFByb21pc2Vcbn0gZWxzZSB7XG4gIC8vIEluIHByb2R1Y3Rpb24gbW9kZSwgaXQncyBiZXN0IHRvIG5vdCB1c2UgYSBnbG9iYWwgdmFyaWFibGUuXG4gIGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIG9wdGlvbnMpXG4gIGNsaWVudFByb21pc2UgPSBjbGllbnQuY29ubmVjdCgpXG59XG5cbi8vIEV4cG9ydCBhIG1vZHVsZS1zY29wZWQgTW9uZ29DbGllbnQgcHJvbWlzZS4gQnkgZG9pbmcgdGhpcyBpbiBhXG4vLyBzZXBhcmF0ZSBtb2R1bGUsIHRoZSBjbGllbnQgY2FuIGJlIHNoYXJlZCBhY3Jvc3MgZnVuY3Rpb25zLlxuZXhwb3J0IGRlZmF1bHQgY2xpZW50UHJvbWlzZVxuIl0sIm5hbWVzIjpbIk1vbmdvQ2xpZW50IiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfVVJJIiwiRXJyb3IiLCJ1cmkiLCJvcHRpb25zIiwiY2xpZW50IiwiY2xpZW50UHJvbWlzZSIsImdsb2JhbFdpdGhNb25nbyIsImdsb2JhbCIsIl9tb25nb0NsaWVudFByb21pc2UiLCJjb25uZWN0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/process-cleanup.ts":
/*!************************************!*\
  !*** ./src/lib/process-cleanup.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanup: () => (/* binding */ cleanup)\n/* harmony export */ });\n// Prevent EventEmitter memory leak by setting max listeners\nprocess.setMaxListeners(20);\n// Global cleanup handler to prevent memory leaks\nconst cleanup = ()=>{\n    // Remove all listeners to prevent memory leaks\n    process.removeAllListeners('SIGTERM');\n    process.removeAllListeners('SIGINT');\n    process.removeAllListeners('uncaughtException');\n    process.removeAllListeners('unhandledRejection');\n};\n// Set up single cleanup handlers\nif (!process.listenerCount('SIGTERM')) {\n    process.once('SIGTERM', cleanup);\n}\nif (!process.listenerCount('SIGINT')) {\n    process.once('SIGINT', cleanup);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3Byb2Nlc3MtY2xlYW51cC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNERBQTREO0FBQzVEQSxRQUFRQyxlQUFlLENBQUM7QUFFeEIsaURBQWlEO0FBQ2pELE1BQU1DLFVBQVU7SUFDZCwrQ0FBK0M7SUFDL0NGLFFBQVFHLGtCQUFrQixDQUFDO0lBQzNCSCxRQUFRRyxrQkFBa0IsQ0FBQztJQUMzQkgsUUFBUUcsa0JBQWtCLENBQUM7SUFDM0JILFFBQVFHLGtCQUFrQixDQUFDO0FBQzdCO0FBRUEsaUNBQWlDO0FBQ2pDLElBQUksQ0FBQ0gsUUFBUUksYUFBYSxDQUFDLFlBQVk7SUFDckNKLFFBQVFLLElBQUksQ0FBQyxXQUFXSDtBQUMxQjtBQUVBLElBQUksQ0FBQ0YsUUFBUUksYUFBYSxDQUFDLFdBQVc7SUFDcENKLFFBQVFLLElBQUksQ0FBQyxVQUFVSDtBQUN6QjtBQUVtQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb24tbWFpblxcc3JjXFxsaWJcXHByb2Nlc3MtY2xlYW51cC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQcmV2ZW50IEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBieSBzZXR0aW5nIG1heCBsaXN0ZW5lcnNcbnByb2Nlc3Muc2V0TWF4TGlzdGVuZXJzKDIwKTtcblxuLy8gR2xvYmFsIGNsZWFudXAgaGFuZGxlciB0byBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuY29uc3QgY2xlYW51cCA9ICgpID0+IHtcbiAgLy8gUmVtb3ZlIGFsbCBsaXN0ZW5lcnMgdG8gcHJldmVudCBtZW1vcnkgbGVha3NcbiAgcHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ1NJR1RFUk0nKTtcbiAgcHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ1NJR0lOVCcpO1xuICBwcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycygndW5jYXVnaHRFeGNlcHRpb24nKTtcbiAgcHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3VuaGFuZGxlZFJlamVjdGlvbicpO1xufTtcblxuLy8gU2V0IHVwIHNpbmdsZSBjbGVhbnVwIGhhbmRsZXJzXG5pZiAoIXByb2Nlc3MubGlzdGVuZXJDb3VudCgnU0lHVEVSTScpKSB7XG4gIHByb2Nlc3Mub25jZSgnU0lHVEVSTScsIGNsZWFudXApO1xufVxuXG5pZiAoIXByb2Nlc3MubGlzdGVuZXJDb3VudCgnU0lHSU5UJykpIHtcbiAgcHJvY2Vzcy5vbmNlKCdTSUdJTlQnLCBjbGVhbnVwKTtcbn1cblxuZXhwb3J0IHsgY2xlYW51cCB9OyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwic2V0TWF4TGlzdGVuZXJzIiwiY2xlYW51cCIsInJlbW92ZUFsbExpc3RlbmVycyIsImxpc3RlbmVyQ291bnQiLCJvbmNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/process-cleanup.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/schemas.ts":
/*!****************************!*\
  !*** ./src/lib/schemas.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverSchema: () => (/* binding */ serverSchema),\n/* harmony export */   serverSchemaWithId: () => (/* binding */ serverSchemaWithId)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n\nconst baseServerSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, {\n        message: \"Server name is required\"\n    }),\n    ipAddress: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().ip({\n        version: 'v4',\n        message: \"Invalid IP address\"\n    }),\n    username: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, {\n        message: 'Username is required'\n    }),\n    sshPort: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().min(1).max(65535).optional().default(22),\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().or(zod__WEBPACK_IMPORTED_MODULE_0__.z.literal('')),\n    sshKey: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().or(zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(''))\n});\nconst serverSchema = baseServerSchema.refine((data)=>data.password || data.sshKey, {\n    message: \"Password or SSH Key is required\",\n    path: [\n        \"password\"\n    ]\n});\nconst serverSchemaWithId = baseServerSchema.extend({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3NjaGVtYXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdCO0FBRXhCLE1BQU1DLG1CQUFtQkQsa0NBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUNoQ0MsTUFBTUgsa0NBQUNBLENBQUNJLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUc7UUFBRUMsU0FBUztJQUEwQjtJQUM3REMsV0FBV1Asa0NBQUNBLENBQUNJLE1BQU0sR0FBR0ksRUFBRSxDQUFDO1FBQUVDLFNBQVM7UUFBTUgsU0FBUztJQUFxQjtJQUN4RUksVUFBVVYsa0NBQUNBLENBQUNJLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUc7UUFBRUMsU0FBUztJQUF1QjtJQUM5REssU0FBU1gsa0NBQUNBLENBQUNZLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHQyxHQUFHLEdBQUdULEdBQUcsQ0FBQyxHQUFHVSxHQUFHLENBQUMsT0FBT0MsUUFBUSxHQUFHQyxPQUFPLENBQUM7SUFDdEVDLFVBQVVsQixrQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHWSxRQUFRLEdBQUdHLEVBQUUsQ0FBQ25CLGtDQUFDQSxDQUFDb0IsT0FBTyxDQUFDO0lBQzdDQyxRQUFRckIsa0NBQUNBLENBQUNJLE1BQU0sR0FBR1ksUUFBUSxHQUFHRyxFQUFFLENBQUNuQixrQ0FBQ0EsQ0FBQ29CLE9BQU8sQ0FBQztBQUM3QztBQUVPLE1BQU1FLGVBQWVyQixpQkFBaUJzQixNQUFNLENBQUNDLENBQUFBLE9BQVFBLEtBQUtOLFFBQVEsSUFBSU0sS0FBS0gsTUFBTSxFQUFFO0lBQ3RGZixTQUFTO0lBQ1RtQixNQUFNO1FBQUM7S0FBVztBQUN0QixHQUFHO0FBRUksTUFBTUMscUJBQXFCekIsaUJBQWlCMEIsTUFBTSxDQUFDO0lBQ3hEQyxJQUFJNUIsa0NBQUNBLENBQUNJLE1BQU07QUFDZCxHQUFHIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvbi1tYWluXFxzcmNcXGxpYlxcc2NoZW1hcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSBcInpvZFwiO1xuXG5jb25zdCBiYXNlU2VydmVyU2NoZW1hID0gei5vYmplY3Qoe1xuICBuYW1lOiB6LnN0cmluZygpLm1pbigxLCB7IG1lc3NhZ2U6IFwiU2VydmVyIG5hbWUgaXMgcmVxdWlyZWRcIiB9KSxcbiAgaXBBZGRyZXNzOiB6LnN0cmluZygpLmlwKHsgdmVyc2lvbjogJ3Y0JywgbWVzc2FnZTogXCJJbnZhbGlkIElQIGFkZHJlc3NcIiB9KSxcbiAgdXNlcm5hbWU6IHouc3RyaW5nKCkubWluKDEsIHsgbWVzc2FnZTogJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyB9KSxcbiAgc3NoUG9ydDogei5jb2VyY2UubnVtYmVyKCkuaW50KCkubWluKDEpLm1heCg2NTUzNSkub3B0aW9uYWwoKS5kZWZhdWx0KDIyKSxcbiAgcGFzc3dvcmQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKS5vcih6LmxpdGVyYWwoJycpKSxcbiAgc3NoS2V5OiB6LnN0cmluZygpLm9wdGlvbmFsKCkub3Ioei5saXRlcmFsKCcnKSksXG59KTtcblxuZXhwb3J0IGNvbnN0IHNlcnZlclNjaGVtYSA9IGJhc2VTZXJ2ZXJTY2hlbWEucmVmaW5lKGRhdGEgPT4gZGF0YS5wYXNzd29yZCB8fCBkYXRhLnNzaEtleSwge1xuICAgIG1lc3NhZ2U6IFwiUGFzc3dvcmQgb3IgU1NIIEtleSBpcyByZXF1aXJlZFwiLFxuICAgIHBhdGg6IFtcInBhc3N3b3JkXCJdLFxufSk7XG5cbmV4cG9ydCBjb25zdCBzZXJ2ZXJTY2hlbWFXaXRoSWQgPSBiYXNlU2VydmVyU2NoZW1hLmV4dGVuZCh7XG4gIGlkOiB6LnN0cmluZygpLFxufSk7XG4iXSwibmFtZXMiOlsieiIsImJhc2VTZXJ2ZXJTY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwibWluIiwibWVzc2FnZSIsImlwQWRkcmVzcyIsImlwIiwidmVyc2lvbiIsInVzZXJuYW1lIiwic3NoUG9ydCIsImNvZXJjZSIsIm51bWJlciIsImludCIsIm1heCIsIm9wdGlvbmFsIiwiZGVmYXVsdCIsInBhc3N3b3JkIiwib3IiLCJsaXRlcmFsIiwic3NoS2V5Iiwic2VydmVyU2NoZW1hIiwicmVmaW5lIiwiZGF0YSIsInBhdGgiLCJzZXJ2ZXJTY2hlbWFXaXRoSWQiLCJleHRlbmQiLCJpZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/schemas.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/framework/boundary-components.js */ \"(ssr)/./node_modules/next/dist/lib/framework/boundary-components.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDYnVpbHRpbiU1QyU1Q2dsb2JhbC1lcnJvci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24tbWFpbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2NsaWVudC1wYWdlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNodHRwLWFjY2Vzcy1mYWxsYmFjayU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDbGF5b3V0LXJvdXRlci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24tbWFpbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q21ldGFkYXRhJTVDJTVDYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNmcmFtZXdvcmslNUMlNUNib3VuZGFyeS1jb21wb25lbnRzLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q2dlbmVyYXRlJTVDJTVDaWNvbi1tYXJrLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNuZXh0LWRldnRvb2xzJTVDJTVDdXNlcnNwYWNlJTVDJTVDYXBwJTVDJTVDc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxzUEFBdUs7QUFDdks7QUFDQSxvT0FBNko7QUFDN0o7QUFDQSwwT0FBZ0s7QUFDaEs7QUFDQSxvUkFBc0w7QUFDdEw7QUFDQSx3T0FBK0o7QUFDL0o7QUFDQSw0UEFBMEs7QUFDMUs7QUFDQSxzUUFBOEs7QUFDOUs7QUFDQSw0T0FBaUs7QUFDaks7QUFDQSxrT0FBZ0s7QUFDaEs7QUFDQSw0UUFBa0wiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcYnVpbHRpblxcXFxnbG9iYWwtZXJyb3IuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXNlZ21lbnQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcaHR0cC1hY2Nlc3MtZmFsbGJhY2tcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxtZXRhZGF0YVxcXFxhc3luYy1tZXRhZGF0YS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGxpYlxcXFxmcmFtZXdvcmtcXFxcYm91bmRhcnktY29tcG9uZW50cy5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uLW1haW5cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcZ2VuZXJhdGVcXFxcaWNvbi1tYXJrLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXG5leHQtZGV2dG9vbHNcXFxcdXNlcnNwYWNlXFxcXGFwcFxcXFxzZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/toaster.tsx */ \"(ssr)/./src/components/ui/toaster.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDZ2xvYmFscy5jc3MlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uLW1haW4lNUMlNUNzcmMlNUMlNUNjb21wb25lbnRzJTVDJTVDdWklNUMlNUN0b2FzdGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDBLQUE4SiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvbi1tYWluXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXHVpXFxcXHRvYXN0ZXIudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/main-page/dynamic-main-page.tsx */ \"(ssr)/./src/components/main-page/dynamic-main-page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbi1tYWluJTVDJTVDc3JjJTVDJTVDY29tcG9uZW50cyU1QyU1Q21haW4tcGFnZSU1QyU1Q2R5bmFtaWMtbWFpbi1wYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkR5bmFtaWNNYWluUGFnZUxvYWRlciUyMiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsNE1BQTZMIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJEeW5hbWljTWFpblBhZ2VMb2FkZXJcIl0gKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb24tbWFpblxcXFxzcmNcXFxcY29tcG9uZW50c1xcXFxtYWluLXBhZ2VcXFxcZHluYW1pYy1tYWluLXBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision-main%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/components/main-page/dynamic-main-page.tsx":
/*!********************************************************!*\
  !*** ./src/components/main-page/dynamic-main-page.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicMainPageLoader: () => (/* binding */ DynamicMainPageLoader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(ssr)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/skeleton */ \"(ssr)/./src/components/ui/skeleton.tsx\");\n/* __next_internal_client_entry_do_not_use__ DynamicMainPageLoader auto */ \n\n\nconst DynamicMainPage = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(async ()=>{\n     true && /*require.resolve*/(null /* weak dependency, without id */);\n}, {\n    loadableGenerated: {\n        modules: [\n            \"components\\\\main-page\\\\dynamic-main-page.tsx -> \" + \"@/components/main-page/main-page\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 lg:grid-cols-2 gap-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-col gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[500px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 23,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[400px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 24,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-col gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[500px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[400px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, undefined)\n});\n// Sanitize string values to prevent XSS\nfunction sanitizeString(str) {\n    return str.replace(/[<>\"'&]/g, (match)=>{\n        const entities = {\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#x27;',\n            '&': '&amp;'\n        };\n        return entities[match] || match;\n    });\n}\n// Sanitize server data\nfunction sanitizeServer(server) {\n    return {\n        ...server,\n        name: sanitizeString(server.name),\n        ipAddress: sanitizeString(server.ipAddress),\n        username: sanitizeString(server.username)\n    };\n}\n// Sanitize tunnel data\nfunction sanitizeTunnel(tunnel) {\n    return {\n        ...tunnel,\n        tunnelIp1: sanitizeString(tunnel.tunnelIp1 || ''),\n        tunnelIp2: sanitizeString(tunnel.tunnelIp2 || '')\n    };\n}\nfunction DynamicMainPageLoader({ initialServers, initialTunnels }) {\n    const sanitizedServers = initialServers.map(sanitizeServer);\n    const sanitizedTunnels = initialTunnels.map(sanitizeTunnel);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicMainPage, {\n        initialServers: sanitizedServers,\n        initialTunnels: sanitizedTunnels\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n        lineNumber: 79,\n        columnNumber: 12\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9tYWluLXBhZ2UvZHluYW1pYy1tYWluLXBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdtQztBQUNpQjtBQVVwRCxNQUFNRSxrQkFBa0JGLHdEQUFPQTs7Ozs7Ozs7SUFHM0JHLEtBQUs7SUFDTEMsU0FBUyxrQkFDUCw4REFBQ0M7WUFBSUMsV0FBVTtzQkFDYiw0RUFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNMLDZEQUFRQTtnQ0FBQ0ssV0FBVTs7Ozs7OzBDQUNwQiw4REFBQ0wsNkRBQVFBO2dDQUFDSyxXQUFVOzs7Ozs7Ozs7Ozs7a0NBRXRCLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNMLDZEQUFRQTtnQ0FBQ0ssV0FBVTs7Ozs7OzBDQUNwQiw4REFBQ0wsNkRBQVFBO2dDQUFDSyxXQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRaEMsd0NBQXdDO0FBQ3hDLFNBQVNDLGVBQWVDLEdBQVc7SUFDL0IsT0FBT0EsSUFBSUMsT0FBTyxDQUFDLFlBQVksQ0FBQ0M7UUFDNUIsTUFBTUMsV0FBc0M7WUFDeEMsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLE9BQU9BLFFBQVEsQ0FBQ0QsTUFBTSxJQUFJQTtJQUM5QjtBQUNKO0FBRUEsdUJBQXVCO0FBQ3ZCLFNBQVNFLGVBQWVDLE1BQW1CO0lBQ3ZDLE9BQU87UUFDSCxHQUFHQSxNQUFNO1FBQ1RDLE1BQU1QLGVBQWVNLE9BQU9DLElBQUk7UUFDaENDLFdBQVdSLGVBQWVNLE9BQU9FLFNBQVM7UUFDMUNDLFVBQVVULGVBQWVNLE9BQU9HLFFBQVE7SUFDNUM7QUFDSjtBQUVBLHVCQUF1QjtBQUN2QixTQUFTQyxlQUFlQyxNQUFtQjtJQUN2QyxPQUFPO1FBQ0gsR0FBR0EsTUFBTTtRQUNUQyxXQUFXWixlQUFlVyxPQUFPQyxTQUFTLElBQUk7UUFDOUNDLFdBQVdiLGVBQWVXLE9BQU9FLFNBQVMsSUFBSTtJQUNsRDtBQUNKO0FBRU8sU0FBU0Msc0JBQXNCLEVBQ2xDQyxjQUFjLEVBQ2RDLGNBQWMsRUFJakI7SUFDRyxNQUFNQyxtQkFBbUJGLGVBQWVHLEdBQUcsQ0FBQ2I7SUFDNUMsTUFBTWMsbUJBQW1CSCxlQUFlRSxHQUFHLENBQUNSO0lBRTVDLHFCQUFPLDhEQUFDZjtRQUFnQm9CLGdCQUFnQkU7UUFBa0JELGdCQUFnQkc7Ozs7OztBQUM5RSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb24tbWFpblxcc3JjXFxjb21wb25lbnRzXFxtYWluLXBhZ2VcXGR5bmFtaWMtbWFpbi1wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2UgY2xpZW50JztcblxuaW1wb3J0IGR5bmFtaWMgZnJvbSBcIm5leHQvZHluYW1pY1wiO1xuaW1wb3J0IHsgU2tlbGV0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3NrZWxldG9uXCI7XG5pbXBvcnQgdHlwZSB7IFNlcnZlciwgVHVubmVsIH0gZnJvbSBcIkAvbGliL3R5cGVzXCI7XG5pbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gXCJtb25nb2RiXCI7XG5cbi8vIEhlbHBlciB0eXBlIGZvciBzZXJpYWxpemVkIGRhdGEsIGVuc3VyaW5nIGl0J3MgYSBwbGFpbiBvYmplY3QuXG50eXBlIFBsYWluPFQ+ID0gVCBleHRlbmRzIE9iamVjdElkID8gc3RyaW5nIDogVCBleHRlbmRzIERhdGUgPyBzdHJpbmcgOiBUIGV4dGVuZHMgb2JqZWN0ID8ge1tLIGluIGtleW9mIFRdOiBQbGFpbjxUW0tdPn0gOiBUO1xudHlwZSBQbGFpblNlcnZlciA9IFBsYWluPE9taXQ8U2VydmVyLCAnX2lkJz4+ICYgeyBpZDogc3RyaW5nIH07XG50eXBlIFBsYWluVHVubmVsID0gUGxhaW48T21pdDxUdW5uZWwsICdfaWQnPj4gJiB7IGlkOiBzdHJpbmcgfTtcblxuXG5jb25zdCBEeW5hbWljTWFpblBhZ2UgPSBkeW5hbWljKFxuICAoKSA9PiBpbXBvcnQoJ0AvY29tcG9uZW50cy9tYWluLXBhZ2UvbWFpbi1wYWdlJykudGhlbigobW9kKSA9PiBtb2QuTWFpblBhZ2UpLFxuICB7XG4gICAgc3NyOiBmYWxzZSxcbiAgICBsb2FkaW5nOiAoKSA9PiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC0xIGZsZXgtY29sIGdhcC00IHAtNCBtZDpnYXAtOCBtZDpwLThcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIGxnOmdyaWQtY29scy0yIGdhcC00XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC00XCI+XG4gICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC1bNTAwcHhdIHctZnVsbFwiIC8+XG4gICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC1bNDAwcHhdIHctZnVsbFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC00XCI+XG4gICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC1bNTAwcHhdIHctZnVsbFwiIC8+XG4gICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC1bNDAwcHhdIHctZnVsbFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKSxcbiAgfVxuKTtcblxuLy8gU2FuaXRpemUgc3RyaW5nIHZhbHVlcyB0byBwcmV2ZW50IFhTU1xuZnVuY3Rpb24gc2FuaXRpemVTdHJpbmcoc3RyOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWzw+XCInJl0vZywgKG1hdGNoKSA9PiB7XG4gICAgICAgIGNvbnN0IGVudGl0aWVzOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge1xuICAgICAgICAgICAgJzwnOiAnJmx0OycsXG4gICAgICAgICAgICAnPic6ICcmZ3Q7JyxcbiAgICAgICAgICAgICdcIic6ICcmcXVvdDsnLFxuICAgICAgICAgICAgXCInXCI6ICcmI3gyNzsnLFxuICAgICAgICAgICAgJyYnOiAnJmFtcDsnXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBlbnRpdGllc1ttYXRjaF0gfHwgbWF0Y2g7XG4gICAgfSk7XG59XG5cbi8vIFNhbml0aXplIHNlcnZlciBkYXRhXG5mdW5jdGlvbiBzYW5pdGl6ZVNlcnZlcihzZXJ2ZXI6IFBsYWluU2VydmVyKTogUGxhaW5TZXJ2ZXIge1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnNlcnZlcixcbiAgICAgICAgbmFtZTogc2FuaXRpemVTdHJpbmcoc2VydmVyLm5hbWUpLFxuICAgICAgICBpcEFkZHJlc3M6IHNhbml0aXplU3RyaW5nKHNlcnZlci5pcEFkZHJlc3MpLFxuICAgICAgICB1c2VybmFtZTogc2FuaXRpemVTdHJpbmcoc2VydmVyLnVzZXJuYW1lKVxuICAgIH07XG59XG5cbi8vIFNhbml0aXplIHR1bm5lbCBkYXRhXG5mdW5jdGlvbiBzYW5pdGl6ZVR1bm5lbCh0dW5uZWw6IFBsYWluVHVubmVsKTogUGxhaW5UdW5uZWwge1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnR1bm5lbCxcbiAgICAgICAgdHVubmVsSXAxOiBzYW5pdGl6ZVN0cmluZyh0dW5uZWwudHVubmVsSXAxIHx8ICcnKSxcbiAgICAgICAgdHVubmVsSXAyOiBzYW5pdGl6ZVN0cmluZyh0dW5uZWwudHVubmVsSXAyIHx8ICcnKVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBEeW5hbWljTWFpblBhZ2VMb2FkZXIoeyBcbiAgICBpbml0aWFsU2VydmVycywgXG4gICAgaW5pdGlhbFR1bm5lbHMgXG59OiB7IFxuICAgIGluaXRpYWxTZXJ2ZXJzOiBQbGFpblNlcnZlcltdLCBcbiAgICBpbml0aWFsVHVubmVsczogUGxhaW5UdW5uZWxbXSBcbn0pIHtcbiAgICBjb25zdCBzYW5pdGl6ZWRTZXJ2ZXJzID0gaW5pdGlhbFNlcnZlcnMubWFwKHNhbml0aXplU2VydmVyKTtcbiAgICBjb25zdCBzYW5pdGl6ZWRUdW5uZWxzID0gaW5pdGlhbFR1bm5lbHMubWFwKHNhbml0aXplVHVubmVsKTtcbiAgICBcbiAgICByZXR1cm4gPER5bmFtaWNNYWluUGFnZSBpbml0aWFsU2VydmVycz17c2FuaXRpemVkU2VydmVyc30gaW5pdGlhbFR1bm5lbHM9e3Nhbml0aXplZFR1bm5lbHN9IC8+O1xufVxuIl0sIm5hbWVzIjpbImR5bmFtaWMiLCJTa2VsZXRvbiIsIkR5bmFtaWNNYWluUGFnZSIsInNzciIsImxvYWRpbmciLCJkaXYiLCJjbGFzc05hbWUiLCJzYW5pdGl6ZVN0cmluZyIsInN0ciIsInJlcGxhY2UiLCJtYXRjaCIsImVudGl0aWVzIiwic2FuaXRpemVTZXJ2ZXIiLCJzZXJ2ZXIiLCJuYW1lIiwiaXBBZGRyZXNzIiwidXNlcm5hbWUiLCJzYW5pdGl6ZVR1bm5lbCIsInR1bm5lbCIsInR1bm5lbElwMSIsInR1bm5lbElwMiIsIkR5bmFtaWNNYWluUGFnZUxvYWRlciIsImluaXRpYWxTZXJ2ZXJzIiwiaW5pdGlhbFR1bm5lbHMiLCJzYW5pdGl6ZWRTZXJ2ZXJzIiwibWFwIiwic2FuaXRpemVkVHVubmVscyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/components/main-page/dynamic-main-page.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/skeleton.tsx":
/*!****************************************!*\
  !*** ./src/components/ui/skeleton.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Skeleton: () => (/* binding */ Skeleton)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n\n\nfunction Skeleton({ className, ...props }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.cn)(\"animate-pulse rounded-md bg-muted\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\skeleton.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy91aS9za2VsZXRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFFaEMsU0FBU0MsU0FBUyxFQUNoQkMsU0FBUyxFQUNULEdBQUdDLE9BQ2tDO0lBQ3JDLHFCQUNFLDhEQUFDQztRQUNDRixXQUFXRiw4Q0FBRUEsQ0FBQyxxQ0FBcUNFO1FBQ2xELEdBQUdDLEtBQUs7Ozs7OztBQUdmO0FBRW1CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvbi1tYWluXFxzcmNcXGNvbXBvbmVudHNcXHVpXFxza2VsZXRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxuXG5mdW5jdGlvbiBTa2VsZXRvbih7XG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn06IFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50Pikge1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17Y24oXCJhbmltYXRlLXB1bHNlIHJvdW5kZWQtbWQgYmctbXV0ZWRcIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCB7IFNrZWxldG9uIH1cbiJdLCJuYW1lcyI6WyJjbiIsIlNrZWxldG9uIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJkaXYiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/skeleton.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/toast.tsx":
/*!*************************************!*\
  !*** ./src/components/ui/toast.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-toast */ \"(ssr)/./node_modules/@radix-ui/react-toast/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=X!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ ToastProvider,ToastViewport,Toast,ToastTitle,ToastDescription,ToastClose,ToastAction auto */ \n\n\n\n\n\nconst ToastProvider = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Provider;\nconst ToastViewport = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 16,\n        columnNumber: 3\n    }, undefined));\nToastViewport.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport.displayName;\nconst toastVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\", {\n    variants: {\n        variant: {\n            default: \"border bg-background text-foreground\",\n            destructive: \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Toast = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, ...props }, ref)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(toastVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, undefined);\n});\nToast.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\nconst ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 62,\n        columnNumber: 3\n    }, undefined));\nToastAction.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action.displayName;\nconst ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\", className),\n        \"toast-close\": \"\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n            lineNumber: 86,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 77,\n        columnNumber: 3\n    }, undefined));\nToastClose.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close.displayName;\nconst ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm font-semibold\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 95,\n        columnNumber: 3\n    }, undefined));\nToastTitle.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title.displayName;\nconst ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm opacity-90\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 107,\n        columnNumber: 3\n    }, undefined));\nToastDescription.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description.displayName;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/toast.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/toaster.tsx":
/*!***************************************!*\
  !*** ./src/components/ui/toaster.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/use-toast */ \"(ssr)/./src/hooks/use-toast.ts\");\n/* harmony import */ var _components_ui_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/toast */ \"(ssr)/./src/components/ui/toast.tsx\");\n/* __next_internal_client_entry_do_not_use__ Toaster auto */ \n\n\nfunction Toaster() {\n    const { toasts } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastProvider, {\n        children: [\n            toasts.map(function({ id, title, description, action, ...props }) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.Toast, {\n                    ...props,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid gap-1\",\n                            children: [\n                                title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastTitle, {\n                                    children: title\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 22,\n                                    columnNumber: 25\n                                }, this),\n                                description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastDescription, {\n                                    children: description\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this),\n                        action,\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastClose, {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, id, true, {\n                    fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 11\n                }, this);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastViewport, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision-main\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFNEM7QUFRZDtBQUV2QixTQUFTTztJQUNkLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdSLDBEQUFRQTtJQUUzQixxQkFDRSw4REFBQ0ksK0RBQWFBOztZQUNYSSxPQUFPQyxHQUFHLENBQUMsU0FBVSxFQUFFQyxFQUFFLEVBQUVDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsT0FBTztnQkFDaEUscUJBQ0UsOERBQUNiLHVEQUFLQTtvQkFBVyxHQUFHYSxLQUFLOztzQ0FDdkIsOERBQUNDOzRCQUFJQyxXQUFVOztnQ0FDWkwsdUJBQVMsOERBQUNOLDREQUFVQTs4Q0FBRU07Ozs7OztnQ0FDdEJDLDZCQUNDLDhEQUFDVCxrRUFBZ0JBOzhDQUFFUzs7Ozs7Ozs7Ozs7O3dCQUd0QkM7c0NBQ0QsOERBQUNYLDREQUFVQTs7Ozs7O21CQVJEUTs7Ozs7WUFXaEI7MEJBQ0EsOERBQUNKLCtEQUFhQTs7Ozs7Ozs7Ozs7QUFHcEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uLW1haW5cXHNyY1xcY29tcG9uZW50c1xcdWlcXHRvYXN0ZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IHVzZVRvYXN0IH0gZnJvbSBcIkAvaG9va3MvdXNlLXRvYXN0XCJcbmltcG9ydCB7XG4gIFRvYXN0LFxuICBUb2FzdENsb3NlLFxuICBUb2FzdERlc2NyaXB0aW9uLFxuICBUb2FzdFByb3ZpZGVyLFxuICBUb2FzdFRpdGxlLFxuICBUb2FzdFZpZXdwb3J0LFxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3RvYXN0XCJcblxuZXhwb3J0IGZ1bmN0aW9uIFRvYXN0ZXIoKSB7XG4gIGNvbnN0IHsgdG9hc3RzIH0gPSB1c2VUb2FzdCgpXG5cbiAgcmV0dXJuIChcbiAgICA8VG9hc3RQcm92aWRlcj5cbiAgICAgIHt0b2FzdHMubWFwKGZ1bmN0aW9uICh7IGlkLCB0aXRsZSwgZGVzY3JpcHRpb24sIGFjdGlvbiwgLi4ucHJvcHMgfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxUb2FzdCBrZXk9e2lkfSB7Li4ucHJvcHN9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC0xXCI+XG4gICAgICAgICAgICAgIHt0aXRsZSAmJiA8VG9hc3RUaXRsZT57dGl0bGV9PC9Ub2FzdFRpdGxlPn1cbiAgICAgICAgICAgICAge2Rlc2NyaXB0aW9uICYmIChcbiAgICAgICAgICAgICAgICA8VG9hc3REZXNjcmlwdGlvbj57ZGVzY3JpcHRpb259PC9Ub2FzdERlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7YWN0aW9ufVxuICAgICAgICAgICAgPFRvYXN0Q2xvc2UgLz5cbiAgICAgICAgICA8L1RvYXN0PlxuICAgICAgICApXG4gICAgICB9KX1cbiAgICAgIDxUb2FzdFZpZXdwb3J0IC8+XG4gICAgPC9Ub2FzdFByb3ZpZGVyPlxuICApXG59XG4iXSwibmFtZXMiOlsidXNlVG9hc3QiLCJUb2FzdCIsIlRvYXN0Q2xvc2UiLCJUb2FzdERlc2NyaXB0aW9uIiwiVG9hc3RQcm92aWRlciIsIlRvYXN0VGl0bGUiLCJUb2FzdFZpZXdwb3J0IiwiVG9hc3RlciIsInRvYXN0cyIsIm1hcCIsImlkIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImFjdGlvbiIsInByb3BzIiwiZGl2IiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/toaster.tsx\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-toast.ts":
/*!********************************!*\
  !*** ./src/hooks/use-toast.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reducer: () => (/* binding */ reducer),\n/* harmony export */   toast: () => (/* binding */ toast),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ reducer,useToast,toast auto */ // Inspired by react-hot-toast library\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\nconst actionTypes = {\n    ADD_TOAST: \"ADD_TOAST\",\n    UPDATE_TOAST: \"UPDATE_TOAST\",\n    DISMISS_TOAST: \"DISMISS_TOAST\",\n    REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n    count = (count + 1) % Number.MAX_SAFE_INTEGER;\n    return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = (toastId)=>{\n    if (toastTimeouts.has(toastId)) {\n        return;\n    }\n    const timeout = setTimeout(()=>{\n        toastTimeouts.delete(toastId);\n        dispatch({\n            type: \"REMOVE_TOAST\",\n            toastId: toastId\n        });\n    }, TOAST_REMOVE_DELAY);\n    toastTimeouts.set(toastId, timeout);\n};\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case \"ADD_TOAST\":\n            return {\n                ...state,\n                toasts: [\n                    action.toast,\n                    ...state.toasts\n                ].slice(0, TOAST_LIMIT)\n            };\n        case \"UPDATE_TOAST\":\n            return {\n                ...state,\n                toasts: state.toasts.map((t)=>t.id === action.toast.id ? {\n                        ...t,\n                        ...action.toast\n                    } : t)\n            };\n        case \"DISMISS_TOAST\":\n            {\n                const { toastId } = action;\n                // ! Side effects ! - This could be extracted into a dismissToast() action,\n                // but I'll keep it here for simplicity\n                if (toastId) {\n                    addToRemoveQueue(toastId);\n                } else {\n                    state.toasts.forEach((toast)=>{\n                        addToRemoveQueue(toast.id);\n                    });\n                }\n                return {\n                    ...state,\n                    toasts: state.toasts.map((t)=>t.id === toastId || toastId === undefined ? {\n                            ...t,\n                            open: false\n                        } : t)\n                };\n            }\n        case \"REMOVE_TOAST\":\n            if (action.toastId === undefined) {\n                return {\n                    ...state,\n                    toasts: []\n                };\n            }\n            return {\n                ...state,\n                toasts: state.toasts.filter((t)=>t.id !== action.toastId)\n            };\n    }\n};\nconst listeners = [];\nlet memoryState = {\n    toasts: []\n};\nfunction dispatch(action) {\n    memoryState = reducer(memoryState, action);\n    listeners.forEach((listener)=>{\n        listener(memoryState);\n    });\n}\nfunction toast({ ...props }) {\n    const id = genId();\n    const update = (props)=>dispatch({\n            type: \"UPDATE_TOAST\",\n            toast: {\n                ...props,\n                id\n            }\n        });\n    const dismiss = ()=>dispatch({\n            type: \"DISMISS_TOAST\",\n            toastId: id\n        });\n    dispatch({\n        type: \"ADD_TOAST\",\n        toast: {\n            ...props,\n            id,\n            open: true,\n            onOpenChange: (open)=>{\n                if (!open) dismiss();\n            }\n        }\n    });\n    return {\n        id: id,\n        dismiss,\n        update\n    };\n}\nfunction useToast() {\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useToast.useEffect\": ()=>{\n            listeners.push(setState);\n            return ({\n                \"useToast.useEffect\": ()=>{\n                    const index = listeners.indexOf(setState);\n                    if (index > -1) {\n                        listeners.splice(index, 1);\n                    }\n                }\n            })[\"useToast.useEffect\"];\n        }\n    }[\"useToast.useEffect\"], [\n        state\n    ]);\n    return {\n        ...state,\n        toast,\n        dismiss: (toastId)=>dispatch({\n                type: \"DISMISS_TOAST\",\n                toastId\n            })\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-toast.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3V0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNKO0FBRWpDLFNBQVNFLEdBQUcsR0FBR0MsTUFBb0I7SUFDeEMsT0FBT0YsdURBQU9BLENBQUNELDBDQUFJQSxDQUFDRztBQUN0QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb24tbWFpblxcc3JjXFxsaWJcXHV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsc3gsIHR5cGUgQ2xhc3NWYWx1ZSB9IGZyb20gXCJjbHN4XCJcbmltcG9ydCB7IHR3TWVyZ2UgfSBmcm9tIFwidGFpbHdpbmQtbWVyZ2VcIlxuXG5leHBvcnQgZnVuY3Rpb24gY24oLi4uaW5wdXRzOiBDbGFzc1ZhbHVlW10pIHtcbiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKVxufVxuIl0sIm5hbWVzIjpbImNsc3giLCJ0d01lcmdlIiwiY24iLCJpbnB1dHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/utils.ts\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "async_hooks":
/*!******************************!*\
  !*** external "async_hooks" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("async_hooks");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dgram":
/*!************************!*\
  !*** external "dgram" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("dgram");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("express");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "import-in-the-middle":
/*!***************************************!*\
  !*** external "import-in-the-middle" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = require("import-in-the-middle");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongodb");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "node-ssh":
/*!***************************!*\
  !*** external "node-ssh" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node-ssh");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:perf_hooks":
/*!**********************************!*\
  !*** external "node:perf_hooks" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:perf_hooks");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("perf_hooks");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "require-in-the-middle":
/*!****************************************!*\
  !*** external "require-in-the-middle" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("require-in-the-middle");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/zod-to-json-schema","vendor-chunks/@genkit-ai","vendor-chunks/yaml","vendor-chunks/ajv","vendor-chunks/@grpc","vendor-chunks/semver","vendor-chunks/protobufjs","vendor-chunks/thriftrw","vendor-chunks/uuid","vendor-chunks/bufrw","vendor-chunks/@radix-ui","vendor-chunks/opentracing","vendor-chunks/genkit","vendor-chunks/zod","vendor-chunks/@protobufjs","vendor-chunks/jaeger-client","vendor-chunks/lucide-react","vendor-chunks/hexer","vendor-chunks/@swc","vendor-chunks/fast-uri","vendor-chunks/ajv-formats","vendor-chunks/xtend","vendor-chunks/partial-json","vendor-chunks/error","vendor-chunks/@google","vendor-chunks/json5","vendor-chunks/tailwind-merge","vendor-chunks/clsx","vendor-chunks/class-variance-authority","vendor-chunks/long","vendor-chunks/xorshift","vendor-chunks/uri-templates","vendor-chunks/string-template","vendor-chunks/shimmer","vendor-chunks/node-int64","vendor-chunks/lodash.camelcase","vendor-chunks/json-schema-traverse","vendor-chunks/handlebars","vendor-chunks/get-port","vendor-chunks/fast-deep-equal","vendor-chunks/dotprompt","vendor-chunks/ansi-color","vendor-chunks/@js-sdsl"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();