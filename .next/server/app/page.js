/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "(action-browser)/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync ***!
  \***********************************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(action-browser)/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%2C%5B%7B%22id%22%3A%2240e7d7fecb30703d26e81b9b04eff6bf6b0f0d6a7e%22%2C%22exportedName%22%3A%22suggestTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%2C%5B%7B%22id%22%3A%224099cf43ebd1adf44968764b8d4829882457364ce7%22%2C%22exportedName%22%3A%22suggestServerOrder%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%7D%5D%5D%5D&__client_imported__=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%2C%5B%7B%22id%22%3A%2240e7d7fecb30703d26e81b9b04eff6bf6b0f0d6a7e%22%2C%22exportedName%22%3A%22suggestTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%2C%5B%7B%22id%22%3A%224099cf43ebd1adf44968764b8d4829882457364ce7%22%2C%22exportedName%22%3A%22suggestServerOrder%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%7D%5D%5D%5D&__client_imported__=true! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"4099cf43ebd1adf44968764b8d4829882457364ce7\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_ai_flows_suggest_server_order_flow_ts__WEBPACK_IMPORTED_MODULE_1__.suggestServerOrder),\n/* harmony export */   \"40e7d7fecb30703d26e81b9b04eff6bf6b0f0d6a7e\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_ai_flows_suggest_tunnel_flow_ts__WEBPACK_IMPORTED_MODULE_0__.suggestTunnel)\n/* harmony export */ });\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_ai_flows_suggest_tunnel_flow_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/ai/flows/suggest-tunnel-flow.ts */ \"(action-browser)/./src/ai/flows/suggest-tunnel-flow.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_ai_flows_suggest_server_order_flow_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/ai/flows/suggest-server-order-flow.ts */ \"(action-browser)/./src/ai/flows/suggest-server-order-flow.ts\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWFjdGlvbi1lbnRyeS1sb2FkZXIuanM/YWN0aW9ucz0lNUIlNUIlMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24lNUMlNUNzcmMlNUMlNUNhaSU1QyU1Q2Zsb3dzJTVDJTVDc3VnZ2VzdC10dW5uZWwtZmxvdy50cyUyMiUyQyU1QiU3QiUyMmlkJTIyJTNBJTIyNDBlN2Q3ZmVjYjMwNzAzZDI2ZTgxYjliMDRlZmY2YmY2YjBmMGQ2YTdlJTIyJTJDJTIyZXhwb3J0ZWROYW1lJTIyJTNBJTIyc3VnZ2VzdFR1bm5lbCUyMiUyQyUyMmZpbGVuYW1lJTIyJTNBJTIyLi4lMkZDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24lNUMlNUNzcmMlNUMlNUNhaSU1QyU1Q2Zsb3dzJTVDJTVDc3VnZ2VzdC10dW5uZWwtZmxvdy50cyUyMiU3RCU1RCU1RCUyQyU1QiUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2FpJTVDJTVDZmxvd3MlNUMlNUNzdWdnZXN0LXNlcnZlci1vcmRlci1mbG93LnRzJTIyJTJDJTVCJTdCJTIyaWQlMjIlM0ElMjI0MDk5Y2Y0M2ViZDFhZGY0NDk2ODc2NGI4ZDQ4Mjk4ODI0NTczNjRjZTclMjIlMkMlMjJleHBvcnRlZE5hbWUlMjIlM0ElMjJzdWdnZXN0U2VydmVyT3JkZXIlMjIlMkMlMjJmaWxlbmFtZSUyMiUzQSUyMi4uJTJGQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDc3JjJTVDJTVDYWklNUMlNUNmbG93cyU1QyU1Q3N1Z2dlc3Qtc2VydmVyLW9yZGVyLWZsb3cudHMlMjIlN0QlNUQlNUQlNUQmX19jbGllbnRfaW1wb3J0ZWRfXz10cnVlISIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUM2SztBQUNXIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgeyBzdWdnZXN0VHVubmVsIGFzIFwiNDBlN2Q3ZmVjYjMwNzAzZDI2ZTgxYjliMDRlZmY2YmY2YjBmMGQ2YTdlXCIgfSBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxhaVxcXFxmbG93c1xcXFxzdWdnZXN0LXR1bm5lbC1mbG93LnRzXCJcbmV4cG9ydCB7IHN1Z2dlc3RTZXJ2ZXJPcmRlciBhcyBcIjQwOTljZjQzZWJkMWFkZjQ0OTY4NzY0YjhkNDgyOTg4MjQ1NzM2NGNlN1wiIH0gZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxzcmNcXFxcYWlcXFxcZmxvd3NcXFxcc3VnZ2VzdC1zZXJ2ZXItb3JkZXItZmxvdy50c1wiXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%2C%5B%7B%22id%22%3A%2240e7d7fecb30703d26e81b9b04eff6bf6b0f0d6a7e%22%2C%22exportedName%22%3A%22suggestTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-tunnel-flow.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%2C%5B%7B%22id%22%3A%224099cf43ebd1adf44968764b8d4829882457364ce7%22%2C%22exportedName%22%3A%22suggestServerOrder%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Cai%5C%5Cflows%5C%5Csuggest-server-order-flow.ts%22%7D%5D%5D%5D&__client_imported__=true!\n");

/***/ }),

/***/ "(action-browser)/./src/ai/flows/suggest-server-order-flow.ts":
/*!***************************************************!*\
  !*** ./src/ai/flows/suggest-server-order-flow.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   suggestServerOrder: () => (/* binding */ suggestServerOrder)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ai_genkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/ai/genkit */ \"(action-browser)/./src/ai/genkit.ts\");\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! genkit */ \"(action-browser)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"4099cf43ebd1adf44968764b8d4829882457364ce7\":\"suggestServerOrder\"} */ \n\n\n\nconst SuggestServerOrderInputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    servers: genkit__WEBPACK_IMPORTED_MODULE_3__.z.array(genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n        id: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string(),\n        name: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string(),\n        ipAddress: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string()\n    })).describe('List of available servers'),\n    context: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('User context for server ordering')\n});\nconst SuggestServerOrderOutputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    orderedServerIds: genkit__WEBPACK_IMPORTED_MODULE_3__.z.array(genkit__WEBPACK_IMPORTED_MODULE_3__.z.string()).describe('Server IDs in optimal order: [source, intermediate, destination]'),\n    reason: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('Explanation for the server ordering in Persian')\n});\nasync function suggestServerOrder(input) {\n    return suggestServerOrderFlow(input);\n}\nconst prompt = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.definePrompt({\n    name: 'suggestServerOrderPrompt',\n    input: {\n        schema: SuggestServerOrderInputSchema\n    },\n    output: {\n        schema: SuggestServerOrderOutputSchema\n    },\n    prompt: `شما متخصص شبکه هستید. وظیفه شما تعیین بهترین ترتیب سرورها برای combined tunnel است.\n\nقوانین:\n- سرور اول: Source (منبع)\n- سرور دوم: Intermediate (واسط) \n- سرور سوم: Destination (مقصد)\n\nراهنماییها:\n- سرور ایران معمولاً بهتر است Source باشد\n- سرور اروپا/آمریکا بهتر است Destination باشد\n- سرور با بهترین اتصال بین دو سرور دیگر، Intermediate مناسبی است\n\nسرورهای موجود:\n{{{servers}}}\n\nبافت کاربر:\n{{{context}}}\n\nبهترین ترتیب سرورها را تعیین کنید و دلیل انتخابتان را به فارسی توضیح دهید.`\n});\nconst suggestServerOrderFlow = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.defineFlow({\n    name: 'suggestServerOrderFlow',\n    inputSchema: SuggestServerOrderInputSchema,\n    outputSchema: SuggestServerOrderOutputSchema\n}, async (input)=>{\n    const { output } = await prompt(input);\n    return output;\n});\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_4__.ensureServerEntryExports)([\n    suggestServerOrder\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(suggestServerOrder, \"4099cf43ebd1adf44968764b8d4829882457364ce7\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9haS9mbG93cy9zdWdnZXN0LXNlcnZlci1vcmRlci1mbG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUUrQjtBQUNOO0FBRXpCLE1BQU1FLGdDQUFnQ0QscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUM3Q0MsU0FBU0gscUNBQUNBLENBQUNJLEtBQUssQ0FBQ0oscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztRQUN4QkcsSUFBSUwscUNBQUNBLENBQUNNLE1BQU07UUFDWkMsTUFBTVAscUNBQUNBLENBQUNNLE1BQU07UUFDZEUsV0FBV1IscUNBQUNBLENBQUNNLE1BQU07SUFDckIsSUFBSUcsUUFBUSxDQUFDO0lBQ2JDLFNBQVNWLHFDQUFDQSxDQUFDTSxNQUFNLEdBQUdHLFFBQVEsQ0FBQztBQUMvQjtBQUVBLE1BQU1FLGlDQUFpQ1gscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUM5Q1Usa0JBQWtCWixxQ0FBQ0EsQ0FBQ0ksS0FBSyxDQUFDSixxQ0FBQ0EsQ0FBQ00sTUFBTSxJQUFJRyxRQUFRLENBQUM7SUFDL0NJLFFBQVFiLHFDQUFDQSxDQUFDTSxNQUFNLEdBQUdHLFFBQVEsQ0FBQztBQUM5QjtBQUtPLGVBQWVLLG1CQUFtQkMsS0FBOEI7SUFDckUsT0FBT0MsdUJBQXVCRDtBQUNoQztBQUVBLE1BQU1FLFNBQVNsQiwwQ0FBRUEsQ0FBQ21CLFlBQVksQ0FBQztJQUM3QlgsTUFBTTtJQUNOUSxPQUFPO1FBQUNJLFFBQVFsQjtJQUE2QjtJQUM3Q21CLFFBQVE7UUFBQ0QsUUFBUVI7SUFBOEI7SUFDL0NNLFFBQVEsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBFQWtCK0QsQ0FBQztBQUMzRTtBQUVBLE1BQU1ELHlCQUF5QmpCLDBDQUFFQSxDQUFDc0IsVUFBVSxDQUMxQztJQUNFZCxNQUFNO0lBQ05lLGFBQWFyQjtJQUNic0IsY0FBY1o7QUFDaEIsR0FDQSxPQUFNSTtJQUNKLE1BQU0sRUFBQ0ssTUFBTSxFQUFDLEdBQUcsTUFBTUgsT0FBT0Y7SUFDOUIsT0FBT0s7QUFDVDs7O0lBdENvQk47O0FBQUFBLDBGQUFBQSxDQUFBQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb25cXHNyY1xcYWlcXGZsb3dzXFxzdWdnZXN0LXNlcnZlci1vcmRlci1mbG93LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc2VydmVyJztcblxuaW1wb3J0IHthaX0gZnJvbSAnQC9haS9nZW5raXQnO1xuaW1wb3J0IHt6fSBmcm9tICdnZW5raXQnO1xuXG5jb25zdCBTdWdnZXN0U2VydmVyT3JkZXJJbnB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgc2VydmVyczogei5hcnJheSh6Lm9iamVjdCh7XG4gICAgaWQ6IHouc3RyaW5nKCksXG4gICAgbmFtZTogei5zdHJpbmcoKSxcbiAgICBpcEFkZHJlc3M6IHouc3RyaW5nKClcbiAgfSkpLmRlc2NyaWJlKCdMaXN0IG9mIGF2YWlsYWJsZSBzZXJ2ZXJzJyksXG4gIGNvbnRleHQ6IHouc3RyaW5nKCkuZGVzY3JpYmUoJ1VzZXIgY29udGV4dCBmb3Igc2VydmVyIG9yZGVyaW5nJylcbn0pO1xuXG5jb25zdCBTdWdnZXN0U2VydmVyT3JkZXJPdXRwdXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG9yZGVyZWRTZXJ2ZXJJZHM6IHouYXJyYXkoei5zdHJpbmcoKSkuZGVzY3JpYmUoJ1NlcnZlciBJRHMgaW4gb3B0aW1hbCBvcmRlcjogW3NvdXJjZSwgaW50ZXJtZWRpYXRlLCBkZXN0aW5hdGlvbl0nKSxcbiAgcmVhc29uOiB6LnN0cmluZygpLmRlc2NyaWJlKCdFeHBsYW5hdGlvbiBmb3IgdGhlIHNlcnZlciBvcmRlcmluZyBpbiBQZXJzaWFuJylcbn0pO1xuXG5leHBvcnQgdHlwZSBTdWdnZXN0U2VydmVyT3JkZXJJbnB1dCA9IHouaW5mZXI8dHlwZW9mIFN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0U2NoZW1hPjtcbmV4cG9ydCB0eXBlIFN1Z2dlc3RTZXJ2ZXJPcmRlck91dHB1dCA9IHouaW5mZXI8dHlwZW9mIFN1Z2dlc3RTZXJ2ZXJPcmRlck91dHB1dFNjaGVtYT47XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdWdnZXN0U2VydmVyT3JkZXIoaW5wdXQ6IFN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0KTogUHJvbWlzZTxTdWdnZXN0U2VydmVyT3JkZXJPdXRwdXQ+IHtcbiAgcmV0dXJuIHN1Z2dlc3RTZXJ2ZXJPcmRlckZsb3coaW5wdXQpO1xufVxuXG5jb25zdCBwcm9tcHQgPSBhaS5kZWZpbmVQcm9tcHQoe1xuICBuYW1lOiAnc3VnZ2VzdFNlcnZlck9yZGVyUHJvbXB0JyxcbiAgaW5wdXQ6IHtzY2hlbWE6IFN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0U2NoZW1hfSxcbiAgb3V0cHV0OiB7c2NoZW1hOiBTdWdnZXN0U2VydmVyT3JkZXJPdXRwdXRTY2hlbWF9LFxuICBwcm9tcHQ6IGDYtNmF2Kcg2YXYqtiu2LXYtSDYtNio2qnZhyDZh9iz2KrbjNivLiDZiNi424zZgdmHINi02YXYpyDYqti524zbjNmGINio2YfYqtix24zZhiDYqtix2KrbjNioINiz2LHZiNix2YfYpyDYqNix2KfbjCBjb21iaW5lZCB0dW5uZWwg2KfYs9iqLlxuXG7ZgtmI2KfZhtuM2YY6XG4tINiz2LHZiNixINin2YjZhDogU291cmNlICjZhdmG2KjYuSlcbi0g2LPYsdmI2LEg2K/ZiNmFOiBJbnRlcm1lZGlhdGUgKNmI2KfYs9i3KSBcbi0g2LPYsdmI2LEg2LPZiNmFOiBEZXN0aW5hdGlvbiAo2YXZgti12K8pXG5cbtix2KfZh9mG2YXYp9uM24zZh9inOlxuLSDYs9ix2YjYsSDYp9uM2LHYp9mGINmF2LnZhdmI2YTYp9mLINio2YfYqtixINin2LPYqiBTb3VyY2Ug2KjYp9i02K9cbi0g2LPYsdmI2LEg2KfYsdmI2b7Ypy/YotmF2LHbjNqp2Kcg2KjZh9iq2LEg2KfYs9iqIERlc3RpbmF0aW9uINio2KfYtNivXG4tINiz2LHZiNixINio2Kcg2KjZh9iq2LHbjNmGINin2KrYtdin2YQg2KjbjNmGINiv2Ygg2LPYsdmI2LEg2K/bjNqv2LHYjCBJbnRlcm1lZGlhdGUg2YXZhtin2LPYqNuMINin2LPYqlxuXG7Ys9ix2YjYsdmH2KfbjCDZhdmI2KzZiNivOlxue3t7c2VydmVyc319fVxuXG7YqNin2YHYqiDaqdin2LHYqNixOlxue3t7Y29udGV4dH19fVxuXG7YqNmH2KrYsduM2YYg2KrYsdiq24zYqCDYs9ix2YjYsdmH2Kcg2LHYpyDYqti524zbjNmGINqp2YbbjNivINmIINiv2YTbjNmEINin2YbYqtiu2KfYqNiq2KfZhiDYsdinINio2Ycg2YHYp9ix2LPbjCDYqtmI2LbbjNitINiv2YfbjNivLmAsXG59KTtcblxuY29uc3Qgc3VnZ2VzdFNlcnZlck9yZGVyRmxvdyA9IGFpLmRlZmluZUZsb3coXG4gIHtcbiAgICBuYW1lOiAnc3VnZ2VzdFNlcnZlck9yZGVyRmxvdycsXG4gICAgaW5wdXRTY2hlbWE6IFN1Z2dlc3RTZXJ2ZXJPcmRlcklucHV0U2NoZW1hLFxuICAgIG91dHB1dFNjaGVtYTogU3VnZ2VzdFNlcnZlck9yZGVyT3V0cHV0U2NoZW1hLFxuICB9LFxuICBhc3luYyBpbnB1dCA9PiB7XG4gICAgY29uc3Qge291dHB1dH0gPSBhd2FpdCBwcm9tcHQoaW5wdXQpO1xuICAgIHJldHVybiBvdXRwdXQhO1xuICB9XG4pOyJdLCJuYW1lcyI6WyJhaSIsInoiLCJTdWdnZXN0U2VydmVyT3JkZXJJbnB1dFNjaGVtYSIsIm9iamVjdCIsInNlcnZlcnMiLCJhcnJheSIsImlkIiwic3RyaW5nIiwibmFtZSIsImlwQWRkcmVzcyIsImRlc2NyaWJlIiwiY29udGV4dCIsIlN1Z2dlc3RTZXJ2ZXJPcmRlck91dHB1dFNjaGVtYSIsIm9yZGVyZWRTZXJ2ZXJJZHMiLCJyZWFzb24iLCJzdWdnZXN0U2VydmVyT3JkZXIiLCJpbnB1dCIsInN1Z2dlc3RTZXJ2ZXJPcmRlckZsb3ciLCJwcm9tcHQiLCJkZWZpbmVQcm9tcHQiLCJzY2hlbWEiLCJvdXRwdXQiLCJkZWZpbmVGbG93IiwiaW5wdXRTY2hlbWEiLCJvdXRwdXRTY2hlbWEiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./src/ai/flows/suggest-server-order-flow.ts\n");

/***/ }),

/***/ "(action-browser)/./src/ai/flows/suggest-tunnel-flow.ts":
/*!*********************************************!*\
  !*** ./src/ai/flows/suggest-tunnel-flow.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   suggestTunnel: () => (/* binding */ suggestTunnel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ai_genkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/ai/genkit */ \"(action-browser)/./src/ai/genkit.ts\");\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! genkit */ \"(action-browser)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/types */ \"(action-browser)/./src/lib/types.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"40e7d7fecb30703d26e81b9b04eff6bf6b0f0d6a7e\":\"suggestTunnel\"} */ \n\n/**\n * @fileOverview An AI flow to suggest the best tunnel type based on user context.\n *\n * - suggestTunnel - A function that suggests a tunnel type.\n * - SuggestTunnelInput - The input type for the suggestTunnel function.\n * - SuggestTunnelOutput - The return type for the suggestTunnel function.\n */ \n\n\nconst SuggestTunnelInputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    context: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('The user\\'s description of their needs, network conditions, or goals.')\n});\nconst SuggestTunnelOutputSchema = genkit__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    tunnelType: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe(`The suggested tunnel type. Must be one of the following values: [${_lib_types__WEBPACK_IMPORTED_MODULE_4__.tunnelTypes.join(', ')}]`),\n    reason: genkit__WEBPACK_IMPORTED_MODULE_3__.z.string().describe('A brief explanation for why this tunnel type was recommended, based on the user\\'s context.')\n});\nasync function suggestTunnel(input) {\n    return suggestTunnelFlow(input);\n}\nconst prompt = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.definePrompt({\n    name: 'suggestTunnelPrompt',\n    input: {\n        schema: SuggestTunnelInputSchema\n    },\n    output: {\n        schema: SuggestTunnelOutputSchema\n    },\n    prompt: `شما یک متخصص شبکه و امنیت کامپیوتر هستید. وظیفه شما پیشنهاد بهترین نوع تونل برای کاربر بر اساس نیازهایش است.\n\nبافت کاربر را تحلیل کنید و مناسب‌ترین نوع تونل را از گزینه‌های موجود انتخاب کنید.\n\nانواع تونل موجود: ${_lib_types__WEBPACK_IMPORTED_MODULE_4__.tunnelTypes.join(', ')}\n\nراهنمایی‌های تخصصی:\n- برای سرورهای ایران، WireGuard بهترین تعادل سرعت و امنیت را ارائه می‌دهد. OpenVPN جایگزین خوبی است.\n- از GRE/IPIP فقط زمانی استفاده کنید که رمزگذاری یا مخفی‌سازی نیاز نیست، معمولاً برای شبکه‌های داخلی تمیز.\n- V2Ray (WS+TLS) بهترین انتخاب برای شبکه‌هایی با Deep Packet Inspection (DPI) یا سانسور سنگین است.\n- Reverse Tunnel (via SSH) زمانی ضروری است که سرور مقصد پشت NAT یا فایروال باشد و پورت باز نداشته باشد.\n\nبافت کاربر:\n{{{context}}}\n\nبر اساس بافت، بهترین نوع تونل و دلیل مختصر انتخابتان را به فارسی ارائه دهید.\n`\n});\nconst suggestTunnelFlow = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.defineFlow({\n    name: 'suggestTunnelFlow',\n    inputSchema: SuggestTunnelInputSchema,\n    outputSchema: SuggestTunnelOutputSchema\n}, async (input)=>{\n    const { output } = await prompt(input);\n    return output;\n});\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__.ensureServerEntryExports)([\n    suggestTunnel\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(suggestTunnel, \"40e7d7fecb30703d26e81b9b04eff6bf6b0f0d6a7e\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9haS9mbG93cy9zdWdnZXN0LXR1bm5lbC1mbG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQTs7Ozs7O0NBTUMsR0FFOEI7QUFDTjtBQUNpQjtBQUUxQyxNQUFNRywyQkFBMkJGLHFDQUFDQSxDQUFDRyxNQUFNLENBQUM7SUFDeENDLFNBQVNKLHFDQUFDQSxDQUFDSyxNQUFNLEdBQUdDLFFBQVEsQ0FBQztBQUMvQjtBQUdBLE1BQU1DLDRCQUE0QlAscUNBQUNBLENBQUNHLE1BQU0sQ0FBQztJQUN6Q0ssWUFBWVIscUNBQUNBLENBQUNLLE1BQU0sR0FBR0MsUUFBUSxDQUFDLENBQUMsaUVBQWlFLEVBQUVMLG1EQUFXQSxDQUFDUSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0hDLFFBQVFWLHFDQUFDQSxDQUFDSyxNQUFNLEdBQUdDLFFBQVEsQ0FBQztBQUM5QjtBQUlPLGVBQWVLLGNBQWNDLEtBQXlCO0lBQzNELE9BQU9DLGtCQUFrQkQ7QUFDM0I7QUFFQSxNQUFNRSxTQUFTZiwwQ0FBRUEsQ0FBQ2dCLFlBQVksQ0FBQztJQUM3QkMsTUFBTTtJQUNOSixPQUFPO1FBQUNLLFFBQVFmO0lBQXdCO0lBQ3hDZ0IsUUFBUTtRQUFDRCxRQUFRVjtJQUF5QjtJQUMxQ08sUUFBUSxDQUFDOzs7O2tCQUlPLEVBQUViLG1EQUFXQSxDQUFDUSxJQUFJLENBQUMsTUFBTTs7Ozs7Ozs7Ozs7O0FBWTNDLENBQUM7QUFDRDtBQUVBLE1BQU1JLG9CQUFvQmQsMENBQUVBLENBQUNvQixVQUFVLENBQ3JDO0lBQ0VILE1BQU07SUFDTkksYUFBYWxCO0lBQ2JtQixjQUFjZDtBQUNoQixHQUNBLE9BQU1LO0lBQ0osTUFBTSxFQUFDTSxNQUFNLEVBQUMsR0FBRyxNQUFNSixPQUFPRjtJQUM5QixPQUFPTTtBQUNUOzs7SUFwQ29CUDs7QUFBQUEsMEZBQUFBLENBQUFBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxhaVxcZmxvd3NcXHN1Z2dlc3QtdHVubmVsLWZsb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInO1xuLyoqXG4gKiBAZmlsZU92ZXJ2aWV3IEFuIEFJIGZsb3cgdG8gc3VnZ2VzdCB0aGUgYmVzdCB0dW5uZWwgdHlwZSBiYXNlZCBvbiB1c2VyIGNvbnRleHQuXG4gKlxuICogLSBzdWdnZXN0VHVubmVsIC0gQSBmdW5jdGlvbiB0aGF0IHN1Z2dlc3RzIGEgdHVubmVsIHR5cGUuXG4gKiAtIFN1Z2dlc3RUdW5uZWxJbnB1dCAtIFRoZSBpbnB1dCB0eXBlIGZvciB0aGUgc3VnZ2VzdFR1bm5lbCBmdW5jdGlvbi5cbiAqIC0gU3VnZ2VzdFR1bm5lbE91dHB1dCAtIFRoZSByZXR1cm4gdHlwZSBmb3IgdGhlIHN1Z2dlc3RUdW5uZWwgZnVuY3Rpb24uXG4gKi9cblxuaW1wb3J0IHthaX0gZnJvbSAnQC9haS9nZW5raXQnO1xuaW1wb3J0IHt6fSBmcm9tICdnZW5raXQnO1xuaW1wb3J0IHsgdHVubmVsVHlwZXMgfSBmcm9tICdAL2xpYi90eXBlcyc7XG5cbmNvbnN0IFN1Z2dlc3RUdW5uZWxJbnB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgY29udGV4dDogei5zdHJpbmcoKS5kZXNjcmliZSgnVGhlIHVzZXJcXCdzIGRlc2NyaXB0aW9uIG9mIHRoZWlyIG5lZWRzLCBuZXR3b3JrIGNvbmRpdGlvbnMsIG9yIGdvYWxzLicpLFxufSk7XG5leHBvcnQgdHlwZSBTdWdnZXN0VHVubmVsSW5wdXQgPSB6LmluZmVyPHR5cGVvZiBTdWdnZXN0VHVubmVsSW5wdXRTY2hlbWE+O1xuXG5jb25zdCBTdWdnZXN0VHVubmVsT3V0cHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICB0dW5uZWxUeXBlOiB6LnN0cmluZygpLmRlc2NyaWJlKGBUaGUgc3VnZ2VzdGVkIHR1bm5lbCB0eXBlLiBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nIHZhbHVlczogWyR7dHVubmVsVHlwZXMuam9pbignLCAnKX1dYCksXG4gIHJlYXNvbjogei5zdHJpbmcoKS5kZXNjcmliZSgnQSBicmllZiBleHBsYW5hdGlvbiBmb3Igd2h5IHRoaXMgdHVubmVsIHR5cGUgd2FzIHJlY29tbWVuZGVkLCBiYXNlZCBvbiB0aGUgdXNlclxcJ3MgY29udGV4dC4nKSxcbn0pO1xuZXhwb3J0IHR5cGUgU3VnZ2VzdFR1bm5lbE91dHB1dCA9IHouaW5mZXI8dHlwZW9mIFN1Z2dlc3RUdW5uZWxPdXRwdXRTY2hlbWE+O1xuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdWdnZXN0VHVubmVsKGlucHV0OiBTdWdnZXN0VHVubmVsSW5wdXQpOiBQcm9taXNlPFN1Z2dlc3RUdW5uZWxPdXRwdXQ+IHtcbiAgcmV0dXJuIHN1Z2dlc3RUdW5uZWxGbG93KGlucHV0KTtcbn1cblxuY29uc3QgcHJvbXB0ID0gYWkuZGVmaW5lUHJvbXB0KHtcbiAgbmFtZTogJ3N1Z2dlc3RUdW5uZWxQcm9tcHQnLFxuICBpbnB1dDoge3NjaGVtYTogU3VnZ2VzdFR1bm5lbElucHV0U2NoZW1hfSxcbiAgb3V0cHV0OiB7c2NoZW1hOiBTdWdnZXN0VHVubmVsT3V0cHV0U2NoZW1hfSxcbiAgcHJvbXB0OiBg2LTZhdinINuM2qkg2YXYqtiu2LXYtSDYtNio2qnZhyDZiCDYp9mF2YbbjNiqINqp2KfZhdm+24zZiNiq2LEg2YfYs9iq24zYry4g2YjYuNuM2YHZhyDYtNmF2Kcg2b7bjNi02YbZh9in2K8g2KjZh9iq2LHbjNmGINmG2YjYuSDYqtmI2YbZhCDYqNix2KfbjCDaqdin2LHYqNixINio2LEg2KfYs9in2LMg2YbbjNin2LLZh9in24zYtCDYp9iz2KouXG5cbtio2KfZgdiqINqp2KfYsdio2LEg2LHYpyDYqtit2YTbjNmEINqp2YbbjNivINmIINmF2YbYp9iz2KjigIzYqtix24zZhiDZhtmI2Lkg2KrZiNmG2YQg2LHYpyDYp9iyINqv2LLbjNmG2YfigIzZh9in24wg2YXZiNis2YjYryDYp9mG2KrYrtin2Kgg2qnZhtuM2K8uXG5cbtin2YbZiNin2Lkg2KrZiNmG2YQg2YXZiNis2YjYrzogJHt0dW5uZWxUeXBlcy5qb2luKCcsICcpfVxuXG7Ysdin2YfZhtmF2KfbjNuM4oCM2YfYp9uMINiq2K7Ytdi124w6XG4tINio2LHYp9uMINiz2LHZiNix2YfYp9uMINin24zYsdin2YbYjCBXaXJlR3VhcmQg2KjZh9iq2LHbjNmGINiq2LnYp9iv2YQg2LPYsdi52Kog2Ygg2KfZhdmG24zYqiDYsdinINin2LHYp9im2Ycg2YXbjOKAjNiv2YfYry4gT3BlblZQTiDYrNin24zar9iy24zZhiDYrtmI2KjbjCDYp9iz2KouXG4tINin2LIgR1JFL0lQSVAg2YHZgti3INiy2YXYp9mG24wg2KfYs9iq2YHYp9iv2Ycg2qnZhtuM2K8g2qnZhyDYsdmF2LLar9iw2KfYsduMINuM2Kcg2YXYrtmB24zigIzYs9in2LLbjCDZhtuM2KfYsiDZhtuM2LPYqtiMINmF2LnZhdmI2YTYp9mLINio2LHYp9uMINi02KjaqdmH4oCM2YfYp9uMINiv2KfYrtmE24wg2KrZhduM2LIuXG4tIFYyUmF5IChXUytUTFMpINio2YfYqtix24zZhiDYp9mG2KrYrtin2Kgg2KjYsdin24wg2LTYqNqp2YfigIzZh9in24zbjCDYqNinIERlZXAgUGFja2V0IEluc3BlY3Rpb24gKERQSSkg24zYpyDYs9in2YbYs9mI2LEg2LPZhtqv24zZhiDYp9iz2KouXG4tIFJldmVyc2UgVHVubmVsICh2aWEgU1NIKSDYstmF2KfZhtuMINi22LHZiNix24wg2KfYs9iqINqp2Ycg2LPYsdmI2LEg2YXZgti12K8g2b7YtNiqIE5BVCDbjNinINmB2KfbjNix2YjYp9mEINio2KfYtNivINmIINm+2YjYsdiqINio2KfYsiDZhtiv2KfYtNiq2Ycg2KjYp9i02K8uXG5cbtio2KfZgdiqINqp2KfYsdio2LE6XG57e3tjb250ZXh0fX19XG5cbtio2LEg2KfYs9in2LMg2KjYp9mB2KrYjCDYqNmH2KrYsduM2YYg2YbZiNi5INiq2YjZhtmEINmIINiv2YTbjNmEINmF2K7Yqti12LEg2KfZhtiq2K7Yp9io2KrYp9mGINix2Kcg2KjZhyDZgdin2LHYs9uMINin2LHYp9im2Ycg2K/Zh9uM2K8uXG5gLFxufSk7XG5cbmNvbnN0IHN1Z2dlc3RUdW5uZWxGbG93ID0gYWkuZGVmaW5lRmxvdyhcbiAge1xuICAgIG5hbWU6ICdzdWdnZXN0VHVubmVsRmxvdycsXG4gICAgaW5wdXRTY2hlbWE6IFN1Z2dlc3RUdW5uZWxJbnB1dFNjaGVtYSxcbiAgICBvdXRwdXRTY2hlbWE6IFN1Z2dlc3RUdW5uZWxPdXRwdXRTY2hlbWEsXG4gIH0sXG4gIGFzeW5jIGlucHV0ID0+IHtcbiAgICBjb25zdCB7b3V0cHV0fSA9IGF3YWl0IHByb21wdChpbnB1dCk7XG4gICAgcmV0dXJuIG91dHB1dCE7XG4gIH1cbik7XG4iXSwibmFtZXMiOlsiYWkiLCJ6IiwidHVubmVsVHlwZXMiLCJTdWdnZXN0VHVubmVsSW5wdXRTY2hlbWEiLCJvYmplY3QiLCJjb250ZXh0Iiwic3RyaW5nIiwiZGVzY3JpYmUiLCJTdWdnZXN0VHVubmVsT3V0cHV0U2NoZW1hIiwidHVubmVsVHlwZSIsImpvaW4iLCJyZWFzb24iLCJzdWdnZXN0VHVubmVsIiwiaW5wdXQiLCJzdWdnZXN0VHVubmVsRmxvdyIsInByb21wdCIsImRlZmluZVByb21wdCIsIm5hbWUiLCJzY2hlbWEiLCJvdXRwdXQiLCJkZWZpbmVGbG93IiwiaW5wdXRTY2hlbWEiLCJvdXRwdXRTY2hlbWEiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./src/ai/flows/suggest-tunnel-flow.ts\n");

/***/ }),

/***/ "(action-browser)/./src/ai/genkit.ts":
/*!**************************!*\
  !*** ./src/ai/genkit.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ai: () => (/* binding */ ai)\n/* harmony export */ });\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! genkit */ \"(action-browser)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var _genkit_ai_googleai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @genkit-ai/googleai */ \"(action-browser)/./node_modules/@genkit-ai/googleai/lib/index.mjs\");\n\n\nconst ai = (0,genkit__WEBPACK_IMPORTED_MODULE_0__.genkit)({\n    plugins: [\n        (0,_genkit_ai_googleai__WEBPACK_IMPORTED_MODULE_1__.googleAI)()\n    ],\n    model: 'googleai/gemini-2.5-flash'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9haS9nZW5raXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThCO0FBQ2U7QUFFdEMsTUFBTUUsS0FBS0YsOENBQU1BLENBQUM7SUFDdkJHLFNBQVM7UUFBQ0YsNkRBQVFBO0tBQUc7SUFDckJHLE9BQU87QUFDVCxHQUFHIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxhaVxcZ2Vua2l0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2Vua2l0fSBmcm9tICdnZW5raXQnO1xuaW1wb3J0IHtnb29nbGVBSX0gZnJvbSAnQGdlbmtpdC1haS9nb29nbGVhaSc7XG5cbmV4cG9ydCBjb25zdCBhaSA9IGdlbmtpdCh7XG4gIHBsdWdpbnM6IFtnb29nbGVBSSgpXSxcbiAgbW9kZWw6ICdnb29nbGVhaS9nZW1pbmktMi41LWZsYXNoJyxcbn0pO1xuIl0sIm5hbWVzIjpbImdlbmtpdCIsImdvb2dsZUFJIiwiYWkiLCJwbHVnaW5zIiwibW9kZWwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./src/ai/genkit.ts\n");

/***/ }),

/***/ "(action-browser)/./src/lib/types.ts":
/*!**************************!*\
  !*** ./src/lib/types.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tunnelTypes: () => (/* binding */ tunnelTypes)\n/* harmony export */ });\nconst tunnelTypes = [\n    \"WireGuard\",\n    \"OpenVPN\",\n    \"IPIP\",\n    \"GRE\",\n    \"SIT\",\n    \"VTI\",\n    \"IPsec\",\n    \"V2Ray (WS+TLS)\",\n    \"Reverse Tunnel (via SSH)\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9saWIvdHlwZXMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQWNPLE1BQU1BLGNBQWM7SUFDekI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0QsQ0FBVSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb25cXHNyY1xcbGliXFx0eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gJ21vbmdvZGInO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZlciB7XG4gIF9pZDogT2JqZWN0SWQ7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgaXBBZGRyZXNzOiBzdHJpbmc7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIHNzaFBvcnQ/OiBudW1iZXI7XG4gIHBhc3N3b3JkPzogc3RyaW5nO1xuICBzc2hLZXk/OiBzdHJpbmc7XG4gIHNzaEtleUNvbmZpZ3VyZWQ/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgdHVubmVsVHlwZXMgPSBbXG4gIFwiV2lyZUd1YXJkXCIsXG4gIFwiT3BlblZQTlwiLFxuICBcIklQSVBcIixcbiAgXCJHUkVcIixcbiAgXCJTSVRcIixcbiAgXCJWVElcIixcbiAgXCJJUHNlY1wiLFxuICBcIlYyUmF5IChXUytUTFMpXCIsXG4gIFwiUmV2ZXJzZSBUdW5uZWwgKHZpYSBTU0gpXCIsXG5dIGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBUdW5uZWxUeXBlID0gKHR5cGVvZiB0dW5uZWxUeXBlcylbbnVtYmVyXTtcblxuZXhwb3J0IGludGVyZmFjZSBMb2dFbnRyeSB7XG4gIHR5cGU6ICdpbmZvJyB8ICdzdWNjZXNzJyB8ICdlcnJvcicgfCAnY29tbWFuZCcgfCAnd2FybmluZyc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUdW5uZWxDcmVhdGlvblJlc3VsdCB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIGxvZ3M6IExvZ0VudHJ5W107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVubmVsIHtcbiAgX2lkOiBPYmplY3RJZDtcbiAgaWQ6IHN0cmluZztcbiAgc2VydmVyMUlkOiBzdHJpbmc7XG4gIHNlcnZlcjJJZDogc3RyaW5nO1xuICB0eXBlOiBUdW5uZWxUeXBlO1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbiAgdHVubmVsTmFtZTogc3RyaW5nO1xuICB0dW5uZWxJcDE6IHN0cmluZztcbiAgdHVubmVsSXAyOiBzdHJpbmc7XG4gIGlzU2F2ZWQ6IGJvb2xlYW47XG4gIGRvbWFpbj86IHN0cmluZztcbiAgbGF0ZW5jeT86IG51bWJlciB8IG51bGw7XG4gIGlzUGluZ2luZz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29sb3JzIHtcbiAgY2hhbGt5OiBzdHJpbmc7XG4gIGNvcmFsOiBzdHJpbmc7XG4gIGN5YW46IHN0cmluZztcbiAgZXJyb3I6IHN0cmluZztcbiAgaXZvcnk6IHN0cmluZztcbiAgbWFsaWJ1OiBzdHJpbmc7XG4gIHNhZ2U6IHN0cmluZztcbiAgc3RvbmU6IHN0cmluZztcbiAgdmlvbGV0OiBzdHJpbmc7XG4gIHdoaXNrZXk6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb2tlbkdyb3VwIHtcbiAgbmFtZTogc3RyaW5nXG4gIHNjb3BlOiBzdHJpbmdbXVxuICBzZXR0aW5nczoge1xuICAgIGZvcmVncm91bmQ/OiBzdHJpbmdcbiAgICBmb250U3R5bGU/OiBzdHJpbmdcbiAgfVxufVxuIl0sIm5hbWVzIjpbInR1bm5lbFR5cGVzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./src/lib/types.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?6a4d\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/./node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_app_render_strip_flight_headers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/app-render/strip-flight-headers */ \"(rsc)/./node_modules/next/dist/server/app-render/strip-flight-headers.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/./node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/./node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/./node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/./node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/./node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/./node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/./node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/./node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/./node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/./node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\nconst page5 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page5, \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\"],\n'global-error': [module1, \"next/dist/client/components/builtin/global-error.js\"],\n'not-found': [module2, \"next/dist/client/components/builtin/not-found.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\page.tsx\"];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig, interceptionRoutePatterns } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = routeModule.match(pathname, prerenderManifest);\n    const isPrerendered = !!prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_ROUTER_PREFETCH_HEADER] === '1' // exclude runtime prefetches, which use '2'\n    ;\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (!routeModule.isDev && !isDraftMode && isSSG && isRSCRequest && !isDynamicRSCRequest) {\n        (0,next_dist_server_app_render_strip_flight_headers__WEBPACK_IMPORTED_MODULE_7__.stripFlightHeaders)(req.headers);\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const varyHeader = routeModule.getVaryHeader(resolvedPathname, interceptionRoutePatterns);\n        res.setHeader('Vary', varyHeader);\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.cacheComponents && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir:  true ? (__webpack_require__(/*! path */ \"path\").join)(/* turbopackIgnore: true */ process.cwd(), routeModule.relativeProjectDir) : 0,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        clientParamParsing: Boolean(nextConfig.experimental.clientParamParsing),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a HTML bot request, we want to serve a blocking render and\n            // not the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__.isBot)(userAgent)) {\n                if (!isRoutePPREnabled || isHtmlBot) {\n                    fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER;\n                }\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    const cacheKey = typeof (prerenderInfo == null ? void 0 : prerenderInfo.fallback) === 'string' ? prerenderInfo.fallback : isProduction ? normalizedSrcPage : null;\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].EMPTY,\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].fromStatic(matchedSegment, next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_CONTENT_TYPE_HEADER),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].EMPTY,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].fromStatic(cachedData.rscData, next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_CONTENT_TYPE_HEADER),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode || isRSCRequest) {\n                // If we're in test mode, we should add a sentinel chunk to the response\n                // that's between the static and dynamic parts so we can compare the\n                // chunks and add assertions.\n                if (false) {}\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.push(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_22__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // If we're in test mode, we should add a sentinel chunk to the response\n            // that's between the static and dynamic parts so we can compare the\n            // chunks and add assertions.\n            if (false) {}\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.push(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                req,\n                res,\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n// TODO: omit this from production builds, only test builds should include it\n/**\n * Creates a readable stream that emits a PPR boundary sentinel.\n *\n * @returns A readable stream that emits a PPR boundary sentinel.\n */ function createPPRBoundarySentinel() {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(new TextEncoder().encode('<!-- PPR_BOUNDARY_SENTINEL -->'));\n            controller.close();\n        }\n    });\n}\n\n//# sourceMappingURL=app-page.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZwYWdlJnBhZ2U9JTJGcGFnZSZhcHBQYXRocz0lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGcGFnZS50c3gmYXBwRGlyPUMlM0ElNUNVc2VycyU1Q2FtaW5fJTVDRG93bmxvYWRzJTVDQ29tcHJlc3NlZCU1Q1R1bm5lbFZpc2lvbiU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDYW1pbl8lNUNEb3dubG9hZHMlNUNDb21wcmVzc2VkJTVDVHVubmVsVmlzaW9uJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEJmlzR2xvYmFsTm90Rm91bmRFbmFibGVkPSEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHNCQUFzQixvSkFBZ0g7QUFDdEksc0JBQXNCLHVPQUF3RjtBQUM5RyxzQkFBc0IsaU9BQXFGO0FBQzNHLHNCQUFzQixpT0FBcUY7QUFDM0csc0JBQXNCLHVPQUF3RjtBQUM5RyxvQkFBb0IsZ0pBQThHO0FBR2hJO0FBR0E7QUFDMkU7QUFDTDtBQUNUO0FBQ087QUFDTztBQUNTO0FBQ0Y7QUFDUDtBQUNLO0FBQ1k7QUFDVztBQUN4QjtBQUNGO0FBQ2E7QUFDMEY7QUFDekc7QUFDWDtBQUNRO0FBQ2hCO0FBQ2lEO0FBQ2pDO0FBQ1Q7QUFDaUI7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUN1QjtBQUdyQjtBQUNxQjtBQUN2Qiw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFHRTtBQUNvRjtBQUdwRjtBQUNGO0FBQ08sd0JBQXdCLHVHQUFrQjtBQUNqRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYSxPQUFvQyxJQUFJLENBQUU7QUFDdkQsd0JBQXdCLE1BQXVDO0FBQy9ELENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLEtBQXFCLEVBQUUsRUFFMUIsQ0FBQztBQUNOO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixLQUF3QztBQUN2RSw2QkFBNkIsNkVBQWM7QUFDM0M7QUFDQSx3QkFBd0IsNkVBQWM7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ1VBQWdVO0FBQzVVO0FBQ0EsOEJBQThCLDhGQUFnQjtBQUM5QyxVQUFVLHVCQUF1QjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxRkFBVTtBQUM5QixzQkFBc0IsMEZBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw2RUFBYyw2Q0FBNkMsd0dBQTJCO0FBQ3pIO0FBQ0E7QUFDQSx5QkFBeUIsNkVBQWMsNkNBQTZDLHVGQUFVO0FBQzlGLG1DQUFtQywyR0FBeUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDJGQUFvQjtBQUNsRDtBQUNBO0FBQ0EscUNBQXFDLE1BQTRHLElBQUksQ0FBZTtBQUNwSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLGtDQUFrQyw2RUFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxzR0FBNEI7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0dBQWtCO0FBQzFCO0FBQ0E7QUFDQSxXQUFXLG9FQUFTO0FBQ3BCO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNkdBQThCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixnR0FBcUI7QUFDbEQ7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsNEVBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw0RUFBZTtBQUMvQyxnQ0FBZ0MsNkVBQWdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixJQUFzQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsZ0ZBQWM7QUFDL0UsK0RBQStELHlDQUF5QztBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxRQUFRLEVBQUUsTUFBTTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGtCQUFrQjtBQUNsQix1Q0FBdUMsUUFBUSxFQUFFLFFBQVE7QUFDekQ7QUFDQSxhQUFhO0FBQ2I7QUFDQSxrQ0FBa0Msc0NBQXNDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiwwQ0FBMEMsNkVBQWM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSwrQkFBK0IsMkZBQWM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixLQUFxQyxHQUFHLDhDQUFvQiw4RUFBOEUsQ0FBb0Q7QUFDdk47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNkVBQWM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLElBQUk7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsNENBQTRDO0FBQzVDO0FBQ0EseUJBQXlCLDZFQUFjO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0Isb0JBQW9CLDBCQUEwQjtBQUM5QyxtQ0FBbUM7QUFDbkM7QUFDQSx3QkFBd0IsNEVBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhHQUE4RyxpQkFBaUIsRUFBRSxvRkFBb0YsOEJBQThCLE9BQU87QUFDMVA7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNkVBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyx1REFBdUQ7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMkVBQWtCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGlFQUFZLGNBQWMsZ0ZBQUs7QUFDaEU7QUFDQSxtQ0FBbUMsaUVBQVk7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxpRUFBWTtBQUN0RSwrQkFBK0IsaUVBQVk7QUFDM0M7QUFDQSxpREFBaUQsaUVBQVk7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxpRUFBWTtBQUM3Qyw4QkFBOEIsNkZBQWU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0VBQVM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxpR0FBc0I7QUFDN0YsNkJBQTZCO0FBQzdCO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLDhCQUE4Qiw2RUFBZTtBQUM3Qyw4QkFBOEIsdUVBQVk7QUFDMUMsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0UsNkVBQWMsd0RBQXdELGlHQUFzQjtBQUMzSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsMkJBQTJCLGtFQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsdUdBQXVHLDZFQUFlO0FBQ3RIO0FBQ0EsaUhBQWlILG1GQUFtRjtBQUNwTTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscUdBQXdCO0FBQ3REO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0hBQWdILG9DQUFvQztBQUNwSjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLHdDQUF3QyxvRUFBYztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpSEFBaUgsNkVBQWU7QUFDaEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscUdBQXdCO0FBQ3REO0FBQ0E7QUFDQSxpSEFBaUgsNEVBQXNCO0FBQ3ZJO0FBQ0Esa0NBQWtDLDRFQUFzQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixnRkFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsdUVBQVksNEJBQTRCLG9HQUF1QjtBQUMvRjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdGQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1RUFBWTtBQUN4QztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsNkVBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLHlCQUF5Qiw2RUFBYztBQUN2QyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw0RUFBc0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyR0FBMkcsNEVBQXNCO0FBQ2pJO0FBQ0EsOEJBQThCLDRFQUFzQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELGlHQUFrQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxR0FBd0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSwyQkFBMkIsZ0ZBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsZ0ZBQWdCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVFQUFZLGdDQUFnQyxvR0FBdUI7QUFDL0Y7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsS0FBaUgsRUFBRSxFQUt0SDtBQUNqQix1QkFBdUIsZ0ZBQWdCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxRkFBWTtBQUN2RDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLHVCQUF1QixnRkFBZ0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLEtBQTRCLEVBQUUsRUFFakM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLCtGQUErRiw2RUFBZTtBQUM5RztBQUNBLHNHQUFzRyx1RUFBdUU7QUFDN0s7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsbUJBQW1CLGdGQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixvRkFBb0YsZ0ZBQWM7QUFDbEcsaUNBQWlDLFFBQVEsRUFBRSxRQUFRO0FBQ25ELDBCQUEwQix1RUFBUTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLE1BQU07QUFDTjtBQUNBLDRDQUE0Qyw2RkFBZTtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywyRkFBbUI7QUFDckQ7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb2R1bGUwID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcc3JjXFxcXGFwcFxcXFxsYXlvdXQudHN4XCIpO1xuY29uc3QgbW9kdWxlMSA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZ2xvYmFsLWVycm9yLmpzXCIpO1xuY29uc3QgbW9kdWxlMiA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vbm90LWZvdW5kLmpzXCIpO1xuY29uc3QgbW9kdWxlMyA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZm9yYmlkZGVuLmpzXCIpO1xuY29uc3QgbW9kdWxlNCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vdW5hdXRob3JpemVkLmpzXCIpO1xuY29uc3QgcGFnZTUgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxzcmNcXFxcYXBwXFxcXHBhZ2UudHN4XCIpO1xuaW1wb3J0IHsgQXBwUGFnZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcGFnZS9tb2R1bGUuY29tcGlsZWRcIiB3aXRoIHtcbiAgICAndHVyYm9wYWNrLXRyYW5zaXRpb24nOiAnbmV4dC1zc3InXG59O1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiIHdpdGgge1xuICAgICd0dXJib3BhY2stdHJhbnNpdGlvbic6ICduZXh0LXNlcnZlci11dGlsaXR5J1xufTtcbmltcG9ydCB7IGdldFJldmFsaWRhdGVSZWFzb24gfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9pbnN0cnVtZW50YXRpb24vdXRpbHNcIjtcbmltcG9ydCB7IGdldFRyYWNlciwgU3BhbktpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvdHJhY2UvdHJhY2VyXCI7XG5pbXBvcnQgeyBnZXRSZXF1ZXN0TWV0YSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JlcXVlc3QtbWV0YVwiO1xuaW1wb3J0IHsgQmFzZVNlcnZlclNwYW4gfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvdHJhY2UvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBpbnRlcm9wRGVmYXVsdCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvaW50ZXJvcC1kZWZhdWx0XCI7XG5pbXBvcnQgeyBzdHJpcEZsaWdodEhlYWRlcnMgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3N0cmlwLWZsaWdodC1oZWFkZXJzXCI7XG5pbXBvcnQgeyBOb2RlTmV4dFJlcXVlc3QsIE5vZGVOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9iYXNlLWh0dHAvbm9kZVwiO1xuaW1wb3J0IHsgY2hlY2tJc0FwcFBQUkVuYWJsZWQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvZXhwZXJpbWVudGFsL3BwclwiO1xuaW1wb3J0IHsgZ2V0RmFsbGJhY2tSb3V0ZVBhcmFtcyB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JlcXVlc3QvZmFsbGJhY2stcGFyYW1zXCI7XG5pbXBvcnQgeyBzZXRSZWZlcmVuY2VNYW5pZmVzdHNTaW5nbGV0b24gfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2VuY3J5cHRpb24tdXRpbHNcIjtcbmltcG9ydCB7IGlzSHRtbEJvdFJlcXVlc3QsIHNob3VsZFNlcnZlU3RyZWFtaW5nTWV0YWRhdGEgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvc3RyZWFtaW5nLW1ldGFkYXRhXCI7XG5pbXBvcnQgeyBjcmVhdGVTZXJ2ZXJNb2R1bGVNYXAgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2FjdGlvbi11dGlsc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplQXBwUGF0aCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzXCI7XG5pbXBvcnQgeyBnZXRJc1Bvc3NpYmxlU2VydmVyQWN0aW9uIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3NlcnZlci1hY3Rpb24tcmVxdWVzdC1tZXRhXCI7XG5pbXBvcnQgeyBSU0NfSEVBREVSLCBORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVIsIE5FWFRfSVNfUFJFUkVOREVSX0hFQURFUiwgTkVYVF9ESURfUE9TVFBPTkVfSEVBREVSLCBSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzXCI7XG5pbXBvcnQgeyBnZXRCb3RUeXBlLCBpc0JvdCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtYm90XCI7XG5pbXBvcnQgeyBDYWNoZWRSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yZXNwb25zZS1jYWNoZVwiO1xuaW1wb3J0IHsgRmFsbGJhY2tNb2RlLCBwYXJzZUZhbGxiYWNrRmllbGQgfSBmcm9tIFwibmV4dC9kaXN0L2xpYi9mYWxsYmFja1wiO1xuaW1wb3J0IFJlbmRlclJlc3VsdCBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yZW5kZXItcmVzdWx0XCI7XG5pbXBvcnQgeyBDQUNIRV9PTkVfWUVBUiwgSFRNTF9DT05URU5UX1RZUEVfSEVBREVSLCBORVhUX0NBQ0hFX1RBR1NfSEVBREVSIH0gZnJvbSBcIm5leHQvZGlzdC9saWIvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBFTkNPREVEX1RBR1MgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9zdHJlYW0tdXRpbHMvZW5jb2RlZC10YWdzXCI7XG5pbXBvcnQgeyBzZW5kUmVuZGVyUmVzdWx0IH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvc2VuZC1wYXlsb2FkXCI7XG5pbXBvcnQgeyBOb0ZhbGxiYWNrRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L3NoYXJlZC9saWIvbm8tZmFsbGJhY2stZXJyb3IuZXh0ZXJuYWxcIjtcbi8vIFdlIGluamVjdCB0aGUgdHJlZSBhbmQgcGFnZXMgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IHRyZWUgPSB7XG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICcnLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbcGFnZTUsIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxhcHBcXFxccGFnZS50c3hcIl0sXG4gICAgICAgICAgXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbbW9kdWxlMCwgXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcc3JjXFxcXGFwcFxcXFxsYXlvdXQudHN4XCJdLFxuJ2dsb2JhbC1lcnJvcic6IFttb2R1bGUxLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9idWlsdGluL2dsb2JhbC1lcnJvci5qc1wiXSxcbidub3QtZm91bmQnOiBbbW9kdWxlMiwgXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYnVpbHRpbi9ub3QtZm91bmQuanNcIl0sXG4nZm9yYmlkZGVuJzogW21vZHVsZTMsIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZm9yYmlkZGVuLmpzXCJdLFxuJ3VuYXV0aG9yaXplZCc6IFttb2R1bGU0LCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9idWlsdGluL3VuYXV0aG9yaXplZC5qc1wiXSxcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcc3JjXFxcXGFwcFxcXFxwYWdlLnRzeFwiXTtcbmV4cG9ydCB7IHRyZWUsIHBhZ2VzIH07XG5pbXBvcnQgR2xvYmFsRXJyb3IgZnJvbSBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9idWlsdGluL2dsb2JhbC1lcnJvci5qc1wiIHdpdGgge1xuICAgICd0dXJib3BhY2stdHJhbnNpdGlvbic6ICduZXh0LXNlcnZlci11dGlsaXR5J1xufTtcbmV4cG9ydCB7IEdsb2JhbEVycm9yIH07XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmltcG9ydCAqIGFzIGVudHJ5QmFzZSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2VudHJ5LWJhc2VcIiB3aXRoIHtcbiAgICAndHVyYm9wYWNrLXRyYW5zaXRpb24nOiAnbmV4dC1zZXJ2ZXItdXRpbGl0eSdcbn07XG5pbXBvcnQgeyBSZWRpcmVjdFN0YXR1c0NvZGUgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LXN0YXR1cy1jb2RlXCI7XG5leHBvcnQgKiBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2VudHJ5LWJhc2VcIiB3aXRoIHtcbiAgICAndHVyYm9wYWNrLXRyYW5zaXRpb24nOiAnbmV4dC1zZXJ2ZXItdXRpbGl0eSdcbn07XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBQYWdlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9QQUdFLFxuICAgICAgICBwYWdlOiBcIi9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnLFxuICAgICAgICBhcHBQYXRoczogW11cbiAgICB9LFxuICAgIHVzZXJsYW5kOiB7XG4gICAgICAgIGxvYWRlclRyZWU6IHRyZWVcbiAgICB9LFxuICAgIGRpc3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9ESVNUX0RJUiB8fCAnJyxcbiAgICByZWxhdGl2ZVByb2plY3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9QUk9KRUNUX0RJUiB8fCAnJ1xufSk7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcywgY3R4KSB7XG4gICAgdmFyIF90aGlzO1xuICAgIGxldCBzcmNQYWdlID0gXCIvcGFnZVwiO1xuICAgIC8vIHR1cmJvcGFjayBkb2Vzbid0IG5vcm1hbGl6ZSBgL2luZGV4YCBpbiB0aGUgcGFnZSBuYW1lXG4gICAgLy8gc28gd2UgbmVlZCB0byB0byBwcm9jZXNzIGR5bmFtaWMgcm91dGVzIHByb3Blcmx5XG4gICAgLy8gVE9ETzogZml4IHR1cmJvcGFjayBwcm92aWRpbmcgZGlmZmVyaW5nIHZhbHVlIGZyb20gd2VicGFja1xuICAgIGlmIChwcm9jZXNzLmVudi5UVVJCT1BBQ0spIHtcbiAgICAgICAgc3JjUGFnZSA9IHNyY1BhZ2UucmVwbGFjZSgvXFwvaW5kZXgkLywgJycpIHx8ICcvJztcbiAgICB9IGVsc2UgaWYgKHNyY1BhZ2UgPT09ICcvaW5kZXgnKSB7XG4gICAgICAgIC8vIHdlIGFsd2F5cyBub3JtYWxpemUgL2luZGV4IHNwZWNpZmljYWxseVxuICAgICAgICBzcmNQYWdlID0gJy8nO1xuICAgIH1cbiAgICBjb25zdCBtdWx0aVpvbmVEcmFmdE1vZGUgPSBwcm9jZXNzLmVudi5fX05FWFRfTVVMVElfWk9ORV9EUkFGVF9NT0RFO1xuICAgIGNvbnN0IGluaXRpYWxQb3N0cG9uZWQgPSBnZXRSZXF1ZXN0TWV0YShyZXEsICdwb3N0cG9uZWQnKTtcbiAgICAvLyBUT0RPOiByZXBsYWNlIHdpdGggbW9yZSBzcGVjaWZpYyBmbGFnc1xuICAgIGNvbnN0IG1pbmltYWxNb2RlID0gZ2V0UmVxdWVzdE1ldGEocmVxLCAnbWluaW1hbE1vZGUnKTtcbiAgICBjb25zdCBwcmVwYXJlUmVzdWx0ID0gYXdhaXQgcm91dGVNb2R1bGUucHJlcGFyZShyZXEsIHJlcywge1xuICAgICAgICBzcmNQYWdlLFxuICAgICAgICBtdWx0aVpvbmVEcmFmdE1vZGVcbiAgICB9KTtcbiAgICBpZiAoIXByZXBhcmVSZXN1bHQpIHtcbiAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgICAgIHJlcy5lbmQoJ0JhZCBSZXF1ZXN0Jyk7XG4gICAgICAgIGN0eC53YWl0VW50aWwgPT0gbnVsbCA/IHZvaWQgMCA6IGN0eC53YWl0VW50aWwuY2FsbChjdHgsIFByb21pc2UucmVzb2x2ZSgpKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHsgYnVpbGRJZCwgcXVlcnksIHBhcmFtcywgcGFyc2VkVXJsLCBwYWdlSXNEeW5hbWljLCBidWlsZE1hbmlmZXN0LCBuZXh0Rm9udE1hbmlmZXN0LCByZWFjdExvYWRhYmxlTWFuaWZlc3QsIHNlcnZlckFjdGlvbnNNYW5pZmVzdCwgY2xpZW50UmVmZXJlbmNlTWFuaWZlc3QsIHN1YnJlc291cmNlSW50ZWdyaXR5TWFuaWZlc3QsIHByZXJlbmRlck1hbmlmZXN0LCBpc0RyYWZ0TW9kZSwgcmVzb2x2ZWRQYXRobmFtZSwgcmV2YWxpZGF0ZU9ubHlHZW5lcmF0ZWQsIHJvdXRlclNlcnZlckNvbnRleHQsIG5leHRDb25maWcsIGludGVyY2VwdGlvblJvdXRlUGF0dGVybnMgfSA9IHByZXBhcmVSZXN1bHQ7XG4gICAgY29uc3QgcGF0aG5hbWUgPSBwYXJzZWRVcmwucGF0aG5hbWUgfHwgJy8nO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRTcmNQYWdlID0gbm9ybWFsaXplQXBwUGF0aChzcmNQYWdlKTtcbiAgICBsZXQgeyBpc09uRGVtYW5kUmV2YWxpZGF0ZSB9ID0gcHJlcGFyZVJlc3VsdDtcbiAgICBjb25zdCBwcmVyZW5kZXJJbmZvID0gcm91dGVNb2R1bGUubWF0Y2gocGF0aG5hbWUsIHByZXJlbmRlck1hbmlmZXN0KTtcbiAgICBjb25zdCBpc1ByZXJlbmRlcmVkID0gISFwcmVyZW5kZXJNYW5pZmVzdC5yb3V0ZXNbcmVzb2x2ZWRQYXRobmFtZV07XG4gICAgbGV0IGlzU1NHID0gQm9vbGVhbihwcmVyZW5kZXJJbmZvIHx8IGlzUHJlcmVuZGVyZWQgfHwgcHJlcmVuZGVyTWFuaWZlc3Qucm91dGVzW25vcm1hbGl6ZWRTcmNQYWdlXSk7XG4gICAgY29uc3QgdXNlckFnZW50ID0gcmVxLmhlYWRlcnNbJ3VzZXItYWdlbnQnXSB8fCAnJztcbiAgICBjb25zdCBib3RUeXBlID0gZ2V0Qm90VHlwZSh1c2VyQWdlbnQpO1xuICAgIGNvbnN0IGlzSHRtbEJvdCA9IGlzSHRtbEJvdFJlcXVlc3QocmVxKTtcbiAgICAvKipcbiAgICogSWYgdHJ1ZSwgdGhpcyBpbmRpY2F0ZXMgdGhhdCB0aGUgcmVxdWVzdCBiZWluZyBtYWRlIGlzIGZvciBhbiBhcHBcbiAgICogcHJlZmV0Y2ggcmVxdWVzdC5cbiAgICovIGNvbnN0IGlzUHJlZmV0Y2hSU0NSZXF1ZXN0ID0gZ2V0UmVxdWVzdE1ldGEocmVxLCAnaXNQcmVmZXRjaFJTQ1JlcXVlc3QnKSA/PyByZXEuaGVhZGVyc1tORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVJdID09PSAnMScgLy8gZXhjbHVkZSBydW50aW1lIHByZWZldGNoZXMsIHdoaWNoIHVzZSAnMidcbiAgICA7XG4gICAgLy8gTk9URTogRG9uJ3QgZGVsZXRlIGhlYWRlcnNbUlNDXSB5ZXQsIGl0IHN0aWxsIG5lZWRzIHRvIGJlIHVzZWQgaW4gcmVuZGVyVG9IVE1MIGxhdGVyXG4gICAgY29uc3QgaXNSU0NSZXF1ZXN0ID0gZ2V0UmVxdWVzdE1ldGEocmVxLCAnaXNSU0NSZXF1ZXN0JykgPz8gQm9vbGVhbihyZXEuaGVhZGVyc1tSU0NfSEVBREVSXSk7XG4gICAgY29uc3QgaXNQb3NzaWJsZVNlcnZlckFjdGlvbiA9IGdldElzUG9zc2libGVTZXJ2ZXJBY3Rpb24ocmVxKTtcbiAgICAvKipcbiAgICogSWYgdGhlIHJvdXRlIGJlaW5nIHJlbmRlcmVkIGlzIGFuIGFwcCBwYWdlLCBhbmQgdGhlIHBwciBmZWF0dXJlIGhhcyBiZWVuXG4gICAqIGVuYWJsZWQsIHRoZW4gdGhlIGdpdmVuIHJvdXRlIF9jb3VsZF8gc3VwcG9ydCBQUFIuXG4gICAqLyBjb25zdCBjb3VsZFN1cHBvcnRQUFIgPSBjaGVja0lzQXBwUFBSRW5hYmxlZChuZXh0Q29uZmlnLmV4cGVyaW1lbnRhbC5wcHIpO1xuICAgIC8vIFdoZW4gZW5hYmxlZCwgdGhpcyB3aWxsIGFsbG93IHRoZSB1c2Ugb2YgdGhlIGA/X19uZXh0cHByb25seWAgcXVlcnkgdG9cbiAgICAvLyBlbmFibGUgZGVidWdnaW5nIG9mIHRoZSBzdGF0aWMgc2hlbGwuXG4gICAgY29uc3QgaGFzRGVidWdTdGF0aWNTaGVsbFF1ZXJ5ID0gcHJvY2Vzcy5lbnYuX19ORVhUX0VYUEVSSU1FTlRBTF9TVEFUSUNfU0hFTExfREVCVUdHSU5HID09PSAnMScgJiYgdHlwZW9mIHF1ZXJ5Ll9fbmV4dHBwcm9ubHkgIT09ICd1bmRlZmluZWQnICYmIGNvdWxkU3VwcG9ydFBQUjtcbiAgICAvLyBXaGVuIGVuYWJsZWQsIHRoaXMgd2lsbCBhbGxvdyB0aGUgdXNlIG9mIHRoZSBgP19fbmV4dHBwcm9ubHlgIHF1ZXJ5XG4gICAgLy8gdG8gZW5hYmxlIGRlYnVnZ2luZyBvZiB0aGUgZmFsbGJhY2sgc2hlbGwuXG4gICAgY29uc3QgaGFzRGVidWdGYWxsYmFja1NoZWxsUXVlcnkgPSBoYXNEZWJ1Z1N0YXRpY1NoZWxsUXVlcnkgJiYgcXVlcnkuX19uZXh0cHByb25seSA9PT0gJ2ZhbGxiYWNrJztcbiAgICAvLyBUaGlzIHBhZ2Ugc3VwcG9ydHMgUFBSIGlmIGl0IGlzIG1hcmtlZCBhcyBiZWluZyBgUEFSVElBTExZX1NUQVRJQ2AgaW4gdGhlXG4gICAgLy8gcHJlcmVuZGVyIG1hbmlmZXN0IGFuZCB0aGlzIGlzIGFuIGFwcCBwYWdlLlxuICAgIGNvbnN0IGlzUm91dGVQUFJFbmFibGVkID0gY291bGRTdXBwb3J0UFBSICYmICgoKF90aGlzID0gcHJlcmVuZGVyTWFuaWZlc3Qucm91dGVzW25vcm1hbGl6ZWRTcmNQYWdlXSA/PyBwcmVyZW5kZXJNYW5pZmVzdC5keW5hbWljUm91dGVzW25vcm1hbGl6ZWRTcmNQYWdlXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzLnJlbmRlcmluZ01vZGUpID09PSAnUEFSVElBTExZX1NUQVRJQycgfHwgLy8gSWRlYWxseSB3ZSdkIHdhbnQgdG8gY2hlY2sgdGhlIGFwcENvbmZpZyB0byBzZWUgaWYgdGhpcyBwYWdlIGhhcyBQUFJcbiAgICAvLyBlbmFibGVkIG9yIG5vdCwgYnV0IHRoYXQgd291bGQgcmVxdWlyZSBwbHVtYmluZyB0aGUgYXBwQ29uZmlnIHRocm91Z2hcbiAgICAvLyB0byB0aGUgc2VydmVyIGR1cmluZyBkZXZlbG9wbWVudC4gV2UgYXNzdW1lIHRoYXQgdGhlIHBhZ2Ugc3VwcG9ydHMgaXRcbiAgICAvLyBidXQgb25seSBkdXJpbmcgZGV2ZWxvcG1lbnQuXG4gICAgaGFzRGVidWdTdGF0aWNTaGVsbFF1ZXJ5ICYmIChyb3V0ZU1vZHVsZS5pc0RldiA9PT0gdHJ1ZSB8fCAocm91dGVyU2VydmVyQ29udGV4dCA9PSBudWxsID8gdm9pZCAwIDogcm91dGVyU2VydmVyQ29udGV4dC5leHBlcmltZW50YWxUZXN0UHJveHkpID09PSB0cnVlKSk7XG4gICAgY29uc3QgaXNEZWJ1Z1N0YXRpY1NoZWxsID0gaGFzRGVidWdTdGF0aWNTaGVsbFF1ZXJ5ICYmIGlzUm91dGVQUFJFbmFibGVkO1xuICAgIC8vIFdlIHNob3VsZCBlbmFibGUgZGVidWdnaW5nIGR5bmFtaWMgYWNjZXNzZXMgd2hlbiB0aGUgc3RhdGljIHNoZWxsXG4gICAgLy8gZGVidWdnaW5nIGhhcyBiZWVuIGVuYWJsZWQgYW5kIHdlJ3JlIGFsc28gaW4gZGV2ZWxvcG1lbnQgbW9kZS5cbiAgICBjb25zdCBpc0RlYnVnRHluYW1pY0FjY2Vzc2VzID0gaXNEZWJ1Z1N0YXRpY1NoZWxsICYmIHJvdXRlTW9kdWxlLmlzRGV2ID09PSB0cnVlO1xuICAgIGNvbnN0IGlzRGVidWdGYWxsYmFja1NoZWxsID0gaGFzRGVidWdGYWxsYmFja1NoZWxsUXVlcnkgJiYgaXNSb3V0ZVBQUkVuYWJsZWQ7XG4gICAgLy8gSWYgd2UncmUgaW4gbWluaW1hbCBtb2RlLCB0aGVuIHRyeSB0byBnZXQgdGhlIHBvc3Rwb25lZCBpbmZvcm1hdGlvbiBmcm9tXG4gICAgLy8gdGhlIHJlcXVlc3QgbWV0YWRhdGEuIElmIGF2YWlsYWJsZSwgdXNlIGl0IGZvciByZXN1bWluZyB0aGUgcG9zdHBvbmVkXG4gICAgLy8gcmVuZGVyLlxuICAgIGNvbnN0IG1pbmltYWxQb3N0cG9uZWQgPSBpc1JvdXRlUFBSRW5hYmxlZCA/IGluaXRpYWxQb3N0cG9uZWQgOiB1bmRlZmluZWQ7XG4gICAgLy8gSWYgUFBSIGlzIGVuYWJsZWQsIGFuZCB0aGlzIGlzIGEgUlNDIHJlcXVlc3QgKGJ1dCBub3QgYSBwcmVmZXRjaCksIHRoZW5cbiAgICAvLyB3ZSBjYW4gdXNlIHRoaXMgZmFjdCB0byBvbmx5IGdlbmVyYXRlIHRoZSBmbGlnaHQgZGF0YSBmb3IgdGhlIHJlcXVlc3RcbiAgICAvLyBiZWNhdXNlIHdlIGNhbid0IGNhY2hlIHRoZSBIVE1MIChhcyBpdCdzIGFsc28gZHluYW1pYykuXG4gICAgY29uc3QgaXNEeW5hbWljUlNDUmVxdWVzdCA9IGlzUm91dGVQUFJFbmFibGVkICYmIGlzUlNDUmVxdWVzdCAmJiAhaXNQcmVmZXRjaFJTQ1JlcXVlc3Q7XG4gICAgLy8gTmVlZCB0byByZWFkIHRoaXMgYmVmb3JlIGl0J3Mgc3RyaXBwZWQgYnkgc3RyaXBGbGlnaHRIZWFkZXJzLiBXZSBkb24ndFxuICAgIC8vIG5lZWQgdG8gdHJhbnNmZXIgaXQgdG8gdGhlIHJlcXVlc3QgbWV0YSBiZWNhdXNlIGl0J3Mgb25seSByZWFkXG4gICAgLy8gd2l0aGluIHRoaXMgZnVuY3Rpb247IHRoZSBzdGF0aWMgc2VnbWVudCBkYXRhIHNob3VsZCBoYXZlIGFscmVhZHkgYmVlblxuICAgIC8vIGdlbmVyYXRlZCwgc28gd2Ugd2lsbCBhbHdheXMgZWl0aGVyIHJldHVybiBhIHN0YXRpYyByZXNwb25zZSBvciBhIDQwNC5cbiAgICBjb25zdCBzZWdtZW50UHJlZmV0Y2hIZWFkZXIgPSBnZXRSZXF1ZXN0TWV0YShyZXEsICdzZWdtZW50UHJlZmV0Y2hSU0NSZXF1ZXN0Jyk7XG4gICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgZXhpc3RpbmcgYnVnIHdpdGggc2hvdWxkU2VydmVTdHJlYW1pbmdNZXRhZGF0YSBhbHdheXNcbiAgICAvLyBiZWluZyB0cnVlIGZvciBhIHJldmFsaWRhdGUgZHVlIHRvIG1vZGlmeWluZyB0aGUgYmFzZS1zZXJ2ZXIgdGhpcy5yZW5kZXJPcHRzXG4gICAgLy8gd2hlbiBmaXhpbmcgdGhpcyB0byBjb3JyZWN0IGxvZ2ljIGl0IGNhdXNlcyBoeWRyYXRpb24gaXNzdWUgc2luY2Ugd2Ugc2V0XG4gICAgLy8gc2VydmVTdHJlYW1pbmdNZXRhZGF0YSB0byB0cnVlIGR1cmluZyBleHBvcnRcbiAgICBsZXQgc2VydmVTdHJlYW1pbmdNZXRhZGF0YSA9ICF1c2VyQWdlbnQgPyB0cnVlIDogc2hvdWxkU2VydmVTdHJlYW1pbmdNZXRhZGF0YSh1c2VyQWdlbnQsIG5leHRDb25maWcuaHRtbExpbWl0ZWRCb3RzKTtcbiAgICBpZiAoaXNIdG1sQm90ICYmIGlzUm91dGVQUFJFbmFibGVkKSB7XG4gICAgICAgIGlzU1NHID0gZmFsc2U7XG4gICAgICAgIHNlcnZlU3RyZWFtaW5nTWV0YWRhdGEgPSBmYWxzZTtcbiAgICB9XG4gICAgLy8gSW4gZGV2ZWxvcG1lbnQsIHdlIGFsd2F5cyB3YW50IHRvIGdlbmVyYXRlIGR5bmFtaWMgSFRNTC5cbiAgICBsZXQgc3VwcG9ydHNEeW5hbWljUmVzcG9uc2UgPSAvLyBJZiB3ZSdyZSBpbiBkZXZlbG9wbWVudCwgd2UgYWx3YXlzIHN1cHBvcnQgZHluYW1pYyBIVE1MLCB1bmxlc3MgaXQnc1xuICAgIC8vIGEgZGF0YSByZXF1ZXN0LCBpbiB3aGljaCBjYXNlIHdlIG9ubHkgcHJvZHVjZSBzdGF0aWMgSFRNTC5cbiAgICByb3V0ZU1vZHVsZS5pc0RldiA9PT0gdHJ1ZSB8fCAvLyBJZiB0aGlzIGlzIG5vdCBTU0cgb3IgZG9lcyBub3QgaGF2ZSBzdGF0aWMgcGF0aHMsIHRoZW4gaXQgc3VwcG9ydHNcbiAgICAvLyBkeW5hbWljIEhUTUwuXG4gICAgIWlzU1NHIHx8IC8vIElmIHRoaXMgcmVxdWVzdCBoYXMgcHJvdmlkZWQgcG9zdHBvbmVkIGRhdGEsIGl0IHN1cHBvcnRzIGR5bmFtaWNcbiAgICAvLyBIVE1MLlxuICAgIHR5cGVvZiBpbml0aWFsUG9zdHBvbmVkID09PSAnc3RyaW5nJyB8fCAvLyBJZiB0aGlzIGlzIGEgZHluYW1pYyBSU0MgcmVxdWVzdCwgdGhlbiB0aGlzIHJlbmRlciBzdXBwb3J0cyBkeW5hbWljXG4gICAgLy8gSFRNTCAoaXQncyBkeW5hbWljKS5cbiAgICBpc0R5bmFtaWNSU0NSZXF1ZXN0O1xuICAgIC8vIFdoZW4gaHRtbCBib3RzIHJlcXVlc3QgUFBSIHBhZ2UsIHBlcmZvcm0gdGhlIGZ1bGwgZHluYW1pYyByZW5kZXJpbmcuXG4gICAgY29uc3Qgc2hvdWxkV2FpdE9uQWxsUmVhZHkgPSBpc0h0bWxCb3QgJiYgaXNSb3V0ZVBQUkVuYWJsZWQ7XG4gICAgbGV0IHNzZ0NhY2hlS2V5ID0gbnVsbDtcbiAgICBpZiAoIWlzRHJhZnRNb2RlICYmIGlzU1NHICYmICFzdXBwb3J0c0R5bmFtaWNSZXNwb25zZSAmJiAhaXNQb3NzaWJsZVNlcnZlckFjdGlvbiAmJiAhbWluaW1hbFBvc3Rwb25lZCAmJiAhaXNEeW5hbWljUlNDUmVxdWVzdCkge1xuICAgICAgICBzc2dDYWNoZUtleSA9IHJlc29sdmVkUGF0aG5hbWU7XG4gICAgfVxuICAgIC8vIHRoZSBzdGF0aWNQYXRoS2V5IGRpZmZlcnMgZnJvbSBzc2dDYWNoZUtleSBzaW5jZVxuICAgIC8vIHNzZ0NhY2hlS2V5IGlzIG51bGwgaW4gZGV2IHNpbmNlIHdlJ3JlIGFsd2F5cyBpbiBcImR5bmFtaWNcIlxuICAgIC8vIG1vZGUgaW4gZGV2IHRvIGJ5cGFzcyB0aGUgY2FjaGUsIGJ1dCB3ZSBzdGlsbCBuZWVkIHRvIGhvbm9yXG4gICAgLy8gZHluYW1pY1BhcmFtcyA9IGZhbHNlIGluIGRldiBtb2RlXG4gICAgbGV0IHN0YXRpY1BhdGhLZXkgPSBzc2dDYWNoZUtleTtcbiAgICBpZiAoIXN0YXRpY1BhdGhLZXkgJiYgcm91dGVNb2R1bGUuaXNEZXYpIHtcbiAgICAgICAgc3RhdGljUGF0aEtleSA9IHJlc29sdmVkUGF0aG5hbWU7XG4gICAgfVxuICAgIC8vIElmIHRoaXMgaXMgYSByZXF1ZXN0IGZvciBhbiBhcHAgcGF0aCB0aGF0IHNob3VsZCBiZSBzdGF0aWNhbGx5IGdlbmVyYXRlZFxuICAgIC8vIGFuZCB3ZSBhcmVuJ3QgaW4gdGhlIGVkZ2UgcnVudGltZSwgc3RyaXAgdGhlIGZsaWdodCBoZWFkZXJzIHNvIGl0IHdpbGxcbiAgICAvLyBnZW5lcmF0ZSB0aGUgc3RhdGljIHJlc3BvbnNlLlxuICAgIGlmICghcm91dGVNb2R1bGUuaXNEZXYgJiYgIWlzRHJhZnRNb2RlICYmIGlzU1NHICYmIGlzUlNDUmVxdWVzdCAmJiAhaXNEeW5hbWljUlNDUmVxdWVzdCkge1xuICAgICAgICBzdHJpcEZsaWdodEhlYWRlcnMocmVxLmhlYWRlcnMpO1xuICAgIH1cbiAgICBjb25zdCBDb21wb25lbnRNb2QgPSB7XG4gICAgICAgIC4uLmVudHJ5QmFzZSxcbiAgICAgICAgdHJlZSxcbiAgICAgICAgcGFnZXMsXG4gICAgICAgIEdsb2JhbEVycm9yLFxuICAgICAgICBoYW5kbGVyLFxuICAgICAgICByb3V0ZU1vZHVsZSxcbiAgICAgICAgX19uZXh0X2FwcF9fXG4gICAgfTtcbiAgICAvLyBCZWZvcmUgcmVuZGVyaW5nICh3aGljaCBpbml0aWFsaXplcyBjb21wb25lbnQgdHJlZSBtb2R1bGVzKSwgd2UgaGF2ZSB0b1xuICAgIC8vIHNldCB0aGUgcmVmZXJlbmNlIG1hbmlmZXN0cyB0byBvdXIgZ2xvYmFsIHN0b3JlIHNvIFNlcnZlciBBY3Rpb24nc1xuICAgIC8vIGVuY3J5cHRpb24gdXRpbCBjYW4gYWNjZXNzIHRvIHRoZW0gYXQgdGhlIHRvcCBsZXZlbCBvZiB0aGUgcGFnZSBtb2R1bGUuXG4gICAgaWYgKHNlcnZlckFjdGlvbnNNYW5pZmVzdCAmJiBjbGllbnRSZWZlcmVuY2VNYW5pZmVzdCkge1xuICAgICAgICBzZXRSZWZlcmVuY2VNYW5pZmVzdHNTaW5nbGV0b24oe1xuICAgICAgICAgICAgcGFnZTogc3JjUGFnZSxcbiAgICAgICAgICAgIGNsaWVudFJlZmVyZW5jZU1hbmlmZXN0LFxuICAgICAgICAgICAgc2VydmVyQWN0aW9uc01hbmlmZXN0LFxuICAgICAgICAgICAgc2VydmVyTW9kdWxlTWFwOiBjcmVhdGVTZXJ2ZXJNb2R1bGVNYXAoe1xuICAgICAgICAgICAgICAgIHNlcnZlckFjdGlvbnNNYW5pZmVzdFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IG1ldGhvZCA9IHJlcS5tZXRob2QgfHwgJ0dFVCc7XG4gICAgY29uc3QgdHJhY2VyID0gZ2V0VHJhY2VyKCk7XG4gICAgY29uc3QgYWN0aXZlU3BhbiA9IHRyYWNlci5nZXRBY3RpdmVTY29wZVNwYW4oKTtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB2YXJ5SGVhZGVyID0gcm91dGVNb2R1bGUuZ2V0VmFyeUhlYWRlcihyZXNvbHZlZFBhdGhuYW1lLCBpbnRlcmNlcHRpb25Sb3V0ZVBhdHRlcm5zKTtcbiAgICAgICAgcmVzLnNldEhlYWRlcignVmFyeScsIHZhcnlIZWFkZXIpO1xuICAgICAgICBjb25zdCBpbnZva2VSb3V0ZU1vZHVsZSA9IGFzeW5jIChzcGFuLCBjb250ZXh0KT0+e1xuICAgICAgICAgICAgY29uc3QgbmV4dFJlcSA9IG5ldyBOb2RlTmV4dFJlcXVlc3QocmVxKTtcbiAgICAgICAgICAgIGNvbnN0IG5leHRSZXMgPSBuZXcgTm9kZU5leHRSZXNwb25zZShyZXMpO1xuICAgICAgICAgICAgLy8gVE9ETzogYWRhcHQgZm9yIHB1dHRpbmcgdGhlIFJEQyBpbnNpZGUgdGhlIHBvc3Rwb25lZCBkYXRhXG4gICAgICAgICAgICAvLyBJZiB3ZSdyZSBpbiBkZXYsIGFuZCB0aGlzIGlzbid0IGEgcHJlZmV0Y2ggb3IgYSBzZXJ2ZXIgYWN0aW9uLFxuICAgICAgICAgICAgLy8gd2Ugc2hvdWxkIHNlZWQgdGhlIHJlc3VtZSBkYXRhIGNhY2hlLlxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5leHRDb25maWcuZXhwZXJpbWVudGFsLmNhY2hlQ29tcG9uZW50cyAmJiAhaXNQcmVmZXRjaFJTQ1JlcXVlc3QgJiYgIWNvbnRleHQucmVuZGVyT3B0cy5pc1Bvc3NpYmxlU2VydmVyQWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHdhcm11cCA9IGF3YWl0IHJvdXRlTW9kdWxlLndhcm11cChuZXh0UmVxLCBuZXh0UmVzLCBjb250ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIHdhcm11cCBpcyBzdWNjZXNzZnVsLCB3ZSBzaG91bGQgdXNlIHRoZSByZXN1bWUgZGF0YVxuICAgICAgICAgICAgICAgICAgICAvLyBjYWNoZSBmcm9tIHRoZSB3YXJtdXAuXG4gICAgICAgICAgICAgICAgICAgIGlmICh3YXJtdXAubWV0YWRhdGEucmVuZGVyUmVzdW1lRGF0YUNhY2hlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnJlbmRlck9wdHMucmVuZGVyUmVzdW1lRGF0YUNhY2hlID0gd2FybXVwLm1ldGFkYXRhLnJlbmRlclJlc3VtZURhdGFDYWNoZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByb3V0ZU1vZHVsZS5yZW5kZXIobmV4dFJlcSwgbmV4dFJlcywgY29udGV4dCkuZmluYWxseSgoKT0+e1xuICAgICAgICAgICAgICAgIGlmICghc3BhbikgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICAgICAgICAgICdodHRwLnN0YXR1c19jb2RlJzogcmVzLnN0YXR1c0NvZGUsXG4gICAgICAgICAgICAgICAgICAgICduZXh0LnJzYyc6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc3Qgcm9vdFNwYW5BdHRyaWJ1dGVzID0gdHJhY2VyLmdldFJvb3RTcGFuQXR0cmlidXRlcygpO1xuICAgICAgICAgICAgICAgIC8vIFdlIHdlcmUgdW5hYmxlIHRvIGdldCBhdHRyaWJ1dGVzLCBwcm9iYWJseSBPVEVMIGlzIG5vdCBlbmFibGVkXG4gICAgICAgICAgICAgICAgaWYgKCFyb290U3BhbkF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocm9vdFNwYW5BdHRyaWJ1dGVzLmdldCgnbmV4dC5zcGFuX3R5cGUnKSAhPT0gQmFzZVNlcnZlclNwYW4uaGFuZGxlUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYFVuZXhwZWN0ZWQgcm9vdCBzcGFuIHR5cGUgJyR7cm9vdFNwYW5BdHRyaWJ1dGVzLmdldCgnbmV4dC5zcGFuX3R5cGUnKX0nLiBQbGVhc2UgcmVwb3J0IHRoaXMgTmV4dC5qcyBpc3N1ZSBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanNgKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCByb3V0ZSA9IHJvb3RTcGFuQXR0cmlidXRlcy5nZXQoJ25leHQucm91dGUnKTtcbiAgICAgICAgICAgICAgICBpZiAocm91dGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGAke21ldGhvZH0gJHtyb3V0ZX1gO1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgJ25leHQucm91dGUnOiByb3V0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwLnJvdXRlJzogcm91dGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAnbmV4dC5zcGFuX25hbWUnOiBuYW1lXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnVwZGF0ZU5hbWUobmFtZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi51cGRhdGVOYW1lKGAke21ldGhvZH0gJHtyZXEudXJsfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBkb1JlbmRlciA9IGFzeW5jICh7IHNwYW4sIHBvc3Rwb25lZCwgZmFsbGJhY2tSb3V0ZVBhcmFtcyB9KT0+e1xuICAgICAgICAgICAgY29uc3QgY29udGV4dCA9IHtcbiAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgICAgICAgcGFnZTogbm9ybWFsaXplZFNyY1BhZ2UsXG4gICAgICAgICAgICAgICAgc2hhcmVkQ29udGV4dDoge1xuICAgICAgICAgICAgICAgICAgICBidWlsZElkXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZXJ2ZXJDb21wb25lbnRzSG1yQ2FjaGU6IGdldFJlcXVlc3RNZXRhKHJlcSwgJ3NlcnZlckNvbXBvbmVudHNIbXJDYWNoZScpLFxuICAgICAgICAgICAgICAgIGZhbGxiYWNrUm91dGVQYXJhbXMsXG4gICAgICAgICAgICAgICAgcmVuZGVyT3B0czoge1xuICAgICAgICAgICAgICAgICAgICBBcHA6ICgpPT5udWxsLFxuICAgICAgICAgICAgICAgICAgICBEb2N1bWVudDogKCk9Pm51bGwsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VDb25maWc6IHt9LFxuICAgICAgICAgICAgICAgICAgICBDb21wb25lbnRNb2QsXG4gICAgICAgICAgICAgICAgICAgIENvbXBvbmVudDogaW50ZXJvcERlZmF1bHQoQ29tcG9uZW50TW9kKSxcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZU1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgcGFnZTogc3JjUGFnZSxcbiAgICAgICAgICAgICAgICAgICAgcG9zdHBvbmVkLFxuICAgICAgICAgICAgICAgICAgICBzaG91bGRXYWl0T25BbGxSZWFkeSxcbiAgICAgICAgICAgICAgICAgICAgc2VydmVTdHJlYW1pbmdNZXRhZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3VwcG9ydHNEeW5hbWljUmVzcG9uc2U6IHR5cGVvZiBwb3N0cG9uZWQgPT09ICdzdHJpbmcnIHx8IHN1cHBvcnRzRHluYW1pY1Jlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICBidWlsZE1hbmlmZXN0LFxuICAgICAgICAgICAgICAgICAgICBuZXh0Rm9udE1hbmlmZXN0LFxuICAgICAgICAgICAgICAgICAgICByZWFjdExvYWRhYmxlTWFuaWZlc3QsXG4gICAgICAgICAgICAgICAgICAgIHN1YnJlc291cmNlSW50ZWdyaXR5TWFuaWZlc3QsXG4gICAgICAgICAgICAgICAgICAgIHNlcnZlckFjdGlvbnNNYW5pZmVzdCxcbiAgICAgICAgICAgICAgICAgICAgY2xpZW50UmVmZXJlbmNlTWFuaWZlc3QsXG4gICAgICAgICAgICAgICAgICAgIHNldElzclN0YXR1czogcm91dGVyU2VydmVyQ29udGV4dCA9PSBudWxsID8gdm9pZCAwIDogcm91dGVyU2VydmVyQ29udGV4dC5zZXRJc3JTdGF0dXMsXG4gICAgICAgICAgICAgICAgICAgIGRpcjogcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FID09PSAnbm9kZWpzJyA/IHJlcXVpcmUoJ3BhdGgnKS5qb2luKC8qIHR1cmJvcGFja0lnbm9yZTogdHJ1ZSAqLyBwcm9jZXNzLmN3ZCgpLCByb3V0ZU1vZHVsZS5yZWxhdGl2ZVByb2plY3REaXIpIDogYCR7cHJvY2Vzcy5jd2QoKX0vJHtyb3V0ZU1vZHVsZS5yZWxhdGl2ZVByb2plY3REaXJ9YCxcbiAgICAgICAgICAgICAgICAgICAgaXNEcmFmdE1vZGUsXG4gICAgICAgICAgICAgICAgICAgIGlzUmV2YWxpZGF0ZTogaXNTU0cgJiYgIXBvc3Rwb25lZCAmJiAhaXNEeW5hbWljUlNDUmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgYm90VHlwZSxcbiAgICAgICAgICAgICAgICAgICAgaXNPbkRlbWFuZFJldmFsaWRhdGUsXG4gICAgICAgICAgICAgICAgICAgIGlzUG9zc2libGVTZXJ2ZXJBY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgIGFzc2V0UHJlZml4OiBuZXh0Q29uZmlnLmFzc2V0UHJlZml4LFxuICAgICAgICAgICAgICAgICAgICBuZXh0Q29uZmlnT3V0cHV0OiBuZXh0Q29uZmlnLm91dHB1dCxcbiAgICAgICAgICAgICAgICAgICAgY3Jvc3NPcmlnaW46IG5leHRDb25maWcuY3Jvc3NPcmlnaW4sXG4gICAgICAgICAgICAgICAgICAgIHRyYWlsaW5nU2xhc2g6IG5leHRDb25maWcudHJhaWxpbmdTbGFzaCxcbiAgICAgICAgICAgICAgICAgICAgcHJldmlld1Byb3BzOiBwcmVyZW5kZXJNYW5pZmVzdC5wcmV2aWV3LFxuICAgICAgICAgICAgICAgICAgICBkZXBsb3ltZW50SWQ6IG5leHRDb25maWcuZGVwbG95bWVudElkLFxuICAgICAgICAgICAgICAgICAgICBlbmFibGVUYWludGluZzogbmV4dENvbmZpZy5leHBlcmltZW50YWwudGFpbnQsXG4gICAgICAgICAgICAgICAgICAgIGh0bWxMaW1pdGVkQm90czogbmV4dENvbmZpZy5odG1sTGltaXRlZEJvdHMsXG4gICAgICAgICAgICAgICAgICAgIGRldnRvb2xTZWdtZW50RXhwbG9yZXI6IG5leHRDb25maWcuZXhwZXJpbWVudGFsLmRldnRvb2xTZWdtZW50RXhwbG9yZXIsXG4gICAgICAgICAgICAgICAgICAgIHJlYWN0TWF4SGVhZGVyc0xlbmd0aDogbmV4dENvbmZpZy5yZWFjdE1heEhlYWRlcnNMZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgIG11bHRpWm9uZURyYWZ0TW9kZSxcbiAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50YWxDYWNoZTogZ2V0UmVxdWVzdE1ldGEocmVxLCAnaW5jcmVtZW50YWxDYWNoZScpLFxuICAgICAgICAgICAgICAgICAgICBjYWNoZUxpZmVQcm9maWxlczogbmV4dENvbmZpZy5leHBlcmltZW50YWwuY2FjaGVMaWZlLFxuICAgICAgICAgICAgICAgICAgICBiYXNlUGF0aDogbmV4dENvbmZpZy5iYXNlUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgc2VydmVyQWN0aW9uczogbmV4dENvbmZpZy5leHBlcmltZW50YWwuc2VydmVyQWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgLi4uaXNEZWJ1Z1N0YXRpY1NoZWxsIHx8IGlzRGVidWdEeW5hbWljQWNjZXNzZXMgPyB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0RXhwb3J0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VwcG9ydHNEeW5hbWljUmVzcG9uc2U6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNTdGF0aWNHZW5lcmF0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNSZXZhbGlkYXRlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNEZWJ1Z0R5bmFtaWNBY2Nlc3NlczogaXNEZWJ1Z0R5bmFtaWNBY2Nlc3Nlc1xuICAgICAgICAgICAgICAgICAgICB9IDoge30sXG4gICAgICAgICAgICAgICAgICAgIGV4cGVyaW1lbnRhbDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNSb3V0ZVBQUkVuYWJsZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBpcmVUaW1lOiBuZXh0Q29uZmlnLmV4cGlyZVRpbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFsZVRpbWVzOiBuZXh0Q29uZmlnLmV4cGVyaW1lbnRhbC5zdGFsZVRpbWVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVDb21wb25lbnRzOiBCb29sZWFuKG5leHRDb25maWcuZXhwZXJpbWVudGFsLmNhY2hlQ29tcG9uZW50cyksXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRTZWdtZW50Q2FjaGU6IEJvb2xlYW4obmV4dENvbmZpZy5leHBlcmltZW50YWwuY2xpZW50U2VnbWVudENhY2hlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudFBhcmFtUGFyc2luZzogQm9vbGVhbihuZXh0Q29uZmlnLmV4cGVyaW1lbnRhbC5jbGllbnRQYXJhbVBhcnNpbmcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZHluYW1pY09uSG92ZXI6IEJvb2xlYW4obmV4dENvbmZpZy5leHBlcmltZW50YWwuZHluYW1pY09uSG92ZXIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5saW5lQ3NzOiBCb29sZWFuKG5leHRDb25maWcuZXhwZXJpbWVudGFsLmlubGluZUNzcyksXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRoSW50ZXJydXB0czogQm9vbGVhbihuZXh0Q29uZmlnLmV4cGVyaW1lbnRhbC5hdXRoSW50ZXJydXB0cyksXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRUcmFjZU1ldGFkYXRhOiBuZXh0Q29uZmlnLmV4cGVyaW1lbnRhbC5jbGllbnRUcmFjZU1ldGFkYXRhIHx8IFtdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHdhaXRVbnRpbDogY3R4LndhaXRVbnRpbCxcbiAgICAgICAgICAgICAgICAgICAgb25DbG9zZTogKGNiKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLm9uKCdjbG9zZScsIGNiKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25BZnRlclRhc2tFcnJvcjogKCk9Pnt9LFxuICAgICAgICAgICAgICAgICAgICBvbkluc3RydW1lbnRhdGlvblJlcXVlc3RFcnJvcjogKGVycm9yLCBfcmVxdWVzdCwgZXJyb3JDb250ZXh0KT0+cm91dGVNb2R1bGUub25SZXF1ZXN0RXJyb3IocmVxLCBlcnJvciwgZXJyb3JDb250ZXh0LCByb3V0ZXJTZXJ2ZXJDb250ZXh0KSxcbiAgICAgICAgICAgICAgICAgICAgZXJyOiBnZXRSZXF1ZXN0TWV0YShyZXEsICdpbnZva2VFcnJvcicpLFxuICAgICAgICAgICAgICAgICAgICBkZXY6IHJvdXRlTW9kdWxlLmlzRGV2XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGludm9rZVJvdXRlTW9kdWxlKHNwYW4sIGNvbnRleHQpO1xuICAgICAgICAgICAgY29uc3QgeyBtZXRhZGF0YSB9ID0gcmVzdWx0O1xuICAgICAgICAgICAgY29uc3QgeyBjYWNoZUNvbnRyb2wsIGhlYWRlcnMgPSB7fSwgLy8gQWRkIGFueSBmZXRjaCB0YWdzIHRoYXQgd2VyZSBvbiB0aGUgcGFnZSB0byB0aGUgcmVzcG9uc2UgaGVhZGVycy5cbiAgICAgICAgICAgIGZldGNoVGFnczogY2FjaGVUYWdzIH0gPSBtZXRhZGF0YTtcbiAgICAgICAgICAgIGlmIChjYWNoZVRhZ3MpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzW05FWFRfQ0FDSEVfVEFHU19IRUFERVJdID0gY2FjaGVUYWdzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUHVsbCBhbnkgZmV0Y2ggbWV0cmljcyBmcm9tIHRoZSByZW5kZXIgb250byB0aGUgcmVxdWVzdC5cbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIHJlcS5mZXRjaE1ldHJpY3MgPSBtZXRhZGF0YS5mZXRjaE1ldHJpY3M7XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCB0aHJvdyBzdGF0aWMgdG8gZHluYW1pYyBlcnJvcnMgaW4gZGV2IGFzIGlzU1NHXG4gICAgICAgICAgICAvLyBpcyBhIGJlc3QgZ3Vlc3MgaW4gZGV2IHNpbmNlIHdlIGRvbid0IGhhdmUgdGhlIHByZXJlbmRlciBwYXNzXG4gICAgICAgICAgICAvLyB0byBrbm93IHdoZXRoZXIgdGhlIHBhdGggaXMgYWN0dWFsbHkgc3RhdGljIG9yIG5vdFxuICAgICAgICAgICAgaWYgKGlzU1NHICYmIChjYWNoZUNvbnRyb2wgPT0gbnVsbCA/IHZvaWQgMCA6IGNhY2hlQ29udHJvbC5yZXZhbGlkYXRlKSA9PT0gMCAmJiAhcm91dGVNb2R1bGUuaXNEZXYgJiYgIWlzUm91dGVQUFJFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhdGljQmFpbG91dEluZm8gPSBtZXRhZGF0YS5zdGF0aWNCYWlsb3V0SW5mbztcbiAgICAgICAgICAgICAgICBjb25zdCBlcnIgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBQYWdlIGNoYW5nZWQgZnJvbSBzdGF0aWMgdG8gZHluYW1pYyBhdCBydW50aW1lICR7cmVzb2x2ZWRQYXRobmFtZX0keyhzdGF0aWNCYWlsb3V0SW5mbyA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljQmFpbG91dEluZm8uZGVzY3JpcHRpb24pID8gYCwgcmVhc29uOiAke3N0YXRpY0JhaWxvdXRJbmZvLmRlc2NyaXB0aW9ufWAgOiBgYH1gICsgYFxcbnNlZSBtb3JlIGhlcmUgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvYXBwLXN0YXRpYy10by1keW5hbWljLWVycm9yYCksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJFMTMyXCIsXG4gICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAoc3RhdGljQmFpbG91dEluZm8gPT0gbnVsbCA/IHZvaWQgMCA6IHN0YXRpY0JhaWxvdXRJbmZvLnN0YWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YWNrID0gc3RhdGljQmFpbG91dEluZm8uc3RhY2s7XG4gICAgICAgICAgICAgICAgICAgIGVyci5zdGFjayA9IGVyci5tZXNzYWdlICsgc3RhY2suc3Vic3RyaW5nKHN0YWNrLmluZGV4T2YoJ1xcbicpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBDYWNoZWRSb3V0ZUtpbmQuQVBQX1BBR0UsXG4gICAgICAgICAgICAgICAgICAgIGh0bWw6IHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgcnNjRGF0YTogbWV0YWRhdGEuZmxpZ2h0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgcG9zdHBvbmVkOiBtZXRhZGF0YS5wb3N0cG9uZWQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogbWV0YWRhdGEuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgc2VnbWVudERhdGE6IG1ldGFkYXRhLnNlZ21lbnREYXRhXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYWNoZUNvbnRyb2xcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlR2VuZXJhdG9yID0gYXN5bmMgKHsgaGFzUmVzb2x2ZWQsIHByZXZpb3VzQ2FjaGVFbnRyeSwgaXNSZXZhbGlkYXRpbmcsIHNwYW4gfSk9PntcbiAgICAgICAgICAgIGNvbnN0IGlzUHJvZHVjdGlvbiA9IHJvdXRlTW9kdWxlLmlzRGV2ID09PSBmYWxzZTtcbiAgICAgICAgICAgIGNvbnN0IGRpZFJlc3BvbmQgPSBoYXNSZXNvbHZlZCB8fCByZXMud3JpdGFibGVFbmRlZDtcbiAgICAgICAgICAgIC8vIHNraXAgb24tZGVtYW5kIHJldmFsaWRhdGUgaWYgY2FjaGUgaXMgbm90IHByZXNlbnQgYW5kXG4gICAgICAgICAgICAvLyByZXZhbGlkYXRlLWlmLWdlbmVyYXRlZCBpcyBzZXRcbiAgICAgICAgICAgIGlmIChpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiByZXZhbGlkYXRlT25seUdlbmVyYXRlZCAmJiAhcHJldmlvdXNDYWNoZUVudHJ5ICYmICFtaW5pbWFsTW9kZSkge1xuICAgICAgICAgICAgICAgIGlmIChyb3V0ZXJTZXJ2ZXJDb250ZXh0ID09IG51bGwgPyB2b2lkIDAgOiByb3V0ZXJTZXJ2ZXJDb250ZXh0LnJlbmRlcjQwNCkge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCByb3V0ZXJTZXJ2ZXJDb250ZXh0LnJlbmRlcjQwNChyZXEsIHJlcyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDQ7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5lbmQoJ1RoaXMgcGFnZSBjb3VsZCBub3QgYmUgZm91bmQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgZmFsbGJhY2tNb2RlO1xuICAgICAgICAgICAgaWYgKHByZXJlbmRlckluZm8pIHtcbiAgICAgICAgICAgICAgICBmYWxsYmFja01vZGUgPSBwYXJzZUZhbGxiYWNrRmllbGQocHJlcmVuZGVySW5mby5mYWxsYmFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBXaGVuIHNlcnZpbmcgYSBIVE1MIGJvdCByZXF1ZXN0LCB3ZSB3YW50IHRvIHNlcnZlIGEgYmxvY2tpbmcgcmVuZGVyIGFuZFxuICAgICAgICAgICAgLy8gbm90IHRoZSBwcmVyZW5kZXJlZCBwYWdlLiBUaGlzIGVuc3VyZXMgdGhhdCB0aGUgY29ycmVjdCBjb250ZW50IGlzIHNlcnZlZFxuICAgICAgICAgICAgLy8gdG8gdGhlIGJvdCBpbiB0aGUgaGVhZC5cbiAgICAgICAgICAgIGlmIChmYWxsYmFja01vZGUgPT09IEZhbGxiYWNrTW9kZS5QUkVSRU5ERVIgJiYgaXNCb3QodXNlckFnZW50KSkge1xuICAgICAgICAgICAgICAgIGlmICghaXNSb3V0ZVBQUkVuYWJsZWQgfHwgaXNIdG1sQm90KSB7XG4gICAgICAgICAgICAgICAgICAgIGZhbGxiYWNrTW9kZSA9IEZhbGxiYWNrTW9kZS5CTE9DS0lOR19TVEFUSUNfUkVOREVSO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgocHJldmlvdXNDYWNoZUVudHJ5ID09IG51bGwgPyB2b2lkIDAgOiBwcmV2aW91c0NhY2hlRW50cnkuaXNTdGFsZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgaXNPbkRlbWFuZFJldmFsaWRhdGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVE9ETzogYWRhcHQgZm9yIFBQUlxuICAgICAgICAgICAgLy8gb25seSBhbGxvdyBvbi1kZW1hbmQgcmV2YWxpZGF0ZSBmb3IgZmFsbGJhY2s6IHRydWUvYmxvY2tpbmdcbiAgICAgICAgICAgIC8vIG9yIGZvciBwcmVyZW5kZXJlZCBmYWxsYmFjazogZmFsc2UgcGF0aHNcbiAgICAgICAgICAgIGlmIChpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiAoZmFsbGJhY2tNb2RlICE9PSBGYWxsYmFja01vZGUuTk9UX0ZPVU5EIHx8IHByZXZpb3VzQ2FjaGVFbnRyeSkpIHtcbiAgICAgICAgICAgICAgICBmYWxsYmFja01vZGUgPSBGYWxsYmFja01vZGUuQkxPQ0tJTkdfU1RBVElDX1JFTkRFUjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghbWluaW1hbE1vZGUgJiYgZmFsbGJhY2tNb2RlICE9PSBGYWxsYmFja01vZGUuQkxPQ0tJTkdfU1RBVElDX1JFTkRFUiAmJiBzdGF0aWNQYXRoS2V5ICYmICFkaWRSZXNwb25kICYmICFpc0RyYWZ0TW9kZSAmJiBwYWdlSXNEeW5hbWljICYmIChpc1Byb2R1Y3Rpb24gfHwgIWlzUHJlcmVuZGVyZWQpKSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgdGhlIHBhZ2UgaGFzIGR5bmFtaWNQYXJhbXM6IGZhbHNlIGFuZCB0aGlzIHBhdGhuYW1lIHdhc24ndFxuICAgICAgICAgICAgICAgIC8vIHByZXJlbmRlcmVkIHRyaWdnZXIgdGhlIG5vIGZhbGxiYWNrIGhhbmRsaW5nXG4gICAgICAgICAgICAgICAgaWYgKC8vIEluIGRldmVsb3BtZW50LCBmYWxsIHRocm91Z2ggdG8gcmVuZGVyIHRvIGhhbmRsZSBtaXNzaW5nXG4gICAgICAgICAgICAgICAgLy8gZ2V0U3RhdGljUGF0aHMuXG4gICAgICAgICAgICAgICAgKGlzUHJvZHVjdGlvbiB8fCBwcmVyZW5kZXJJbmZvKSAmJiAvLyBXaGVuIGZhbGxiYWNrIGlzbid0IHByZXNlbnQsIGFib3J0IHRoaXMgcmVuZGVyIHNvIHdlIDQwNFxuICAgICAgICAgICAgICAgIGZhbGxiYWNrTW9kZSA9PT0gRmFsbGJhY2tNb2RlLk5PVF9GT1VORCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgTm9GYWxsYmFja0Vycm9yKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxldCBmYWxsYmFja1Jlc3BvbnNlO1xuICAgICAgICAgICAgICAgIGlmIChpc1JvdXRlUFBSRW5hYmxlZCAmJiAhaXNSU0NSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlS2V5ID0gdHlwZW9mIChwcmVyZW5kZXJJbmZvID09IG51bGwgPyB2b2lkIDAgOiBwcmVyZW5kZXJJbmZvLmZhbGxiYWNrKSA9PT0gJ3N0cmluZycgPyBwcmVyZW5kZXJJbmZvLmZhbGxiYWNrIDogaXNQcm9kdWN0aW9uID8gbm9ybWFsaXplZFNyY1BhZ2UgOiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAvLyBXZSB1c2UgdGhlIHJlc3BvbnNlIGNhY2hlIGhlcmUgdG8gaGFuZGxlIHRoZSByZXZhbGlkYXRpb24gYW5kXG4gICAgICAgICAgICAgICAgICAgIC8vIG1hbmFnZW1lbnQgb2YgdGhlIGZhbGxiYWNrIHNoZWxsLlxuICAgICAgICAgICAgICAgICAgICBmYWxsYmFja1Jlc3BvbnNlID0gYXdhaXQgcm91dGVNb2R1bGUuaGFuZGxlUmVzcG9uc2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVLZXksXG4gICAgICAgICAgICAgICAgICAgICAgICByZXEsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0Q29uZmlnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVLaW5kOiBSb3V0ZUtpbmQuQVBQX1BBR0UsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0ZhbGxiYWNrOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlcmVuZGVyTWFuaWZlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1JvdXRlUFBSRW5hYmxlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlR2VuZXJhdG9yOiBhc3luYyAoKT0+ZG9SZW5kZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBXZSBwYXNzIGB1bmRlZmluZWRgIGFzIHJlbmRlcmluZyBhIGZhbGxiYWNrIGlzbid0IHJlc3VtZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGVyZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zdHBvbmVkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbGxiYWNrUm91dGVQYXJhbXM6IC8vIElmIHdlJ3JlIGluIHByb2R1Y3Rpb24gb3Igd2UncmUgZGVidWdnaW5nIHRoZSBmYWxsYmFja1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzaGVsbCB0aGVuIHdlIHNob3VsZCBwb3N0cG9uZSB3aGVuIGR5bmFtaWMgcGFyYW1zIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhY2Nlc3NlZC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcm9kdWN0aW9uIHx8IGlzRGVidWdGYWxsYmFja1NoZWxsID8gZ2V0RmFsbGJhY2tSb3V0ZVBhcmFtcyhub3JtYWxpemVkU3JjUGFnZSkgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICB3YWl0VW50aWw6IGN0eC53YWl0VW50aWxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIElmIHRoZSBmYWxsYmFjayByZXNwb25zZSB3YXMgc2V0IHRvIG51bGwsIHRoZW4gd2Ugc2hvdWxkIHJldHVybiBudWxsLlxuICAgICAgICAgICAgICAgICAgICBpZiAoZmFsbGJhY2tSZXNwb25zZSA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIC8vIE90aGVyd2lzZSwgaWYgd2UgZGlkIGdldCBhIGZhbGxiYWNrIHJlc3BvbnNlLCB3ZSBzaG91bGQgcmV0dXJuIGl0LlxuICAgICAgICAgICAgICAgICAgICBpZiAoZmFsbGJhY2tSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBjYWNoZSBjb250cm9sIGZyb20gdGhlIHJlc3BvbnNlIHRvIHByZXZlbnQgaXQgZnJvbSBiZWluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdXNlZCBpbiB0aGUgc3Vycm91bmRpbmcgY2FjaGUuXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgZmFsbGJhY2tSZXNwb25zZS5jYWNoZUNvbnRyb2w7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsbGJhY2tSZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE9ubHkgcmVxdWVzdHMgdGhhdCBhcmVuJ3QgcmV2YWxpZGF0aW5nIGNhbiBiZSByZXN1bWVkLiBJZiB3ZSBoYXZlIHRoZVxuICAgICAgICAgICAgLy8gbWluaW1hbCBwb3N0cG9uZWQgZGF0YSwgdGhlbiB3ZSBzaG91bGQgcmVzdW1lIHRoZSByZW5kZXIgd2l0aCBpdC5cbiAgICAgICAgICAgIGNvbnN0IHBvc3Rwb25lZCA9ICFpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiAhaXNSZXZhbGlkYXRpbmcgJiYgbWluaW1hbFBvc3Rwb25lZCA/IG1pbmltYWxQb3N0cG9uZWQgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAvLyBXaGVuIHdlJ3JlIGluIG1pbmltYWwgbW9kZSwgaWYgd2UncmUgdHJ5aW5nIHRvIGRlYnVnIHRoZSBzdGF0aWMgc2hlbGwsXG4gICAgICAgICAgICAvLyB3ZSBzaG91bGQganVzdCByZXR1cm4gbm90aGluZyBpbnN0ZWFkIG9mIHJlc3VtaW5nIHRoZSBkeW5hbWljIHJlbmRlci5cbiAgICAgICAgICAgIGlmICgoaXNEZWJ1Z1N0YXRpY1NoZWxsIHx8IGlzRGVidWdEeW5hbWljQWNjZXNzZXMpICYmIHR5cGVvZiBwb3N0cG9uZWQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVDb250cm9sOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXZhbGlkYXRlOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IENhY2hlZFJvdXRlS2luZC5QQUdFUyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6IFJlbmRlclJlc3VsdC5FTVBUWSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VEYXRhOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSWYgdGhpcyBpcyBhIGR5bmFtaWMgcm91dGUgd2l0aCBQUFIgZW5hYmxlZCBhbmQgdGhlIGRlZmF1bHQgcm91dGVcbiAgICAgICAgICAgIC8vIG1hdGNoZXMgd2VyZSBzZXQsIHRoZW4gd2Ugc2hvdWxkIHBhc3MgdGhlIGZhbGxiYWNrIHJvdXRlIHBhcmFtcyB0b1xuICAgICAgICAgICAgLy8gdGhlIHJlbmRlcmVyIGFzIHRoaXMgaXMgYSBmYWxsYmFjayByZXZhbGlkYXRpb24gcmVxdWVzdC5cbiAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrUm91dGVQYXJhbXMgPSBwYWdlSXNEeW5hbWljICYmIGlzUm91dGVQUFJFbmFibGVkICYmIChnZXRSZXF1ZXN0TWV0YShyZXEsICdyZW5kZXJGYWxsYmFja1NoZWxsJykgfHwgaXNEZWJ1Z0ZhbGxiYWNrU2hlbGwpID8gZ2V0RmFsbGJhY2tSb3V0ZVBhcmFtcyhwYXRobmFtZSkgOiBudWxsO1xuICAgICAgICAgICAgLy8gUGVyZm9ybSB0aGUgcmVuZGVyLlxuICAgICAgICAgICAgcmV0dXJuIGRvUmVuZGVyKHtcbiAgICAgICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgICAgIHBvc3Rwb25lZCxcbiAgICAgICAgICAgICAgICBmYWxsYmFja1JvdXRlUGFyYW1zXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgaGFuZGxlUmVzcG9uc2UgPSBhc3luYyAoc3Bhbik9PntcbiAgICAgICAgICAgIHZhciBfY2FjaGVFbnRyeV92YWx1ZSwgX2NhY2hlZERhdGFfaGVhZGVycztcbiAgICAgICAgICAgIGNvbnN0IGNhY2hlRW50cnkgPSBhd2FpdCByb3V0ZU1vZHVsZS5oYW5kbGVSZXNwb25zZSh7XG4gICAgICAgICAgICAgICAgY2FjaGVLZXk6IHNzZ0NhY2hlS2V5LFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlR2VuZXJhdG9yOiAoYyk9PnJlc3BvbnNlR2VuZXJhdG9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5jXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIHJvdXRlS2luZDogUm91dGVLaW5kLkFQUF9QQUdFLFxuICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlLFxuICAgICAgICAgICAgICAgIGlzUm91dGVQUFJFbmFibGVkLFxuICAgICAgICAgICAgICAgIHJlcSxcbiAgICAgICAgICAgICAgICBuZXh0Q29uZmlnLFxuICAgICAgICAgICAgICAgIHByZXJlbmRlck1hbmlmZXN0LFxuICAgICAgICAgICAgICAgIHdhaXRVbnRpbDogY3R4LndhaXRVbnRpbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoaXNEcmFmdE1vZGUpIHtcbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKCdDYWNoZS1Db250cm9sJywgJ3ByaXZhdGUsIG5vLWNhY2hlLCBuby1zdG9yZSwgbWF4LWFnZT0wLCBtdXN0LXJldmFsaWRhdGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEluIGRldiwgd2Ugc2hvdWxkIG5vdCBjYWNoZSBwYWdlcyBmb3IgYW55IHJlYXNvbi5cbiAgICAgICAgICAgIGlmIChyb3V0ZU1vZHVsZS5pc0Rldikge1xuICAgICAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnLCAnbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFjYWNoZUVudHJ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHNzZ0NhY2hlS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEEgY2FjaGUgZW50cnkgbWlnaHQgbm90IGJlIGdlbmVyYXRlZCBpZiBhIHJlc3BvbnNlIGlzIHdyaXR0ZW5cbiAgICAgICAgICAgICAgICAgICAgLy8gaW4gYGdldEluaXRpYWxQcm9wc2Agb3IgYGdldFNlcnZlclNpZGVQcm9wc2AsIGJ1dCB0aG9zZSBzaG91bGRuJ3RcbiAgICAgICAgICAgICAgICAgICAgLy8gaGF2ZSBhIGNhY2hlIGtleS4gSWYgd2UgZG8gaGF2ZSBhIGNhY2hlIGtleSBidXQgd2UgZG9uJ3QgZW5kIHVwXG4gICAgICAgICAgICAgICAgICAgIC8vIHdpdGggYSBjYWNoZSBlbnRyeSwgdGhlbiBlaXRoZXIgTmV4dC5qcyBvciB0aGUgYXBwbGljYXRpb24gaGFzIGFcbiAgICAgICAgICAgICAgICAgICAgLy8gYnVnIHRoYXQgbmVlZHMgZml4aW5nLlxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKCdpbnZhcmlhbnQ6IGNhY2hlIGVudHJ5IHJlcXVpcmVkIGJ1dCBub3QgZ2VuZXJhdGVkJyksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwiRTYyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKChfY2FjaGVFbnRyeV92YWx1ZSA9IGNhY2hlRW50cnkudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfY2FjaGVFbnRyeV92YWx1ZS5raW5kKSAhPT0gQ2FjaGVkUm91dGVLaW5kLkFQUF9QQUdFKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9jYWNoZUVudHJ5X3ZhbHVlMTtcbiAgICAgICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBJbnZhcmlhbnQgYXBwLXBhZ2UgaGFuZGxlciByZWNlaXZlZCBpbnZhbGlkIGNhY2hlIGVudHJ5ICR7KF9jYWNoZUVudHJ5X3ZhbHVlMSA9IGNhY2hlRW50cnkudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfY2FjaGVFbnRyeV92YWx1ZTEua2luZH1gKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIkU3MDdcIixcbiAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZGlkUG9zdHBvbmUgPSB0eXBlb2YgY2FjaGVFbnRyeS52YWx1ZS5wb3N0cG9uZWQgPT09ICdzdHJpbmcnO1xuICAgICAgICAgICAgaWYgKGlzU1NHICYmIC8vIFdlIGRvbid0IHdhbnQgdG8gc2VuZCBhIGNhY2hlIGhlYWRlciBmb3IgcmVxdWVzdHMgdGhhdCBjb250YWluIGR5bmFtaWNcbiAgICAgICAgICAgIC8vIGRhdGEuIElmIHRoaXMgaXMgYSBEeW5hbWljIFJTQyByZXF1ZXN0IG9yIHdhc24ndCBhIFByZWZldGNoIFJTQ1xuICAgICAgICAgICAgLy8gcmVxdWVzdCwgdGhlbiB3ZSBzaG91bGQgc2V0IHRoZSBjYWNoZSBoZWFkZXIuXG4gICAgICAgICAgICAhaXNEeW5hbWljUlNDUmVxdWVzdCAmJiAoIWRpZFBvc3Rwb25lIHx8IGlzUHJlZmV0Y2hSU0NSZXF1ZXN0KSkge1xuICAgICAgICAgICAgICAgIGlmICghbWluaW1hbE1vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gc2V0IHgtbmV4dGpzLWNhY2hlIGhlYWRlciB0byBtYXRjaCB0aGUgaGVhZGVyXG4gICAgICAgICAgICAgICAgICAgIC8vIHdlIHNldCBmb3IgdGhlIGltYWdlLW9wdGltaXplclxuICAgICAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKCd4LW5leHRqcy1jYWNoZScsIGlzT25EZW1hbmRSZXZhbGlkYXRlID8gJ1JFVkFMSURBVEVEJyA6IGNhY2hlRW50cnkuaXNNaXNzID8gJ01JU1MnIDogY2FjaGVFbnRyeS5pc1N0YWxlID8gJ1NUQUxFJyA6ICdISVQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gU2V0IGEgaGVhZGVyIHVzZWQgYnkgdGhlIGNsaWVudCByb3V0ZXIgdG8gc2lnbmFsIHRoZSByZXNwb25zZSBpcyBzdGF0aWNcbiAgICAgICAgICAgICAgICAvLyBhbmQgc2hvdWxkIHJlc3BlY3QgdGhlIGBzdGF0aWNgIGNhY2hlIHN0YWxlVGltZSB2YWx1ZS5cbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKE5FWFRfSVNfUFJFUkVOREVSX0hFQURFUiwgJzEnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgdmFsdWU6IGNhY2hlZERhdGEgfSA9IGNhY2hlRW50cnk7XG4gICAgICAgICAgICAvLyBDb2VyY2UgdGhlIGNhY2hlIGNvbnRyb2wgcGFyYW1ldGVyIGZyb20gdGhlIHJlbmRlci5cbiAgICAgICAgICAgIGxldCBjYWNoZUNvbnRyb2w7XG4gICAgICAgICAgICAvLyBJZiB0aGlzIGlzIGEgcmVzdW1lIHJlcXVlc3QgaW4gbWluaW1hbCBtb2RlIGl0IGlzIHN0cmVhbWVkIHdpdGggZHluYW1pY1xuICAgICAgICAgICAgLy8gY29udGVudCBhbmQgc2hvdWxkIG5vdCBiZSBjYWNoZWQuXG4gICAgICAgICAgICBpZiAobWluaW1hbFBvc3Rwb25lZCkge1xuICAgICAgICAgICAgICAgIGNhY2hlQ29udHJvbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgcmV2YWxpZGF0ZTogMCxcbiAgICAgICAgICAgICAgICAgICAgZXhwaXJlOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSBlbHNlIGlmIChtaW5pbWFsTW9kZSAmJiBpc1JTQ1JlcXVlc3QgJiYgIWlzUHJlZmV0Y2hSU0NSZXF1ZXN0ICYmIGlzUm91dGVQUFJFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVDb250cm9sID0ge1xuICAgICAgICAgICAgICAgICAgICByZXZhbGlkYXRlOiAwLFxuICAgICAgICAgICAgICAgICAgICBleHBpcmU6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFyb3V0ZU1vZHVsZS5pc0Rldikge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoaXMgaXMgYSBwcmV2aWV3IG1vZGUgcmVxdWVzdCwgd2Ugc2hvdWxkbid0IGNhY2hlIGl0XG4gICAgICAgICAgICAgICAgaWYgKGlzRHJhZnRNb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlQ29udHJvbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldmFsaWRhdGU6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBpcmU6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWlzU1NHKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcmVzLmdldEhlYWRlcignQ2FjaGUtQ29udHJvbCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUNvbnRyb2wgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV2YWxpZGF0ZTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBpcmU6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIGNhY2hlIGVudHJ5IGhhcyBhIGNhY2hlIGNvbnRyb2wgd2l0aCBhIHJldmFsaWRhdGUgdmFsdWUgdGhhdCdzXG4gICAgICAgICAgICAgICAgICAgIC8vIGEgbnVtYmVyLCB1c2UgaXQuXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wucmV2YWxpZGF0ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfY2FjaGVFbnRyeV9jYWNoZUNvbnRyb2w7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wucmV2YWxpZGF0ZSA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBJbnZhbGlkIHJldmFsaWRhdGUgY29uZmlndXJhdGlvbiBwcm92aWRlZDogJHtjYWNoZUVudHJ5LmNhY2hlQ29udHJvbC5yZXZhbGlkYXRlfSA8IDFgKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIkUyMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUNvbnRyb2wgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV2YWxpZGF0ZTogY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wucmV2YWxpZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBpcmU6ICgoX2NhY2hlRW50cnlfY2FjaGVDb250cm9sID0gY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wpID09IG51bGwgPyB2b2lkIDAgOiBfY2FjaGVFbnRyeV9jYWNoZUNvbnRyb2wuZXhwaXJlKSA/PyBuZXh0Q29uZmlnLmV4cGlyZVRpbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUNvbnRyb2wgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV2YWxpZGF0ZTogQ0FDSEVfT05FX1lFQVIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYWNoZUVudHJ5LmNhY2hlQ29udHJvbCA9IGNhY2hlQ29udHJvbDtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc2VnbWVudFByZWZldGNoSGVhZGVyID09PSAnc3RyaW5nJyAmJiAoY2FjaGVkRGF0YSA9PSBudWxsID8gdm9pZCAwIDogY2FjaGVkRGF0YS5raW5kKSA9PT0gQ2FjaGVkUm91dGVLaW5kLkFQUF9QQUdFICYmIGNhY2hlZERhdGEuc2VnbWVudERhdGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2NhY2hlZERhdGFfaGVhZGVyczE7XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBpcyBhIHByZWZldGNoIHJlcXVlc3QgaXNzdWVkIGJ5IHRoZSBjbGllbnQgU2VnbWVudCBDYWNoZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAvLyBzaG91bGQgbmV2ZXIgcmVhY2ggdGhlIGFwcGxpY2F0aW9uIGxheWVyIChsYW1iZGEpLiBXZSBzaG91bGQgZWl0aGVyXG4gICAgICAgICAgICAgICAgLy8gcmVzcG9uZCBmcm9tIHRoZSBjYWNoZSAoSElUKSBvciByZXNwb25kIHdpdGggMjA0IE5vIENvbnRlbnQgKE1JU1MpLlxuICAgICAgICAgICAgICAgIC8vIFNldCBhIGhlYWRlciB0byBpbmRpY2F0ZSB0aGF0IFBQUiBpcyBlbmFibGVkIGZvciB0aGlzIHJvdXRlLiBUaGlzXG4gICAgICAgICAgICAgICAgLy8gbGV0cyB0aGUgY2xpZW50IGRpc3Rpbmd1aXNoIGJldHdlZW4gYSByZWd1bGFyIGNhY2hlIG1pc3MgYW5kIGEgY2FjaGVcbiAgICAgICAgICAgICAgICAvLyBtaXNzIGR1ZSB0byBQUFIgYmVpbmcgZGlzYWJsZWQuIEluIG90aGVyIGNvbnRleHRzIHRoaXMgaGVhZGVyIGlzIHVzZWRcbiAgICAgICAgICAgICAgICAvLyB0byBpbmRpY2F0ZSB0aGF0IHRoZSByZXNwb25zZSBjb250YWlucyBkeW5hbWljIGRhdGEsIGJ1dCBoZXJlIHdlJ3JlXG4gICAgICAgICAgICAgICAgLy8gb25seSB1c2luZyBpdCB0byBpbmRpY2F0ZSB0aGF0IHRoZSBmZWF0dXJlIGlzIGVuYWJsZWQg4oCUIHRoZSBzZWdtZW50XG4gICAgICAgICAgICAgICAgLy8gcmVzcG9uc2UgaXRzZWxmIGNvbnRhaW5zIHdoZXRoZXIgdGhlIGRhdGEgaXMgZHluYW1pYy5cbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKE5FWFRfRElEX1BPU1RQT05FX0hFQURFUiwgJzInKTtcbiAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIGNhY2hlIHRhZ3MgaGVhZGVyIHRvIHRoZSByZXNwb25zZSBpZiBpdCBleGlzdHMgYW5kIHdlJ3JlIGluXG4gICAgICAgICAgICAgICAgLy8gbWluaW1hbCBtb2RlIHdoaWxlIHJlbmRlcmluZyBhIHN0YXRpYyBwYWdlLlxuICAgICAgICAgICAgICAgIGNvbnN0IHRhZ3MgPSAoX2NhY2hlZERhdGFfaGVhZGVyczEgPSBjYWNoZWREYXRhLmhlYWRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfY2FjaGVkRGF0YV9oZWFkZXJzMVtORVhUX0NBQ0hFX1RBR1NfSEVBREVSXTtcbiAgICAgICAgICAgICAgICBpZiAobWluaW1hbE1vZGUgJiYgaXNTU0cgJiYgdGFncyAmJiB0eXBlb2YgdGFncyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcihORVhUX0NBQ0hFX1RBR1NfSEVBREVSLCB0YWdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hlZFNlZ21lbnQgPSBjYWNoZWREYXRhLnNlZ21lbnREYXRhLmdldChzZWdtZW50UHJlZmV0Y2hIZWFkZXIpO1xuICAgICAgICAgICAgICAgIGlmIChtYXRjaGVkU2VnbWVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIENhY2hlIGhpdFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VuZFJlbmRlclJlc3VsdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXEsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZUV0YWdzOiBuZXh0Q29uZmlnLmdlbmVyYXRlRXRhZ3MsXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3dlcmVkQnlIZWFkZXI6IG5leHRDb25maWcucG93ZXJlZEJ5SGVhZGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiBSZW5kZXJSZXN1bHQuZnJvbVN0YXRpYyhtYXRjaGVkU2VnbWVudCwgUlNDX0NPTlRFTlRfVFlQRV9IRUFERVIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVDb250cm9sOiBjYWNoZUVudHJ5LmNhY2hlQ29udHJvbFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gQ2FjaGUgbWlzcy4gRWl0aGVyIGEgY2FjaGUgZW50cnkgZm9yIHRoaXMgcm91dGUgaGFzIG5vdCBiZWVuIGdlbmVyYXRlZFxuICAgICAgICAgICAgICAgIC8vICh3aGljaCB0ZWNobmljYWxseSBzaG91bGQgbm90IGJlIHBvc3NpYmxlIHdoZW4gUFBSIGlzIGVuYWJsZWQsIGJlY2F1c2VcbiAgICAgICAgICAgICAgICAvLyBhdCBhIG1pbmltdW0gdGhlcmUgc2hvdWxkIGFsd2F5cyBiZSBhIGZhbGxiYWNrIGVudHJ5KSBvciB0aGVyZSdzIG5vXG4gICAgICAgICAgICAgICAgLy8gbWF0Y2ggZm9yIHRoZSByZXF1ZXN0ZWQgc2VnbWVudC4gUmVzcG9uZCB3aXRoIGEgMjA0IE5vIENvbnRlbnQuIFdlXG4gICAgICAgICAgICAgICAgLy8gZG9uJ3QgYm90aGVyIHRvIHJlc3BvbmQgd2l0aCA0MDQsIGJlY2F1c2UgdGhlc2UgcmVxdWVzdHMgYXJlIG9ubHlcbiAgICAgICAgICAgICAgICAvLyBpc3N1ZWQgYXMgcGFydCBvZiBhIHByZWZldGNoLlxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXNDb2RlID0gMjA0O1xuICAgICAgICAgICAgICAgIHJldHVybiBzZW5kUmVuZGVyUmVzdWx0KHtcbiAgICAgICAgICAgICAgICAgICAgcmVxLFxuICAgICAgICAgICAgICAgICAgICByZXMsXG4gICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlRXRhZ3M6IG5leHRDb25maWcuZ2VuZXJhdGVFdGFncyxcbiAgICAgICAgICAgICAgICAgICAgcG93ZXJlZEJ5SGVhZGVyOiBuZXh0Q29uZmlnLnBvd2VyZWRCeUhlYWRlcixcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiBSZW5kZXJSZXN1bHQuRU1QVFksXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlQ29udHJvbDogY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2xcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIHRoZXJlJ3MgYSBjYWxsYmFjayBmb3IgYG9uQ2FjaGVFbnRyeWAsIGNhbGwgaXQgd2l0aCB0aGUgY2FjaGUgZW50cnlcbiAgICAgICAgICAgIC8vIGFuZCB0aGUgcmV2YWxpZGF0ZSBvcHRpb25zLlxuICAgICAgICAgICAgY29uc3Qgb25DYWNoZUVudHJ5ID0gZ2V0UmVxdWVzdE1ldGEocmVxLCAnb25DYWNoZUVudHJ5Jyk7XG4gICAgICAgICAgICBpZiAob25DYWNoZUVudHJ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmluaXNoZWQgPSBhd2FpdCBvbkNhY2hlRW50cnkoe1xuICAgICAgICAgICAgICAgICAgICAuLi5jYWNoZUVudHJ5LFxuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiByZW1vdmUgdGhpcyB3aGVuIHVwc3RyZWFtIGRvZXNuJ3RcbiAgICAgICAgICAgICAgICAgICAgLy8gYWx3YXlzIGV4cGVjdCB0aGlzIHZhbHVlIHRvIGJlIFwiUEFHRVwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5jYWNoZUVudHJ5LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAga2luZDogJ1BBR0UnXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHVybDogZ2V0UmVxdWVzdE1ldGEocmVxLCAnaW5pdFVSTCcpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGZpbmlzaGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IG1heWJlIHdlIGhhdmUgdG8gZW5kIHRoZSByZXF1ZXN0P1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBJZiB0aGUgcmVxdWVzdCBoYXMgYSBwb3N0cG9uZWQgc3RhdGUgYW5kIGl0J3MgYSByZXN1bWUgcmVxdWVzdCB3ZVxuICAgICAgICAgICAgLy8gc2hvdWxkIGVycm9yLlxuICAgICAgICAgICAgaWYgKGRpZFBvc3Rwb25lICYmIG1pbmltYWxQb3N0cG9uZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKCdJbnZhcmlhbnQ6IHBvc3Rwb25lZCBzdGF0ZSBzaG91bGQgbm90IGJlIHByZXNlbnQgb24gYSByZXN1bWUgcmVxdWVzdCcpLCBcIl9fTkVYVF9FUlJPUl9DT0RFXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwiRTM5NlwiLFxuICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2FjaGVkRGF0YS5oZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uY2FjaGVkRGF0YS5oZWFkZXJzXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoIW1pbmltYWxNb2RlIHx8ICFpc1NTRykge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgaGVhZGVyc1tORVhUX0NBQ0hFX1RBR1NfSEVBREVSXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGhlYWRlcnMpKXtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdiBvZiB2YWx1ZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLmFwcGVuZEhlYWRlcihrZXksIHYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5hcHBlbmRIZWFkZXIoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuYXBwZW5kSGVhZGVyKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQWRkIHRoZSBjYWNoZSB0YWdzIGhlYWRlciB0byB0aGUgcmVzcG9uc2UgaWYgaXQgZXhpc3RzIGFuZCB3ZSdyZSBpblxuICAgICAgICAgICAgLy8gbWluaW1hbCBtb2RlIHdoaWxlIHJlbmRlcmluZyBhIHN0YXRpYyBwYWdlLlxuICAgICAgICAgICAgY29uc3QgdGFncyA9IChfY2FjaGVkRGF0YV9oZWFkZXJzID0gY2FjaGVkRGF0YS5oZWFkZXJzKSA9PSBudWxsID8gdm9pZCAwIDogX2NhY2hlZERhdGFfaGVhZGVyc1tORVhUX0NBQ0hFX1RBR1NfSEVBREVSXTtcbiAgICAgICAgICAgIGlmIChtaW5pbWFsTW9kZSAmJiBpc1NTRyAmJiB0YWdzICYmIHR5cGVvZiB0YWdzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoTkVYVF9DQUNIRV9UQUdTX0hFQURFUiwgdGFncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBJZiB0aGUgcmVxdWVzdCBpcyBhIGRhdGEgcmVxdWVzdCwgdGhlbiB3ZSBzaG91bGRuJ3Qgc2V0IHRoZSBzdGF0dXMgY29kZVxuICAgICAgICAgICAgLy8gZnJvbSB0aGUgcmVzcG9uc2UgYmVjYXVzZSBpdCBzaG91bGQgYWx3YXlzIGJlIDIwMC4gVGhpcyBzaG91bGQgYmUgZ2F0ZWRcbiAgICAgICAgICAgIC8vIGJlaGluZCB0aGUgZXhwZXJpbWVudGFsIFBQUiBmbGFnLlxuICAgICAgICAgICAgaWYgKGNhY2hlZERhdGEuc3RhdHVzICYmICghaXNSU0NSZXF1ZXN0IHx8ICFpc1JvdXRlUFBSRW5hYmxlZCkpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzQ29kZSA9IGNhY2hlZERhdGEuc3RhdHVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUmVkaXJlY3QgaW5mb3JtYXRpb24gaXMgZW5jb2RlZCBpbiBSU0MgcGF5bG9hZCwgc28gd2UgZG9uJ3QgbmVlZCB0byB1c2UgcmVkaXJlY3Qgc3RhdHVzIGNvZGVzXG4gICAgICAgICAgICBpZiAoIW1pbmltYWxNb2RlICYmIGNhY2hlZERhdGEuc3RhdHVzICYmIFJlZGlyZWN0U3RhdHVzQ29kZVtjYWNoZWREYXRhLnN0YXR1c10gJiYgaXNSU0NSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSAyMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNYXJrIHRoYXQgdGhlIHJlcXVlc3QgZGlkIHBvc3Rwb25lLlxuICAgICAgICAgICAgaWYgKGRpZFBvc3Rwb25lKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcihORVhUX0RJRF9QT1NUUE9ORV9IRUFERVIsICcxJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBnbyB0aHJvdWdoIHRoaXMgYmxvY2sgd2hlbiBwcmV2aWV3IG1vZGUgaXMgdHJ1ZVxuICAgICAgICAgICAgLy8gYXMgcHJldmlldyBtb2RlIGlzIGEgZHluYW1pYyByZXF1ZXN0IChieXBhc3NlcyBjYWNoZSkgYW5kIGRvZXNuJ3RcbiAgICAgICAgICAgIC8vIGdlbmVyYXRlIGJvdGggSFRNTCBhbmQgcGF5bG9hZHMgaW4gdGhlIHNhbWUgcmVxdWVzdCBzbyBjb250aW51ZSB0byBqdXN0XG4gICAgICAgICAgICAvLyByZXR1cm4gdGhlIGdlbmVyYXRlZCBwYXlsb2FkXG4gICAgICAgICAgICBpZiAoaXNSU0NSZXF1ZXN0ICYmICFpc0RyYWZ0TW9kZSkge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoaXMgaXMgYSBkeW5hbWljIFJTQyByZXF1ZXN0LCB0aGVuIHN0cmVhbSB0aGUgcmVzcG9uc2UuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjYWNoZWREYXRhLnJzY0RhdGEgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZWREYXRhLnBvc3Rwb25lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ldyBFcnJvcignSW52YXJpYW50OiBFeHBlY3RlZCBwb3N0cG9uZWQgdG8gYmUgdW5kZWZpbmVkJyksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIkUzNzJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZW5kUmVuZGVyUmVzdWx0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlRXRhZ3M6IG5leHRDb25maWcuZ2VuZXJhdGVFdGFncyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvd2VyZWRCeUhlYWRlcjogbmV4dENvbmZpZy5wb3dlcmVkQnlIZWFkZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IGNhY2hlZERhdGEuaHRtbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIER5bmFtaWMgUlNDIHJlc3BvbnNlcyBjYW5ub3QgYmUgY2FjaGVkLCBldmVuIGlmIHRoZXkncmVcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbmZpZ3VyZWQgd2l0aCBgZm9yY2Utc3RhdGljYCBiZWNhdXNlIHdlIGhhdmUgbm8gd2F5IG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBkaXN0aW5ndWlzaGluZyBiZXR3ZWVuIGBmb3JjZS1zdGF0aWNgIGFuZCBwYWdlcyB0aGF0IGhhdmUgbm9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBvc3Rwb25lZCBzdGF0ZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IGRpc3Rpbmd1aXNoIGBmb3JjZS1zdGF0aWNgIGZyb20gcGFnZXMgd2l0aCBubyBwb3N0cG9uZWQgc3RhdGUgKHN0YXRpYylcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlQ29udHJvbDogaXNEeW5hbWljUlNDUmVxdWVzdCA/IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXZhbGlkYXRlOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyZTogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgICAgICB9IDogY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2xcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEFzIHRoaXMgaXNuJ3QgYSBwcmVmZXRjaCByZXF1ZXN0LCB3ZSBzaG91bGQgc2VydmUgdGhlIHN0YXRpYyBmbGlnaHRcbiAgICAgICAgICAgICAgICAvLyBkYXRhLlxuICAgICAgICAgICAgICAgIHJldHVybiBzZW5kUmVuZGVyUmVzdWx0KHtcbiAgICAgICAgICAgICAgICAgICAgcmVxLFxuICAgICAgICAgICAgICAgICAgICByZXMsXG4gICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlRXRhZ3M6IG5leHRDb25maWcuZ2VuZXJhdGVFdGFncyxcbiAgICAgICAgICAgICAgICAgICAgcG93ZXJlZEJ5SGVhZGVyOiBuZXh0Q29uZmlnLnBvd2VyZWRCeUhlYWRlcixcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiBSZW5kZXJSZXN1bHQuZnJvbVN0YXRpYyhjYWNoZWREYXRhLnJzY0RhdGEsIFJTQ19DT05URU5UX1RZUEVfSEVBREVSKSxcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVDb250cm9sOiBjYWNoZUVudHJ5LmNhY2hlQ29udHJvbFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVGhpcyBpcyBhIHJlcXVlc3QgZm9yIEhUTUwgZGF0YS5cbiAgICAgICAgICAgIGxldCBib2R5ID0gY2FjaGVkRGF0YS5odG1sO1xuICAgICAgICAgICAgLy8gSWYgdGhlcmUncyBubyBwb3N0cG9uZWQgc3RhdGUsIHdlIHNob3VsZCBqdXN0IHNlcnZlIHRoZSBIVE1MLiBUaGlzXG4gICAgICAgICAgICAvLyBzaG91bGQgYWxzbyBiZSB0aGUgY2FzZSBmb3IgYSByZXN1bWUgcmVxdWVzdCBiZWNhdXNlIGl0J3MgY29tcGxldGVkXG4gICAgICAgICAgICAvLyBhcyBhIHNlcnZlciByZW5kZXIgKHJhdGhlciB0aGFuIGEgc3RhdGljIHJlbmRlcikuXG4gICAgICAgICAgICBpZiAoIWRpZFBvc3Rwb25lIHx8IG1pbmltYWxNb2RlIHx8IGlzUlNDUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHdlJ3JlIGluIHRlc3QgbW9kZSwgd2Ugc2hvdWxkIGFkZCBhIHNlbnRpbmVsIGNodW5rIHRvIHRoZSByZXNwb25zZVxuICAgICAgICAgICAgICAgIC8vIHRoYXQncyBiZXR3ZWVuIHRoZSBzdGF0aWMgYW5kIGR5bmFtaWMgcGFydHMgc28gd2UgY2FuIGNvbXBhcmUgdGhlXG4gICAgICAgICAgICAgICAgLy8gY2h1bmtzIGFuZCBhZGQgYXNzZXJ0aW9ucy5cbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1RFU1RfTU9ERSAmJiBtaW5pbWFsTW9kZSAmJiBpc1JvdXRlUFBSRW5hYmxlZCAmJiBib2R5LmNvbnRlbnRUeXBlID09PSBIVE1MX0NPTlRFTlRfVFlQRV9IRUFERVIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXMgd2UncmUgaW4gbWluaW1hbCBtb2RlLCB0aGUgc3RhdGljIHBhcnQgd291bGQgaGF2ZSBhbHJlYWR5IGJlZW5cbiAgICAgICAgICAgICAgICAgICAgLy8gc3RyZWFtZWQgZmlyc3QuIFRoZSBvbmx5IHBhcnQgdGhhdCB0aGlzIHN0cmVhbXMgaXMgdGhlIGR5bmFtaWMgcGFydFxuICAgICAgICAgICAgICAgICAgICAvLyBzbyB3ZSBzaG91bGQgRklSU1Qgc3RyZWFtIHRoZSBzZW50aW5lbCBhbmQgVEhFTiB0aGUgZHluYW1pYyBwYXJ0LlxuICAgICAgICAgICAgICAgICAgICBib2R5LnVuc2hpZnQoY3JlYXRlUFBSQm91bmRhcnlTZW50aW5lbCgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbmRSZW5kZXJSZXN1bHQoe1xuICAgICAgICAgICAgICAgICAgICByZXEsXG4gICAgICAgICAgICAgICAgICAgIHJlcyxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVFdGFnczogbmV4dENvbmZpZy5nZW5lcmF0ZUV0YWdzLFxuICAgICAgICAgICAgICAgICAgICBwb3dlcmVkQnlIZWFkZXI6IG5leHRDb25maWcucG93ZXJlZEJ5SGVhZGVyLFxuICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IGJvZHksXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlQ29udHJvbDogY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2xcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIHdlJ3JlIGRlYnVnZ2luZyB0aGUgc3RhdGljIHNoZWxsIG9yIHRoZSBkeW5hbWljIEFQSSBhY2Nlc3Nlcywgd2VcbiAgICAgICAgICAgIC8vIHNob3VsZCBqdXN0IHNlcnZlIHRoZSBIVE1MIHdpdGhvdXQgcmVzdW1pbmcgdGhlIHJlbmRlci4gVGhlIHJldHVybmVkXG4gICAgICAgICAgICAvLyBIVE1MIHdpbGwgYmUgdGhlIHN0YXRpYyBzaGVsbCBzbyBhbGwgdGhlIER5bmFtaWMgQVBJJ3Mgd2lsbCBiZSB1c2VkXG4gICAgICAgICAgICAvLyBkdXJpbmcgc3RhdGljIGdlbmVyYXRpb24uXG4gICAgICAgICAgICBpZiAoaXNEZWJ1Z1N0YXRpY1NoZWxsIHx8IGlzRGVidWdEeW5hbWljQWNjZXNzZXMpIHtcbiAgICAgICAgICAgICAgICAvLyBTaW5jZSB3ZSdyZSBub3QgcmVzdW1pbmcgdGhlIHJlbmRlciwgd2UgbmVlZCB0byBhdCBsZWFzdCBhZGQgdGhlXG4gICAgICAgICAgICAgICAgLy8gY2xvc2luZyBib2R5IGFuZCBodG1sIHRhZ3MgdG8gY3JlYXRlIHZhbGlkIEhUTUwuXG4gICAgICAgICAgICAgICAgYm9keS5wdXNoKG5ldyBSZWFkYWJsZVN0cmVhbSh7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0IChjb250cm9sbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoRU5DT0RFRF9UQUdTLkNMT1NFRC5CT0RZX0FORF9IVE1MKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VuZFJlbmRlclJlc3VsdCh7XG4gICAgICAgICAgICAgICAgICAgIHJlcSxcbiAgICAgICAgICAgICAgICAgICAgcmVzLFxuICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZUV0YWdzOiBuZXh0Q29uZmlnLmdlbmVyYXRlRXRhZ3MsXG4gICAgICAgICAgICAgICAgICAgIHBvd2VyZWRCeUhlYWRlcjogbmV4dENvbmZpZy5wb3dlcmVkQnlIZWFkZXIsXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdDogYm9keSxcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVDb250cm9sOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXZhbGlkYXRlOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSWYgd2UncmUgaW4gdGVzdCBtb2RlLCB3ZSBzaG91bGQgYWRkIGEgc2VudGluZWwgY2h1bmsgdG8gdGhlIHJlc3BvbnNlXG4gICAgICAgICAgICAvLyB0aGF0J3MgYmV0d2VlbiB0aGUgc3RhdGljIGFuZCBkeW5hbWljIHBhcnRzIHNvIHdlIGNhbiBjb21wYXJlIHRoZVxuICAgICAgICAgICAgLy8gY2h1bmtzIGFuZCBhZGQgYXNzZXJ0aW9ucy5cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfVEVTVF9NT0RFKSB7XG4gICAgICAgICAgICAgICAgYm9keS5wdXNoKGNyZWF0ZVBQUkJvdW5kYXJ5U2VudGluZWwoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUaGlzIHJlcXVlc3QgaGFzIHBvc3Rwb25lZCwgc28gbGV0J3MgY3JlYXRlIGEgbmV3IHRyYW5zZm9ybWVyIHRoYXQgdGhlXG4gICAgICAgICAgICAvLyBkeW5hbWljIGRhdGEgY2FuIHBpcGUgdG8gdGhhdCB3aWxsIGF0dGFjaCB0aGUgZHluYW1pYyBkYXRhIHRvIHRoZSBlbmRcbiAgICAgICAgICAgIC8vIG9mIHRoZSByZXNwb25zZS5cbiAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybWVyID0gbmV3IFRyYW5zZm9ybVN0cmVhbSgpO1xuICAgICAgICAgICAgYm9keS5wdXNoKHRyYW5zZm9ybWVyLnJlYWRhYmxlKTtcbiAgICAgICAgICAgIC8vIFBlcmZvcm0gdGhlIHJlbmRlciBhZ2FpbiwgYnV0IHRoaXMgdGltZSwgcHJvdmlkZSB0aGUgcG9zdHBvbmVkIHN0YXRlLlxuICAgICAgICAgICAgLy8gV2UgZG9uJ3QgYXdhaXQgYmVjYXVzZSB3ZSB3YW50IHRoZSByZXN1bHQgdG8gc3RhcnQgc3RyZWFtaW5nIG5vdywgYW5kXG4gICAgICAgICAgICAvLyB3ZSd2ZSBhbHJlYWR5IGNoYWluZWQgdGhlIHRyYW5zZm9ybWVyJ3MgcmVhZGFibGUgdG8gdGhlIHJlbmRlciByZXN1bHQuXG4gICAgICAgICAgICBkb1JlbmRlcih7XG4gICAgICAgICAgICAgICAgc3BhbixcbiAgICAgICAgICAgICAgICBwb3N0cG9uZWQ6IGNhY2hlZERhdGEucG9zdHBvbmVkLFxuICAgICAgICAgICAgICAgIC8vIFRoaXMgaXMgYSByZXN1bWUgcmVuZGVyLCBub3QgYSBmYWxsYmFjayByZW5kZXIsIHNvIHdlIGRvbid0IG5lZWQgdG9cbiAgICAgICAgICAgICAgICAvLyBzZXQgdGhpcy5cbiAgICAgICAgICAgICAgICBmYWxsYmFja1JvdXRlUGFyYW1zOiBudWxsXG4gICAgICAgICAgICB9KS50aGVuKGFzeW5jIChyZXN1bHQpPT57XG4gICAgICAgICAgICAgICAgdmFyIF9yZXN1bHRfdmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ldyBFcnJvcignSW52YXJpYW50OiBleHBlY3RlZCBhIHJlc3VsdCB0byBiZSByZXR1cm5lZCcpLCBcIl9fTkVYVF9FUlJPUl9DT0RFXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIkU0NjNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKChfcmVzdWx0X3ZhbHVlID0gcmVzdWx0LnZhbHVlKSA9PSBudWxsID8gdm9pZCAwIDogX3Jlc3VsdF92YWx1ZS5raW5kKSAhPT0gQ2FjaGVkUm91dGVLaW5kLkFQUF9QQUdFKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfcmVzdWx0X3ZhbHVlMTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ldyBFcnJvcihgSW52YXJpYW50OiBleHBlY3RlZCBhIHBhZ2UgcmVzcG9uc2UsIGdvdCAkeyhfcmVzdWx0X3ZhbHVlMSA9IHJlc3VsdC52YWx1ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9yZXN1bHRfdmFsdWUxLmtpbmR9YCksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwiRTMwNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFBpcGUgdGhlIHJlc3VtZSByZXN1bHQgdG8gdGhlIHRyYW5zZm9ybWVyLlxuICAgICAgICAgICAgICAgIGF3YWl0IHJlc3VsdC52YWx1ZS5odG1sLnBpcGVUbyh0cmFuc2Zvcm1lci53cml0YWJsZSk7XG4gICAgICAgICAgICB9KS5jYXRjaCgoZXJyKT0+e1xuICAgICAgICAgICAgICAgIC8vIEFuIGVycm9yIG9jY3VycmVkIGR1cmluZyBwaXBpbmcgb3IgcHJlcGFyaW5nIHRoZSByZW5kZXIsIGFib3J0XG4gICAgICAgICAgICAgICAgLy8gdGhlIHRyYW5zZm9ybWVycyB3cml0ZXIgc28gd2UgY2FuIHRlcm1pbmF0ZSB0aGUgc3RyZWFtLlxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybWVyLndyaXRhYmxlLmFib3J0KGVycikuY2F0Y2goKGUpPT57XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJjb3VsZG4ndCBhYm9ydCB0cmFuc2Zvcm1lclwiLCBlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHNlbmRSZW5kZXJSZXN1bHQoe1xuICAgICAgICAgICAgICAgIHJlcSxcbiAgICAgICAgICAgICAgICByZXMsXG4gICAgICAgICAgICAgICAgZ2VuZXJhdGVFdGFnczogbmV4dENvbmZpZy5nZW5lcmF0ZUV0YWdzLFxuICAgICAgICAgICAgICAgIHBvd2VyZWRCeUhlYWRlcjogbmV4dENvbmZpZy5wb3dlcmVkQnlIZWFkZXIsXG4gICAgICAgICAgICAgICAgcmVzdWx0OiBib2R5LFxuICAgICAgICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gY2FjaGUgdGhlIHJlc3BvbnNlIGlmIGl0IGhhcyBwb3N0cG9uZWQgZGF0YSBiZWNhdXNlXG4gICAgICAgICAgICAgICAgLy8gdGhlIHJlc3BvbnNlIGJlaW5nIHNlbnQgdG8gdGhlIGNsaWVudCBpdCdzIGR5bmFtaWMgcGFydHMgYXJlIHN0cmVhbWVkXG4gICAgICAgICAgICAgICAgLy8gdG8gdGhlIGNsaWVudCBvbiB0aGUgc2FtZSByZXF1ZXN0LlxuICAgICAgICAgICAgICAgIGNhY2hlQ29udHJvbDoge1xuICAgICAgICAgICAgICAgICAgICByZXZhbGlkYXRlOiAwLFxuICAgICAgICAgICAgICAgICAgICBleHBpcmU6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICAvLyBUT0RPOiBhY3RpdmVTcGFuIGNvZGUgcGF0aCBpcyBmb3Igd2hlbiB3cmFwcGVkIGJ5XG4gICAgICAgIC8vIG5leHQtc2VydmVyIGNhbiBiZSByZW1vdmVkIHdoZW4gdGhpcyBpcyBubyBsb25nZXIgdXNlZFxuICAgICAgICBpZiAoYWN0aXZlU3Bhbikge1xuICAgICAgICAgICAgYXdhaXQgaGFuZGxlUmVzcG9uc2UoYWN0aXZlU3Bhbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdHJhY2VyLndpdGhQcm9wYWdhdGVkQ29udGV4dChyZXEuaGVhZGVycywgKCk9PnRyYWNlci50cmFjZShCYXNlU2VydmVyU3Bhbi5oYW5kbGVSZXF1ZXN0LCB7XG4gICAgICAgICAgICAgICAgICAgIHNwYW5OYW1lOiBgJHttZXRob2R9ICR7cmVxLnVybH1gLFxuICAgICAgICAgICAgICAgICAgICBraW5kOiBTcGFuS2luZC5TRVJWRVIsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwLm1ldGhvZCc6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwLnRhcmdldCc6IHJlcS51cmxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIGhhbmRsZVJlc3BvbnNlKSk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgLy8gaWYgd2UgYXJlbid0IHdyYXBwZWQgYnkgYmFzZS1zZXJ2ZXIgaGFuZGxlIGhlcmVcbiAgICAgICAgaWYgKCFhY3RpdmVTcGFuICYmICEoZXJyIGluc3RhbmNlb2YgTm9GYWxsYmFja0Vycm9yKSkge1xuICAgICAgICAgICAgYXdhaXQgcm91dGVNb2R1bGUub25SZXF1ZXN0RXJyb3IocmVxLCBlcnIsIHtcbiAgICAgICAgICAgICAgICByb3V0ZXJLaW5kOiAnQXBwIFJvdXRlcicsXG4gICAgICAgICAgICAgICAgcm91dGVQYXRoOiBzcmNQYWdlLFxuICAgICAgICAgICAgICAgIHJvdXRlVHlwZTogJ3JlbmRlcicsXG4gICAgICAgICAgICAgICAgcmV2YWxpZGF0ZVJlYXNvbjogZ2V0UmV2YWxpZGF0ZVJlYXNvbih7XG4gICAgICAgICAgICAgICAgICAgIGlzUmV2YWxpZGF0ZTogaXNTU0csXG4gICAgICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0sIHJvdXRlclNlcnZlckNvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJldGhyb3cgc28gdGhhdCB3ZSBjYW4gaGFuZGxlIHNlcnZpbmcgZXJyb3IgcGFnZVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxufVxuLy8gVE9ETzogb21pdCB0aGlzIGZyb20gcHJvZHVjdGlvbiBidWlsZHMsIG9ubHkgdGVzdCBidWlsZHMgc2hvdWxkIGluY2x1ZGUgaXRcbi8qKlxuICogQ3JlYXRlcyBhIHJlYWRhYmxlIHN0cmVhbSB0aGF0IGVtaXRzIGEgUFBSIGJvdW5kYXJ5IHNlbnRpbmVsLlxuICpcbiAqIEByZXR1cm5zIEEgcmVhZGFibGUgc3RyZWFtIHRoYXQgZW1pdHMgYSBQUFIgYm91bmRhcnkgc2VudGluZWwuXG4gKi8gZnVuY3Rpb24gY3JlYXRlUFBSQm91bmRhcnlTZW50aW5lbCgpIHtcbiAgICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICAgICAgc3RhcnQgKGNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoJzwhLS0gUFBSX0JPVU5EQVJZX1NFTlRJTkVMIC0tPicpKTtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGFnZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%2C%5B%7B%22id%22%3A%227f11ded0c01e49f6cf0c66ad299189b871fc6cdde2%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f23ed016d427802b5e2b7f947870333f894eff8ae%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2d8e6036f77b5fd66588eb105d216c77b11e89c1%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2edd5f0d3b53a84d7ed35a5e1cf489fe611bc138%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f31dbdc397c795414e59ff81f470d1b0c29780ab7%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f3cbd9efaa0218cc9e9c5aadb7175823fa40a1af1%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f731d7307b53943747d359198eef259b6532a15e1%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f7f6e6c793074663c9b37c7917fbb71b08e6048e6%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8177d4a3f3fcfb67483c8c8343e53d500865dc0d%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f81d73648b3f754a2add85af496782c6691b43f0d%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f837d77cfd41e68bf898e5038551fab08fff5e900%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f83ada983fecc1432ad5324bacf77a339f69c571c%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f92417330105f1b204e76e5fd7595776318e5c8dc%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f9f7f913a288ee87005526a19431e94e90eff30fb%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fa1c00187ca1b9b3a4d1317505a5af9f21deabb78%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fc482e843b702c9045c9984226a32bcc1e166d43d%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fcec5d1feac68f0b9915bfb5bec156554fb89b8b3%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fd4379da53355ce39f641f4205301513f4a94b702%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fdae1b25adbe14442fbe3504bcf58b36be0763adb%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227feec97c627a4b0a7452123dc0d281bd5401103a55%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff3ce8a3a545e42bcd6387c577734792899ce63b0%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff769c697bf23de4409df01430da73f5538be6926%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff8ee074a993ed534e6198ef2cce313090ab77568%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%2C%5B%7B%22id%22%3A%22003153dc6490a63d05bda96a8e70858fc601503d7a%22%2C%22exportedName%22%3A%22getSettingsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004b90d961053c48afe4cced0064a4f28ad27609c5%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004db7dfb59a7b9722c0deaa7267b6038a252f7c41%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22007d7ff907315bba7ea39d2e312393551193eb35f9%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%2C%5B%7B%22id%22%3A%2200cfbf8ddf1bea20d18f92b5d9783c0dfd5633fd43%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22406c9c03f4fdee4fa1dda14008503373715f327593%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22409e9eb99397a875d6c769b18cd0ef4dcd442d7b44%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22409fe3dd0ce9fd6920226d4844646dd343a6abb8bf%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240c4f2c0fd19d586de4f58732321d3e2edda8810b2%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240f10acc4e54c2e5dbb2fafc6f167f936fb4d12de7%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2260c6b4c2d9a6ec8fd0c8850e6857985693f01141b4%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%2C%5B%7B%22id%22%3A%2200c9e6823748a36541745bb11e17cba10849acd3ca%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%2C%7B%22id%22%3A%22600993e1eb30a690b4243c78ac9c1612781c031f04%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%2C%5B%7B%22id%22%3A%22000ed80c6fdc077deb6fb9f565dcc135d4ff16b8bc%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240b83c8d5f09b1cc3f5885bab9bded9e67a5a84bf0%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240c576232a675aa2c82c8c794c63ed4e55bb1e928d%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%2C%5B%7B%22id%22%3A%22786acde69fe9a2898968aa8ff6ac0b4d5fa5ef34d7%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%2C%7B%22id%22%3A%227e7f985842e37947e0ef423ea7032a0ffeb5fc090d%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%2C%5B%7B%22id%22%3A%2240bae7aa4efbd4f53f84fd4f60afdeca92ae32bc5c%22%2C%22exportedName%22%3A%22getTunnelCommands%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%2C%5B%7B%22id%22%3A%2240489b8faa7a7cebcd6457d02a4950f55b6e81a586%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%2C%5B%7B%22id%22%3A%2260ad97c4f82abfa4e725da4b0637eb078a2d44b45f%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%2C%5B%7B%22id%22%3A%2200f55f0cdd640c800a51b51aeeaf333bb889462661%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2200f5e081870b713973dbc3e271ddda02b5a6916904%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%224097de45677aff4b6039dbcdeffbf7f5d93d703776%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2240ef21943900395634aeedbe183ab2412197ba9b20%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%5D%5D%5D&__client_imported__=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%2C%5B%7B%22id%22%3A%227f11ded0c01e49f6cf0c66ad299189b871fc6cdde2%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f23ed016d427802b5e2b7f947870333f894eff8ae%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2d8e6036f77b5fd66588eb105d216c77b11e89c1%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2edd5f0d3b53a84d7ed35a5e1cf489fe611bc138%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f31dbdc397c795414e59ff81f470d1b0c29780ab7%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f3cbd9efaa0218cc9e9c5aadb7175823fa40a1af1%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f731d7307b53943747d359198eef259b6532a15e1%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f7f6e6c793074663c9b37c7917fbb71b08e6048e6%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8177d4a3f3fcfb67483c8c8343e53d500865dc0d%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f81d73648b3f754a2add85af496782c6691b43f0d%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f837d77cfd41e68bf898e5038551fab08fff5e900%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f83ada983fecc1432ad5324bacf77a339f69c571c%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f92417330105f1b204e76e5fd7595776318e5c8dc%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f9f7f913a288ee87005526a19431e94e90eff30fb%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fa1c00187ca1b9b3a4d1317505a5af9f21deabb78%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fc482e843b702c9045c9984226a32bcc1e166d43d%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fcec5d1feac68f0b9915bfb5bec156554fb89b8b3%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fd4379da53355ce39f641f4205301513f4a94b702%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fdae1b25adbe14442fbe3504bcf58b36be0763adb%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227feec97c627a4b0a7452123dc0d281bd5401103a55%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff3ce8a3a545e42bcd6387c577734792899ce63b0%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff769c697bf23de4409df01430da73f5538be6926%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff8ee074a993ed534e6198ef2cce313090ab77568%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%2C%5B%7B%22id%22%3A%22003153dc6490a63d05bda96a8e70858fc601503d7a%22%2C%22exportedName%22%3A%22getSettingsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004b90d961053c48afe4cced0064a4f28ad27609c5%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004db7dfb59a7b9722c0deaa7267b6038a252f7c41%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22007d7ff907315bba7ea39d2e312393551193eb35f9%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%2C%5B%7B%22id%22%3A%2200cfbf8ddf1bea20d18f92b5d9783c0dfd5633fd43%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22406c9c03f4fdee4fa1dda14008503373715f327593%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22409e9eb99397a875d6c769b18cd0ef4dcd442d7b44%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22409fe3dd0ce9fd6920226d4844646dd343a6abb8bf%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240c4f2c0fd19d586de4f58732321d3e2edda8810b2%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240f10acc4e54c2e5dbb2fafc6f167f936fb4d12de7%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2260c6b4c2d9a6ec8fd0c8850e6857985693f01141b4%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%2C%5B%7B%22id%22%3A%2200c9e6823748a36541745bb11e17cba10849acd3ca%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%2C%7B%22id%22%3A%22600993e1eb30a690b4243c78ac9c1612781c031f04%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%2C%5B%7B%22id%22%3A%22000ed80c6fdc077deb6fb9f565dcc135d4ff16b8bc%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240b83c8d5f09b1cc3f5885bab9bded9e67a5a84bf0%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240c576232a675aa2c82c8c794c63ed4e55bb1e928d%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%2C%5B%7B%22id%22%3A%22786acde69fe9a2898968aa8ff6ac0b4d5fa5ef34d7%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%2C%7B%22id%22%3A%227e7f985842e37947e0ef423ea7032a0ffeb5fc090d%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%2C%5B%7B%22id%22%3A%2240bae7aa4efbd4f53f84fd4f60afdeca92ae32bc5c%22%2C%22exportedName%22%3A%22getTunnelCommands%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%2C%5B%7B%22id%22%3A%2240489b8faa7a7cebcd6457d02a4950f55b6e81a586%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%2C%5B%7B%22id%22%3A%2260ad97c4f82abfa4e725da4b0637eb078a2d44b45f%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%2C%5B%7B%22id%22%3A%2200f55f0cdd640c800a51b51aeeaf333bb889462661%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2200f5e081870b713973dbc3e271ddda02b5a6916904%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%224097de45677aff4b6039dbcdeffbf7f5d93d703776%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2240ef21943900395634aeedbe183ab2412197ba9b20%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%5D%5D%5D&__client_imported__=! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"000ed80c6fdc077deb6fb9f565dcc135d4ff16b8bc\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__.getTunnels),\n/* harmony export */   \"003153dc6490a63d05bda96a8e70858fc601503d7a\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getSettingsCollection),\n/* harmony export */   \"004b90d961053c48afe4cced0064a4f28ad27609c5\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getServersCollection),\n/* harmony export */   \"004db7dfb59a7b9722c0deaa7267b6038a252f7c41\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getDb),\n/* harmony export */   \"007d7ff907315bba7ea39d2e312393551193eb35f9\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__.getTunnelsCollection),\n/* harmony export */   \"00c9e6823748a36541745bb11e17cba10849acd3ca\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_ssh_ts__WEBPACK_IMPORTED_MODULE_3__.getSshKeys),\n/* harmony export */   \"00cfbf8ddf1bea20d18f92b5d9783c0dfd5633fd43\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.getServers),\n/* harmony export */   \"00f55f0cdd640c800a51b51aeeaf333bb889462661\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.getSettings),\n/* harmony export */   \"00f5e081870b713973dbc3e271ddda02b5a6916904\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.exportSettings),\n/* harmony export */   \"40489b8faa7a7cebcd6457d02a4950f55b6e81a586\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_persistence_ts__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig),\n/* harmony export */   \"406c9c03f4fdee4fa1dda14008503373715f327593\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.cleanupServer),\n/* harmony export */   \"4097de45677aff4b6039dbcdeffbf7f5d93d703776\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.updateSettings),\n/* harmony export */   \"409e9eb99397a875d6c769b18cd0ef4dcd442d7b44\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.pingServer),\n/* harmony export */   \"409fe3dd0ce9fd6920226d4844646dd343a6abb8bf\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.updateServers),\n/* harmony export */   \"40b83c8d5f09b1cc3f5885bab9bded9e67a5a84bf0\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__.deleteTunnel),\n/* harmony export */   \"40bae7aa4efbd4f53f84fd4f60afdeca92ae32bc5c\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_commands_ts__WEBPACK_IMPORTED_MODULE_6__.getTunnelCommands),\n/* harmony export */   \"40c4f2c0fd19d586de4f58732321d3e2edda8810b2\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.addServer),\n/* harmony export */   \"40c576232a675aa2c82c8c794c63ed4e55bb1e928d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__.pingTunnel),\n/* harmony export */   \"40ef21943900395634aeedbe183ab2412197ba9b20\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__.importSettings),\n/* harmony export */   \"40f10acc4e54c2e5dbb2fafc6f167f936fb4d12de7\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.deleteServer),\n/* harmony export */   \"600993e1eb30a690b4243c78ac9c1612781c031f04\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_ssh_ts__WEBPACK_IMPORTED_MODULE_3__.connectWithKeyManagement),\n/* harmony export */   \"60ad97c4f82abfa4e725da4b0637eb078a2d44b45f\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_netmaker_ts__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork),\n/* harmony export */   \"60c6b4c2d9a6ec8fd0c8850e6857985693f01141b4\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__.updateServer),\n/* harmony export */   \"786acde69fe9a2898968aa8ff6ac0b4d5fa5ef34d7\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_creation_ts__WEBPACK_IMPORTED_MODULE_5__.createTunnel),\n/* harmony export */   \"7e7f985842e37947e0ef423ea7032a0ffeb5fc090d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_creation_ts__WEBPACK_IMPORTED_MODULE_5__.createCombinedTunnel),\n/* harmony export */   \"7f11ded0c01e49f6cf0c66ad299189b871fc6cdde2\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.cleanupServer),\n/* harmony export */   \"7f23ed016d427802b5e2b7f947870333f894eff8ae\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.connectWithKeyManagement),\n/* harmony export */   \"7f2d8e6036f77b5fd66588eb105d216c77b11e89c1\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getServers),\n/* harmony export */   \"7f2edd5f0d3b53a84d7ed35a5e1cf489fe611bc138\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.pingTunnel),\n/* harmony export */   \"7f31dbdc397c795414e59ff81f470d1b0c29780ab7\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.createMeshNetwork),\n/* harmony export */   \"7f3cbd9efaa0218cc9e9c5aadb7175823fa40a1af1\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.addServer),\n/* harmony export */   \"7f731d7307b53943747d359198eef259b6532a15e1\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getDb),\n/* harmony export */   \"7f7f6e6c793074663c9b37c7917fbb71b08e6048e6\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getTunnels),\n/* harmony export */   \"7f8177d4a3f3fcfb67483c8c8343e53d500865dc0d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.deleteServer),\n/* harmony export */   \"7f81d73648b3f754a2add85af496782c6691b43f0d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.saveTunnelConfig),\n/* harmony export */   \"7f837d77cfd41e68bf898e5038551fab08fff5e900\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.updateServer),\n/* harmony export */   \"7f83ada983fecc1432ad5324bacf77a339f69c571c\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getTunnelsCollection),\n/* harmony export */   \"7f92417330105f1b204e76e5fd7595776318e5c8dc\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.pingServer),\n/* harmony export */   \"7f9f7f913a288ee87005526a19431e94e90eff30fb\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getSshKeys),\n/* harmony export */   \"7fa1c00187ca1b9b3a4d1317505a5af9f21deabb78\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.updateServers),\n/* harmony export */   \"7fc482e843b702c9045c9984226a32bcc1e166d43d\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getServersCollection),\n/* harmony export */   \"7fcec5d1feac68f0b9915bfb5bec156554fb89b8b3\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.deleteTunnel),\n/* harmony export */   \"7fd4379da53355ce39f641f4205301513f4a94b702\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.exportSettings),\n/* harmony export */   \"7fdae1b25adbe14442fbe3504bcf58b36be0763adb\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.importSettings),\n/* harmony export */   \"7feec97c627a4b0a7452123dc0d281bd5401103a55\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.createCombinedTunnel),\n/* harmony export */   \"7ff3ce8a3a545e42bcd6387c577734792899ce63b0\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.updateSettings),\n/* harmony export */   \"7ff769c697bf23de4409df01430da73f5538be6926\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.getSettings),\n/* harmony export */   \"7ff8ee074a993ed534e6198ef2cce313090ab77568\": () => (/* reexport safe */ C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__.createTunnel)\n/* harmony export */ });\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_index_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/app/actions/index.ts */ \"(rsc)/./src/app/actions/index.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_db_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/app/actions/db.ts */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_server_actions_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/app/actions/server-actions.ts */ \"(rsc)/./src/app/actions/server-actions.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_ssh_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/actions/ssh.ts */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_core_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/app/actions/tunnels/core.ts */ \"(rsc)/./src/app/actions/tunnels/core.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_creation_ts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/app/actions/tunnels/creation.ts */ \"(rsc)/./src/app/actions/tunnels/creation.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_commands_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/app/actions/tunnels/commands.ts */ \"(rsc)/./src/app/actions/tunnels/commands.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_persistence_ts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/app/actions/tunnels/persistence.ts */ \"(rsc)/./src/app/actions/tunnels/persistence.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_tunnels_netmaker_ts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/app/actions/tunnels/netmaker.ts */ \"(rsc)/./src/app/actions/tunnels/netmaker.ts\");\n/* harmony import */ var C_Users_amin_Downloads_Compressed_TunnelVision_src_app_actions_settings_actions_ts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/app/actions/settings-actions.ts */ \"(rsc)/./src/app/actions/settings-actions.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%2C%5B%7B%22id%22%3A%227f11ded0c01e49f6cf0c66ad299189b871fc6cdde2%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f23ed016d427802b5e2b7f947870333f894eff8ae%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2d8e6036f77b5fd66588eb105d216c77b11e89c1%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f2edd5f0d3b53a84d7ed35a5e1cf489fe611bc138%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f31dbdc397c795414e59ff81f470d1b0c29780ab7%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f3cbd9efaa0218cc9e9c5aadb7175823fa40a1af1%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f731d7307b53943747d359198eef259b6532a15e1%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f7f6e6c793074663c9b37c7917fbb71b08e6048e6%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f8177d4a3f3fcfb67483c8c8343e53d500865dc0d%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f81d73648b3f754a2add85af496782c6691b43f0d%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f837d77cfd41e68bf898e5038551fab08fff5e900%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f83ada983fecc1432ad5324bacf77a339f69c571c%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f92417330105f1b204e76e5fd7595776318e5c8dc%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227f9f7f913a288ee87005526a19431e94e90eff30fb%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fa1c00187ca1b9b3a4d1317505a5af9f21deabb78%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fc482e843b702c9045c9984226a32bcc1e166d43d%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fcec5d1feac68f0b9915bfb5bec156554fb89b8b3%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fd4379da53355ce39f641f4205301513f4a94b702%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227fdae1b25adbe14442fbe3504bcf58b36be0763adb%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227feec97c627a4b0a7452123dc0d281bd5401103a55%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff3ce8a3a545e42bcd6387c577734792899ce63b0%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff769c697bf23de4409df01430da73f5538be6926%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%2C%7B%22id%22%3A%227ff8ee074a993ed534e6198ef2cce313090ab77568%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cindex.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%2C%5B%7B%22id%22%3A%22003153dc6490a63d05bda96a8e70858fc601503d7a%22%2C%22exportedName%22%3A%22getSettingsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004b90d961053c48afe4cced0064a4f28ad27609c5%22%2C%22exportedName%22%3A%22getServersCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22004db7dfb59a7b9722c0deaa7267b6038a252f7c41%22%2C%22exportedName%22%3A%22getDb%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%2C%7B%22id%22%3A%22007d7ff907315bba7ea39d2e312393551193eb35f9%22%2C%22exportedName%22%3A%22getTunnelsCollection%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cdb.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%2C%5B%7B%22id%22%3A%2200cfbf8ddf1bea20d18f92b5d9783c0dfd5633fd43%22%2C%22exportedName%22%3A%22getServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22406c9c03f4fdee4fa1dda14008503373715f327593%22%2C%22exportedName%22%3A%22cleanupServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22409e9eb99397a875d6c769b18cd0ef4dcd442d7b44%22%2C%22exportedName%22%3A%22pingServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%22409fe3dd0ce9fd6920226d4844646dd343a6abb8bf%22%2C%22exportedName%22%3A%22updateServers%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240c4f2c0fd19d586de4f58732321d3e2edda8810b2%22%2C%22exportedName%22%3A%22addServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2240f10acc4e54c2e5dbb2fafc6f167f936fb4d12de7%22%2C%22exportedName%22%3A%22deleteServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%2C%7B%22id%22%3A%2260c6b4c2d9a6ec8fd0c8850e6857985693f01141b4%22%2C%22exportedName%22%3A%22updateServer%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cserver-actions.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%2C%5B%7B%22id%22%3A%2200c9e6823748a36541745bb11e17cba10849acd3ca%22%2C%22exportedName%22%3A%22getSshKeys%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%2C%7B%22id%22%3A%22600993e1eb30a690b4243c78ac9c1612781c031f04%22%2C%22exportedName%22%3A%22connectWithKeyManagement%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Cssh.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%2C%5B%7B%22id%22%3A%22000ed80c6fdc077deb6fb9f565dcc135d4ff16b8bc%22%2C%22exportedName%22%3A%22getTunnels%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240b83c8d5f09b1cc3f5885bab9bded9e67a5a84bf0%22%2C%22exportedName%22%3A%22deleteTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%2C%7B%22id%22%3A%2240c576232a675aa2c82c8c794c63ed4e55bb1e928d%22%2C%22exportedName%22%3A%22pingTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccore.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%2C%5B%7B%22id%22%3A%22786acde69fe9a2898968aa8ff6ac0b4d5fa5ef34d7%22%2C%22exportedName%22%3A%22createTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%2C%7B%22id%22%3A%227e7f985842e37947e0ef423ea7032a0ffeb5fc090d%22%2C%22exportedName%22%3A%22createCombinedTunnel%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccreation.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%2C%5B%7B%22id%22%3A%2240bae7aa4efbd4f53f84fd4f60afdeca92ae32bc5c%22%2C%22exportedName%22%3A%22getTunnelCommands%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Ccommands.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%2C%5B%7B%22id%22%3A%2240489b8faa7a7cebcd6457d02a4950f55b6e81a586%22%2C%22exportedName%22%3A%22saveTunnelConfig%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cpersistence.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%2C%5B%7B%22id%22%3A%2260ad97c4f82abfa4e725da4b0637eb078a2d44b45f%22%2C%22exportedName%22%3A%22createMeshNetwork%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Ctunnels%5C%5Cnetmaker.ts%22%7D%5D%5D%2C%5B%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%2C%5B%7B%22id%22%3A%2200f55f0cdd640c800a51b51aeeaf333bb889462661%22%2C%22exportedName%22%3A%22getSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2200f5e081870b713973dbc3e271ddda02b5a6916904%22%2C%22exportedName%22%3A%22exportSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%224097de45677aff4b6039dbcdeffbf7f5d93d703776%22%2C%22exportedName%22%3A%22updateSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%2C%7B%22id%22%3A%2240ef21943900395634aeedbe183ab2412197ba9b20%22%2C%22exportedName%22%3A%22importSettings%22%2C%22filename%22%3A%22..%2FC%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cactions%5C%5Csettings-actions.ts%22%7D%5D%5D%5D&__client_imported__=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/framework/boundary-components.js */ \"(rsc)/./node_modules/next/dist/lib/framework/boundary-components.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2J1aWx0aW4lNUMlNUNnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q21ldGFkYXRhJTVDJTVDYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2xpYiU1QyU1Q2ZyYW1ld29yayU1QyU1Q2JvdW5kYXJ5LWNvbXBvbmVudHMuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q2dlbmVyYXRlJTVDJTVDaWNvbi1tYXJrLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDbmV4dC1kZXZ0b29scyU1QyU1Q3VzZXJzcGFjZSU1QyU1Q2FwcCU1QyU1Q3NlZ21lbnQtZXhwbG9yZXItbm9kZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsc1BBQWtLO0FBQ2xLO0FBQ0Esb09BQXdKO0FBQ3hKO0FBQ0EsME9BQTJKO0FBQzNKO0FBQ0Esb1JBQWlMO0FBQ2pMO0FBQ0Esd09BQTBKO0FBQzFKO0FBQ0EsNFBBQXFLO0FBQ3JLO0FBQ0Esc1FBQXlLO0FBQ3pLO0FBQ0EsNE9BQTRKO0FBQzVKO0FBQ0Esd09BQTJKO0FBQzNKO0FBQ0EsNFFBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxidWlsdGluXFxcXGdsb2JhbC1lcnJvci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1zZWdtZW50LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxodHRwLWFjY2Vzcy1mYWxsYmFja1xcXFxlcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbWV0YWRhdGFcXFxcYXN5bmMtbWV0YWRhdGEuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXHJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGxpYlxcXFxmcmFtZXdvcmtcXFxcYm91bmRhcnktY29tcG9uZW50cy5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcbGliXFxcXG1ldGFkYXRhXFxcXGdlbmVyYXRlXFxcXGljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcbmV4dC1kZXZ0b29sc1xcXFx1c2Vyc3BhY2VcXFxcYXBwXFxcXHNlZ21lbnQtZXhwbG9yZXItbm9kZS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/toaster.tsx */ \"(rsc)/./src/components/ui/toaster.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q2dsb2JhbHMuY3NzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2NvbXBvbmVudHMlNUMlNUN1aSU1QyU1Q3RvYXN0ZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyVG9hc3RlciUyMiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQXlKIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUb2FzdGVyXCJdICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXHVpXFxcXHRvYXN0ZXIudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/main-page/dynamic-main-page.tsx */ \"(rsc)/./src/components/main-page/dynamic-main-page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2NvbXBvbmVudHMlNUMlNUNtYWluLXBhZ2UlNUMlNUNkeW5hbWljLW1haW4tcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJEeW5hbWljTWFpblBhZ2VMb2FkZXIlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDRNQUF3TCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiRHluYW1pY01haW5QYWdlTG9hZGVyXCJdICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXG1haW4tcGFnZVxcXFxkeW5hbWljLW1haW4tcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/db.ts":
/*!*******************************!*\
  !*** ./src/app/actions/db.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDb: () => (/* binding */ getDb),\n/* harmony export */   getServersCollection: () => (/* binding */ getServersCollection),\n/* harmony export */   getSettingsCollection: () => (/* binding */ getSettingsCollection),\n/* harmony export */   getTunnelsCollection: () => (/* binding */ getTunnelsCollection)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"003153dc6490a63d05bda96a8e70858fc601503d7a\":\"getSettingsCollection\",\"004b90d961053c48afe4cced0064a4f28ad27609c5\":\"getServersCollection\",\"004db7dfb59a7b9722c0deaa7267b6038a252f7c41\":\"getDb\",\"007d7ff907315bba7ea39d2e312393551193eb35f9\":\"getTunnelsCollection\"} */ \n\n\nasync function getDb() {\n    const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    const dbName = process.env.MONGODB_DB_NAME || 'tunnel_vision_db';\n    return client.db(dbName);\n}\nasync function getServersCollection() {\n    const db = await getDb();\n    return db.collection('servers');\n}\nasync function getTunnelsCollection() {\n    const db = await getDb();\n    return db.collection('tunnels');\n}\n// اضافه شدن برای نگهداری تنظیمات عمومی مانند پیکربندی اتو-تانل\nasync function getSettingsCollection() {\n    const db = await getDb();\n    return db.collection('settings');\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_3__.ensureServerEntryExports)([\n    getDb,\n    getServersCollection,\n    getTunnelsCollection,\n    getSettingsCollection\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getDb, \"004db7dfb59a7b9722c0deaa7267b6038a252f7c41\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getServersCollection, \"004b90d961053c48afe4cced0064a4f28ad27609c5\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getTunnelsCollection, \"007d7ff907315bba7ea39d2e312393551193eb35f9\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getSettingsCollection, \"003153dc6490a63d05bda96a8e70858fc601503d7a\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FjdGlvbnMvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFMEM7QUFLbkMsZUFBZUM7SUFDbEIsTUFBTUMsU0FBUyxNQUFNRixvREFBYUE7SUFDbEMsTUFBTUcsU0FBU0MsUUFBUUMsR0FBRyxDQUFDQyxlQUFlLElBQUk7SUFDOUMsT0FBT0osT0FBT0ssRUFBRSxDQUFDSjtBQUNyQjtBQUVPLGVBQWVLO0lBQ2xCLE1BQU1ELEtBQUssTUFBTU47SUFDakIsT0FBT00sR0FBR0UsVUFBVSxDQUFTO0FBQ2pDO0FBRU8sZUFBZUM7SUFDbEIsTUFBTUgsS0FBSyxNQUFNTjtJQUNqQixPQUFPTSxHQUFHRSxVQUFVLENBQVM7QUFDakM7QUFFQSwrREFBK0Q7QUFDeEQsZUFBZUU7SUFDbEIsTUFBTUosS0FBSyxNQUFNTjtJQUNqQixPQUFPTSxHQUFHRSxVQUFVLENBQUM7QUFDekI7OztJQXBCc0JSO0lBTUFPO0lBS0FFO0lBTUFDOztBQWpCQVYsMEZBQUFBLENBQUFBO0FBTUFPLDBGQUFBQSxDQUFBQTtBQUtBRSwwRkFBQUEsQ0FBQUE7QUFNQUMsMEZBQUFBLENBQUFBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxhcHBcXGFjdGlvbnNcXGRiLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc2VydmVyJztcblxuaW1wb3J0IGNsaWVudFByb21pc2UgZnJvbSAnQC9saWIvbW9uZ29kYic7XG5pbXBvcnQgeyBDb2xsZWN0aW9uIH0gZnJvbSAnbW9uZ29kYic7XG5pbXBvcnQgdHlwZSB7IFNlcnZlciwgVHVubmVsIH0gZnJvbSAnQC9saWIvdHlwZXMnO1xuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREYigpIHtcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBjbGllbnRQcm9taXNlO1xuICAgIGNvbnN0IGRiTmFtZSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfREJfTkFNRSB8fCAndHVubmVsX3Zpc2lvbl9kYic7XG4gICAgcmV0dXJuIGNsaWVudC5kYihkYk5hbWUpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyc0NvbGxlY3Rpb24oKTogUHJvbWlzZTxDb2xsZWN0aW9uPFNlcnZlcj4+IHtcbiAgICBjb25zdCBkYiA9IGF3YWl0IGdldERiKCk7XG4gICAgcmV0dXJuIGRiLmNvbGxlY3Rpb248U2VydmVyPignc2VydmVycycpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VHVubmVsc0NvbGxlY3Rpb24oKTogUHJvbWlzZTxDb2xsZWN0aW9uPFR1bm5lbD4+IHtcbiAgICBjb25zdCBkYiA9IGF3YWl0IGdldERiKCk7XG4gICAgcmV0dXJuIGRiLmNvbGxlY3Rpb248VHVubmVsPigndHVubmVscycpO1xufVxuXG4vLyDYp9i22KfZgdmHINi02K/ZhiDYqNix2KfbjCDZhtqv2YfYr9in2LHbjCDYqtmG2LjbjNmF2KfYqiDYudmF2YjZhduMINmF2KfZhtmG2K8g2b7bjNqp2LHYqNmG2K/bjCDYp9iq2Ygt2KrYp9mG2YRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXR0aW5nc0NvbGxlY3Rpb24oKTogUHJvbWlzZTxDb2xsZWN0aW9uPGFueT4+IHtcbiAgICBjb25zdCBkYiA9IGF3YWl0IGdldERiKCk7XG4gICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oJ3NldHRpbmdzJyk7XG59XG4iXSwibmFtZXMiOlsiY2xpZW50UHJvbWlzZSIsImdldERiIiwiY2xpZW50IiwiZGJOYW1lIiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfREJfTkFNRSIsImRiIiwiZ2V0U2VydmVyc0NvbGxlY3Rpb24iLCJjb2xsZWN0aW9uIiwiZ2V0VHVubmVsc0NvbGxlY3Rpb24iLCJnZXRTZXR0aW5nc0NvbGxlY3Rpb24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/index.ts":
/*!**********************************!*\
  !*** ./src/app/actions/index.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.addServer),\n/* harmony export */   cleanupServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.cleanupServer),\n/* harmony export */   connectWithKeyManagement: () => (/* reexport safe */ _ssh__WEBPACK_IMPORTED_MODULE_4__.connectWithKeyManagement),\n/* harmony export */   createCombinedTunnel: () => (/* reexport safe */ _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createCombinedTunnel),\n/* harmony export */   createMeshNetwork: () => (/* reexport safe */ _tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork),\n/* harmony export */   createTunnel: () => (/* reexport safe */ _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createTunnel),\n/* harmony export */   deleteServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.deleteServer),\n/* harmony export */   deleteTunnel: () => (/* reexport safe */ _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.deleteTunnel),\n/* harmony export */   exportSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.exportSettings),\n/* harmony export */   getDb: () => (/* reexport safe */ _db__WEBPACK_IMPORTED_MODULE_2__.getDb),\n/* harmony export */   getServers: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.getServers),\n/* harmony export */   getServersCollection: () => (/* reexport safe */ _db__WEBPACK_IMPORTED_MODULE_2__.getServersCollection),\n/* harmony export */   getSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.getSettings),\n/* harmony export */   getSshKeys: () => (/* reexport safe */ _ssh__WEBPACK_IMPORTED_MODULE_4__.getSshKeys),\n/* harmony export */   getTunnels: () => (/* reexport safe */ _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.getTunnels),\n/* harmony export */   getTunnelsCollection: () => (/* reexport safe */ _db__WEBPACK_IMPORTED_MODULE_2__.getTunnelsCollection),\n/* harmony export */   importSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.importSettings),\n/* harmony export */   pingServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.pingServer),\n/* harmony export */   pingTunnel: () => (/* reexport safe */ _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.pingTunnel),\n/* harmony export */   saveTunnelConfig: () => (/* reexport safe */ _tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig),\n/* harmony export */   updateServer: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServer),\n/* harmony export */   updateServers: () => (/* reexport safe */ _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServers),\n/* harmony export */   updateSettings: () => (/* reexport safe */ _settings_actions__WEBPACK_IMPORTED_MODULE_9__.updateSettings)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _server_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./server-actions */ \"(rsc)/./src/app/actions/server-actions.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var _tunnels_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tunnels/core */ \"(rsc)/./src/app/actions/tunnels/core.ts\");\n/* harmony import */ var _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tunnels/creation */ \"(rsc)/./src/app/actions/tunnels/creation.ts\");\n/* harmony import */ var _tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tunnels/persistence */ \"(rsc)/./src/app/actions/tunnels/persistence.ts\");\n/* harmony import */ var _tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tunnels/netmaker */ \"(rsc)/./src/app/actions/tunnels/netmaker.ts\");\n/* harmony import */ var _settings_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settings-actions */ \"(rsc)/./src/app/actions/settings-actions.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"7f11ded0c01e49f6cf0c66ad299189b871fc6cdde2\":\"cleanupServer\",\"7f23ed016d427802b5e2b7f947870333f894eff8ae\":\"connectWithKeyManagement\",\"7f2d8e6036f77b5fd66588eb105d216c77b11e89c1\":\"getServers\",\"7f2edd5f0d3b53a84d7ed35a5e1cf489fe611bc138\":\"pingTunnel\",\"7f31dbdc397c795414e59ff81f470d1b0c29780ab7\":\"createMeshNetwork\",\"7f3cbd9efaa0218cc9e9c5aadb7175823fa40a1af1\":\"addServer\",\"7f731d7307b53943747d359198eef259b6532a15e1\":\"getDb\",\"7f7f6e6c793074663c9b37c7917fbb71b08e6048e6\":\"getTunnels\",\"7f8177d4a3f3fcfb67483c8c8343e53d500865dc0d\":\"deleteServer\",\"7f81d73648b3f754a2add85af496782c6691b43f0d\":\"saveTunnelConfig\",\"7f837d77cfd41e68bf898e5038551fab08fff5e900\":\"updateServer\",\"7f83ada983fecc1432ad5324bacf77a339f69c571c\":\"getTunnelsCollection\",\"7f92417330105f1b204e76e5fd7595776318e5c8dc\":\"pingServer\",\"7f9f7f913a288ee87005526a19431e94e90eff30fb\":\"getSshKeys\",\"7fa1c00187ca1b9b3a4d1317505a5af9f21deabb78\":\"updateServers\",\"7fc482e843b702c9045c9984226a32bcc1e166d43d\":\"getServersCollection\",\"7fcec5d1feac68f0b9915bfb5bec156554fb89b8b3\":\"deleteTunnel\",\"7fd4379da53355ce39f641f4205301513f4a94b702\":\"exportSettings\",\"7fdae1b25adbe14442fbe3504bcf58b36be0763adb\":\"importSettings\",\"7feec97c627a4b0a7452123dc0d281bd5401103a55\":\"createCombinedTunnel\",\"7ff3ce8a3a545e42bcd6387c577734792899ce63b0\":\"updateSettings\",\"7ff769c697bf23de4409df01430da73f5538be6926\":\"getSettings\",\"7ff8ee074a993ed534e6198ef2cce313090ab77568\":\"createTunnel\"} */ \n\n\n\n\n\n\n\n\n\n// Explicitly export all the functions to comply with \"use server\"\n\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_10__.ensureServerEntryExports)([\n    _db__WEBPACK_IMPORTED_MODULE_2__.getDb,\n    _db__WEBPACK_IMPORTED_MODULE_2__.getServersCollection,\n    _db__WEBPACK_IMPORTED_MODULE_2__.getTunnelsCollection,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.getServers,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.addServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServers,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.deleteServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.pingServer,\n    _server_actions__WEBPACK_IMPORTED_MODULE_3__.cleanupServer,\n    _ssh__WEBPACK_IMPORTED_MODULE_4__.getSshKeys,\n    _ssh__WEBPACK_IMPORTED_MODULE_4__.connectWithKeyManagement,\n    _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.getTunnels,\n    _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.deleteTunnel,\n    _tunnels_core__WEBPACK_IMPORTED_MODULE_5__.pingTunnel,\n    _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createCombinedTunnel,\n    _tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createTunnel,\n    _tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig,\n    _tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.exportSettings,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.importSettings,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.getSettings,\n    _settings_actions__WEBPACK_IMPORTED_MODULE_9__.updateSettings\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_db__WEBPACK_IMPORTED_MODULE_2__.getDb, \"7f731d7307b53943747d359198eef259b6532a15e1\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_db__WEBPACK_IMPORTED_MODULE_2__.getServersCollection, \"7fc482e843b702c9045c9984226a32bcc1e166d43d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_db__WEBPACK_IMPORTED_MODULE_2__.getTunnelsCollection, \"7f83ada983fecc1432ad5324bacf77a339f69c571c\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.getServers, \"7f2d8e6036f77b5fd66588eb105d216c77b11e89c1\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.addServer, \"7f3cbd9efaa0218cc9e9c5aadb7175823fa40a1af1\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServer, \"7f837d77cfd41e68bf898e5038551fab08fff5e900\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.updateServers, \"7fa1c00187ca1b9b3a4d1317505a5af9f21deabb78\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.deleteServer, \"7f8177d4a3f3fcfb67483c8c8343e53d500865dc0d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.pingServer, \"7f92417330105f1b204e76e5fd7595776318e5c8dc\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_server_actions__WEBPACK_IMPORTED_MODULE_3__.cleanupServer, \"7f11ded0c01e49f6cf0c66ad299189b871fc6cdde2\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_ssh__WEBPACK_IMPORTED_MODULE_4__.getSshKeys, \"7f9f7f913a288ee87005526a19431e94e90eff30fb\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_ssh__WEBPACK_IMPORTED_MODULE_4__.connectWithKeyManagement, \"7f23ed016d427802b5e2b7f947870333f894eff8ae\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_core__WEBPACK_IMPORTED_MODULE_5__.getTunnels, \"7f7f6e6c793074663c9b37c7917fbb71b08e6048e6\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_core__WEBPACK_IMPORTED_MODULE_5__.deleteTunnel, \"7fcec5d1feac68f0b9915bfb5bec156554fb89b8b3\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_core__WEBPACK_IMPORTED_MODULE_5__.pingTunnel, \"7f2edd5f0d3b53a84d7ed35a5e1cf489fe611bc138\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createCombinedTunnel, \"7feec97c627a4b0a7452123dc0d281bd5401103a55\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_creation__WEBPACK_IMPORTED_MODULE_6__.createTunnel, \"7ff8ee074a993ed534e6198ef2cce313090ab77568\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_persistence__WEBPACK_IMPORTED_MODULE_7__.saveTunnelConfig, \"7f81d73648b3f754a2add85af496782c6691b43f0d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_tunnels_netmaker__WEBPACK_IMPORTED_MODULE_8__.createMeshNetwork, \"7f31dbdc397c795414e59ff81f470d1b0c29780ab7\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.exportSettings, \"7fd4379da53355ce39f641f4205301513f4a94b702\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.importSettings, \"7fdae1b25adbe14442fbe3504bcf58b36be0763adb\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.getSettings, \"7ff769c697bf23de4409df01430da73f5538be6926\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(_settings_actions__WEBPACK_IMPORTED_MODULE_9__.updateSettings, \"7ff3ce8a3a545e42bcd6387c577734792899ce63b0\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FjdGlvbnMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUV5RTtBQVMvQztBQUNtQztBQUNTO0FBQ0U7QUFDZjtBQUNGO0FBQzBDO0FBRWpHLGtFQUFrRTtBQXlCaEU7OztJQXZCRUEsc0NBQUtBO0lBQ0xDLHFEQUFvQkE7SUFDcEJDLHFEQUFvQkE7SUFDcEJDLHVEQUFVQTtJQUNWQyxzREFBU0E7SUFDVEMseURBQVlBO0lBQ1pDLDBEQUFhQTtJQUNiQyx5REFBWUE7SUFDWkMsdURBQVVBO0lBQ1ZDLDBEQUFhQTtJQUNiQyw0Q0FBVUE7SUFDVkMsMERBQXdCQTtJQUN4QkMscURBQVVBO0lBQ1ZDLHVEQUFZQTtJQUNaQyxxREFBVUE7SUFDVkMsbUVBQW9CQTtJQUNwQkMsMkRBQVlBO0lBQ1pDLGtFQUFnQkE7SUFDaEJDLGdFQUFpQkE7SUFDakJDLDZEQUFjQTtJQUNkQyw2REFBY0E7SUFDZEMsMERBQVdBO0lBQ1hDLDZEQUFjQTs7QUF0QmR0QiwwRkFBQUEsQ0FBQUEsc0NBQUtBO0FBQ0xDLDBGQUFBQSxDQUFBQSxxREFBb0JBO0FBQ3BCQywwRkFBQUEsQ0FBQUEscURBQW9CQTtBQUNwQkMsMEZBQUFBLENBQUFBLHVEQUFVQTtBQUNWQywwRkFBQUEsQ0FBQUEsc0RBQVNBO0FBQ1RDLDBGQUFBQSxDQUFBQSx5REFBWUE7QUFDWkMsMEZBQUFBLENBQUFBLDBEQUFhQTtBQUNiQywwRkFBQUEsQ0FBQUEseURBQVlBO0FBQ1pDLDBGQUFBQSxDQUFBQSx1REFBVUE7QUFDVkMsMEZBQUFBLENBQUFBLDBEQUFhQTtBQUNiQywwRkFBQUEsQ0FBQUEsNENBQVVBO0FBQ1ZDLDBGQUFBQSxDQUFBQSwwREFBd0JBO0FBQ3hCQywwRkFBQUEsQ0FBQUEscURBQVVBO0FBQ1ZDLDBGQUFBQSxDQUFBQSx1REFBWUE7QUFDWkMsMEZBQUFBLENBQUFBLHFEQUFVQTtBQUNWQywwRkFBQUEsQ0FBQUEsbUVBQW9CQTtBQUNwQkMsMEZBQUFBLENBQUFBLDJEQUFZQTtBQUNaQywwRkFBQUEsQ0FBQUEsa0VBQWdCQTtBQUNoQkMsMEZBQUFBLENBQUFBLGdFQUFpQkE7QUFDakJDLDBGQUFBQSxDQUFBQSw2REFBY0E7QUFDZEMsMEZBQUFBLENBQUFBLDZEQUFjQTtBQUNkQywwRkFBQUEsQ0FBQUEsMERBQVdBO0FBQ1hDLDBGQUFBQSxDQUFBQSw2REFBY0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uXFxzcmNcXGFwcFxcYWN0aW9uc1xcaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInO1xuXG5pbXBvcnQgeyBnZXREYiwgZ2V0U2VydmVyc0NvbGxlY3Rpb24sIGdldFR1bm5lbHNDb2xsZWN0aW9uIH0gZnJvbSAnLi9kYic7XG5pbXBvcnQgeyBcbiAgICBnZXRTZXJ2ZXJzLCBcbiAgICBhZGRTZXJ2ZXIsIFxuICAgIHVwZGF0ZVNlcnZlciwgXG4gICAgdXBkYXRlU2VydmVycywgXG4gICAgZGVsZXRlU2VydmVyLCBcbiAgICBwaW5nU2VydmVyLCBcbiAgICBjbGVhbnVwU2VydmVyIFxufSBmcm9tICcuL3NlcnZlci1hY3Rpb25zJztcbmltcG9ydCB7IGdldFNzaEtleXMsIGNvbm5lY3RXaXRoS2V5TWFuYWdlbWVudCB9IGZyb20gJy4vc3NoJztcbmltcG9ydCB7IGdldFR1bm5lbHMsIGRlbGV0ZVR1bm5lbCwgcGluZ1R1bm5lbCB9IGZyb20gJy4vdHVubmVscy9jb3JlJztcbmltcG9ydCB7IGNyZWF0ZUNvbWJpbmVkVHVubmVsLCBjcmVhdGVUdW5uZWwgfSBmcm9tICcuL3R1bm5lbHMvY3JlYXRpb24nO1xuaW1wb3J0IHsgc2F2ZVR1bm5lbENvbmZpZyB9IGZyb20gJy4vdHVubmVscy9wZXJzaXN0ZW5jZSc7XG5pbXBvcnQgeyBjcmVhdGVNZXNoTmV0d29yayB9IGZyb20gJy4vdHVubmVscy9uZXRtYWtlcic7XG5pbXBvcnQgeyBleHBvcnRTZXR0aW5ncywgaW1wb3J0U2V0dGluZ3MsIGdldFNldHRpbmdzLCB1cGRhdGVTZXR0aW5ncyB9IGZyb20gJy4vc2V0dGluZ3MtYWN0aW9ucyc7XG5cbi8vIEV4cGxpY2l0bHkgZXhwb3J0IGFsbCB0aGUgZnVuY3Rpb25zIHRvIGNvbXBseSB3aXRoIFwidXNlIHNlcnZlclwiXG5leHBvcnQge1xuICAgIGdldERiLFxuICAgIGdldFNlcnZlcnNDb2xsZWN0aW9uLFxuICAgIGdldFR1bm5lbHNDb2xsZWN0aW9uLFxuICAgIGdldFNlcnZlcnMsXG4gICAgYWRkU2VydmVyLFxuICAgIHVwZGF0ZVNlcnZlcixcbiAgICB1cGRhdGVTZXJ2ZXJzLFxuICAgIGRlbGV0ZVNlcnZlcixcbiAgICBwaW5nU2VydmVyLFxuICAgIGNsZWFudXBTZXJ2ZXIsXG4gICAgZ2V0U3NoS2V5cyxcbiAgICBjb25uZWN0V2l0aEtleU1hbmFnZW1lbnQsXG4gICAgZ2V0VHVubmVscyxcbiAgICBkZWxldGVUdW5uZWwsXG4gICAgcGluZ1R1bm5lbCxcbiAgICBjcmVhdGVDb21iaW5lZFR1bm5lbCxcbiAgICBjcmVhdGVUdW5uZWwsXG4gICAgc2F2ZVR1bm5lbENvbmZpZyxcbiAgICBjcmVhdGVNZXNoTmV0d29yayxcbiAgICBleHBvcnRTZXR0aW5ncyxcbiAgICBpbXBvcnRTZXR0aW5ncyxcbiAgICBnZXRTZXR0aW5ncyxcbiAgICB1cGRhdGVTZXR0aW5ncyxcbn07XG4iXSwibmFtZXMiOlsiZ2V0RGIiLCJnZXRTZXJ2ZXJzQ29sbGVjdGlvbiIsImdldFR1bm5lbHNDb2xsZWN0aW9uIiwiZ2V0U2VydmVycyIsImFkZFNlcnZlciIsInVwZGF0ZVNlcnZlciIsInVwZGF0ZVNlcnZlcnMiLCJkZWxldGVTZXJ2ZXIiLCJwaW5nU2VydmVyIiwiY2xlYW51cFNlcnZlciIsImdldFNzaEtleXMiLCJjb25uZWN0V2l0aEtleU1hbmFnZW1lbnQiLCJnZXRUdW5uZWxzIiwiZGVsZXRlVHVubmVsIiwicGluZ1R1bm5lbCIsImNyZWF0ZUNvbWJpbmVkVHVubmVsIiwiY3JlYXRlVHVubmVsIiwic2F2ZVR1bm5lbENvbmZpZyIsImNyZWF0ZU1lc2hOZXR3b3JrIiwiZXhwb3J0U2V0dGluZ3MiLCJpbXBvcnRTZXR0aW5ncyIsImdldFNldHRpbmdzIiwidXBkYXRlU2V0dGluZ3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/index.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/server-actions.ts":
/*!*******************************************!*\
  !*** ./src/app/actions/server-actions.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addServer: () => (/* binding */ addServer),\n/* harmony export */   cleanupServer: () => (/* binding */ cleanupServer),\n/* harmony export */   deleteServer: () => (/* binding */ deleteServer),\n/* harmony export */   getServers: () => (/* binding */ getServers),\n/* harmony export */   pingServer: () => (/* binding */ pingServer),\n/* harmony export */   updateServer: () => (/* binding */ updateServer),\n/* harmony export */   updateServers: () => (/* binding */ updateServers)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_schemas__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/schemas */ \"(rsc)/./src/lib/schemas.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"00cfbf8ddf1bea20d18f92b5d9783c0dfd5633fd43\":\"getServers\",\"406c9c03f4fdee4fa1dda14008503373715f327593\":\"cleanupServer\",\"409e9eb99397a875d6c769b18cd0ef4dcd442d7b44\":\"pingServer\",\"409fe3dd0ce9fd6920226d4844646dd343a6abb8bf\":\"updateServers\",\"40c4f2c0fd19d586de4f58732321d3e2edda8810b2\":\"addServer\",\"40f10acc4e54c2e5dbb2fafc6f167f936fb4d12de7\":\"deleteServer\",\"60c6b4c2d9a6ec8fd0c8850e6857985693f01141b4\":\"updateServer\"} */ \n\n\n\n\n\n\n// Server Actions\nasync function getServers() {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const servers = await serversCollection.find({}).sort({\n        order: 1,\n        name: 1\n    }).toArray();\n    return servers;\n}\nasync function addServer(formData) {\n    const newServerData = {\n        name: formData.get('name'),\n        ipAddress: formData.get('ipAddress'),\n        username: formData.get('username'),\n        sshPort: formData.get('sshPort'),\n        password: formData.get('password'),\n        sshKey: formData.get('sshKey')\n    };\n    const validatedFields = _lib_schemas__WEBPACK_IMPORTED_MODULE_4__.serverSchema.safeParse(newServerData);\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors\n        };\n    }\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const newServer = {\n        name: validatedFields.data.name,\n        ipAddress: validatedFields.data.ipAddress,\n        username: validatedFields.data.username,\n        sshPort: validatedFields.data.sshPort,\n        password: validatedFields.data.password || '',\n        sshKey: validatedFields.data.sshKey || '',\n        sshKeyConfigured: false\n    };\n    await serversCollection.insertOne({\n        ...newServer,\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(),\n        id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId().toString()\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    return {\n        success: true\n    };\n}\nasync function updateServer(formData, serverId) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(serverId)) {\n        return {\n            errors: {\n                _form: [\n                    'Invalid Server ID.'\n                ]\n            }\n        };\n    }\n    const updatedServerData = {\n        name: formData.get('name'),\n        ipAddress: formData.get('ipAddress'),\n        username: formData.get('username'),\n        sshPort: formData.get('sshPort'),\n        password: formData.get('password'),\n        sshKey: formData.get('sshKey')\n    };\n    const validatedFields = _lib_schemas__WEBPACK_IMPORTED_MODULE_4__.serverSchema.safeParse(updatedServerData);\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors\n        };\n    }\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const result = await serversCollection.updateOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(serverId)\n    }, {\n        $set: {\n            ...validatedFields.data,\n            password: validatedFields.data.password || '',\n            sshKey: validatedFields.data.sshKey || ''\n        }\n    });\n    if (result.matchedCount === 0) {\n        return {\n            errors: {\n                _form: [\n                    'Server not found.'\n                ]\n            }\n        };\n    }\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    return {\n        success: true\n    };\n}\nasync function updateServers(updatedServers) {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const bulkOps = updatedServers.map((server, index)=>({\n            updateOne: {\n                filter: {\n                    _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(server.id)\n                },\n                update: {\n                    $set: {\n                        order: index\n                    }\n                }\n            }\n        }));\n    if (bulkOps.length > 0) {\n        await serversCollection.bulkWrite(bulkOps);\n    }\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n}\nasync function deleteServer(id) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id)) return;\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getTunnelsCollection)();\n    await serversCollection.deleteOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id)\n    });\n    await tunnelsCollection.deleteMany({\n        $or: [\n            {\n                server1Id: id\n            },\n            {\n                server2Id: id\n            }\n        ]\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n}\nasync function pingServer(ipAddress) {\n    try {\n        const checkHostUrl = `https://check-host.net/check-ping?host=${ipAddress}&node=ir1.node.check-host.net`;\n        const checkResponse = await fetch(checkHostUrl, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n        if (!checkResponse.ok) {\n            throw new Error(`check-host.net initial request failed with status ${checkResponse.status}`);\n        }\n        const checkData = await checkResponse.json();\n        if (checkData.ok !== 1) {\n            throw new Error(`check-host.net returned an error: ${checkData.error}`);\n        }\n        const requestId = checkData.request_id;\n        await new Promise((resolve)=>setTimeout(resolve, 3000));\n        const resultUrl = `https://check-host.net/check-result/${requestId}`;\n        const resultResponse = await fetch(resultUrl, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n        if (!resultResponse.ok) {\n            throw new Error(`check-host.net result request failed with status ${resultResponse.status}`);\n        }\n        const resultData = await resultResponse.json();\n        const pingResults = resultData['ir1.node.check-host.net'];\n        if (!pingResults) {\n            return {\n                latency: null\n            };\n        }\n        const successfulPings = pingResults[0].filter((res)=>res[0] === 'OK').map((res)=>res[1]);\n        if (successfulPings.length === 0) {\n            return {\n                latency: null\n            };\n        }\n        const avgLatency = successfulPings.reduce((a, b)=>a + b, 0) / successfulPings.length;\n        return {\n            latency: Math.round(avgLatency * 1000)\n        };\n    } catch (error) {\n        console.error(`Ping failed for ${ipAddress}:`, error);\n        return {\n            latency: null\n        };\n    }\n}\nasync function cleanupServer(serverId) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(serverId)) {\n        return {\n            success: false,\n            message: 'Invalid Server ID.',\n            logs: [\n                {\n                    type: 'error',\n                    message: 'Invalid Server ID.'\n                }\n            ]\n        };\n    }\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getServersCollection)();\n    const server = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(serverId)\n    });\n    const logs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        logs.push(entry);\n    };\n    if (!server) {\n        return {\n            success: false,\n            message: 'Server not found.',\n            logs: [\n                {\n                    type: 'error',\n                    message: 'Server not found in database.'\n                }\n            ]\n        };\n    }\n    let ssh = null;\n    try {\n        log({\n            type: 'info',\n            message: `Connecting to server ${server.name} (${server.ipAddress}) to begin cleanup...`\n        });\n        ssh = await (0,_ssh__WEBPACK_IMPORTED_MODULE_6__.connectWithKeyManagement)(server, log);\n        // اجرای همه دستورات در یک اسکریپت واحد برای سرعت بیشتر\n        const cleanupScript = `\n#!/bin/bash\nset -e\n\n# Stop and disable services\nsystemctl stop 'wg-quick@*' 'openvpn@*' ipsec v2ray 2>/dev/null || true\nsystemctl disable 'wg-quick@*' 'openvpn@*' ipsec v2ray 2>/dev/null || true\n\n# Remove configurations\nrm -rf /etc/wireguard/* /etc/openvpn/* /usr/local/etc/v2ray/* 2>/dev/null || true\nrm -f /etc/ipsec.conf /etc/ipsec.secrets /etc/network/interfaces.d/tun* 2>/dev/null || true\n\n# Delete tunnel interfaces\nfor iface in $(ip -o link show | awk -F': ' '{print $2}' | grep -E '^tun|^gre|^ipip|^sit|^vti' 2>/dev/null || true); do\n    ip link delete \"$iface\" 2>/dev/null || true\ndone\n\n# Reload systemd\nsystemctl daemon-reload 2>/dev/null || true\n\necho \"Cleanup completed successfully\"\n`;\n        log({\n            type: 'info',\n            message: 'Executing optimized cleanup script...'\n        });\n        const result = await ssh.execCommand(cleanupScript);\n        if (result.code === 0) {\n            log({\n                type: 'success',\n                message: 'All cleanup operations completed successfully.'\n            });\n        } else {\n            log({\n                type: 'warning',\n                message: `Cleanup completed with warnings: ${result.stderr || 'Unknown error'}`\n            });\n        }\n        // حذف تونل‌های مرتبط از دیتابیس\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_5__.getTunnelsCollection)();\n        const { deletedCount } = await tunnelsCollection.deleteMany({\n            $or: [\n                {\n                    server1Id: serverId\n                },\n                {\n                    server2Id: serverId\n                }\n            ]\n        });\n        if (deletedCount > 0) {\n            log({\n                type: 'success',\n                message: `${deletedCount} tunnel(s) removed from database.`\n            });\n        }\n        log({\n            type: 'success',\n            message: `Server ${server.name} has been cleaned up successfully.`\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true,\n            logs\n        };\n    } catch (e) {\n        log({\n            type: 'error',\n            message: `An error occurred: ${e.message}`\n        });\n        return {\n            success: false,\n            message: e.message || 'An unexpected error occurred.',\n            logs\n        };\n    } finally{\n        if (ssh?.isConnected()) {\n            ssh.dispose();\n        }\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__.ensureServerEntryExports)([\n    getServers,\n    addServer,\n    updateServer,\n    updateServers,\n    deleteServer,\n    pingServer,\n    cleanupServer\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getServers, \"00cfbf8ddf1bea20d18f92b5d9783c0dfd5633fd43\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(addServer, \"40c4f2c0fd19d586de4f58732321d3e2edda8810b2\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(updateServer, \"60c6b4c2d9a6ec8fd0c8850e6857985693f01141b4\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(updateServers, \"409fe3dd0ce9fd6920226d4844646dd343a6abb8bf\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(deleteServer, \"40f10acc4e54c2e5dbb2fafc6f167f936fb4d12de7\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(pingServer, \"409e9eb99397a875d6c769b18cd0ef4dcd442d7b44\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(cleanupServer, \"406c9c03f4fdee4fa1dda14008503373715f327593\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/server-actions.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/settings-actions.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/settings-actions.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportSettings: () => (/* binding */ exportSettings),\n/* harmony export */   getSettings: () => (/* binding */ getSettings),\n/* harmony export */   importSettings: () => (/* binding */ importSettings),\n/* harmony export */   updateSettings: () => (/* binding */ updateSettings)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _server_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./server-actions */ \"(rsc)/./src/app/actions/server-actions.ts\");\n/* harmony import */ var _tunnels_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tunnels/core */ \"(rsc)/./src/app/actions/tunnels/core.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"00f55f0cdd640c800a51b51aeeaf333bb889462661\":\"getSettings\",\"00f5e081870b713973dbc3e271ddda02b5a6916904\":\"exportSettings\",\"4097de45677aff4b6039dbcdeffbf7f5d93d703776\":\"updateSettings\",\"40ef21943900395634aeedbe183ab2412197ba9b20\":\"importSettings\"} */ \n\n\n\n\n\n\n\n\nconst envFilePath = path__WEBPACK_IMPORTED_MODULE_5___default().resolve(process.cwd(), '.env');\nasync function readEnvFile() {\n    try {\n        const content = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(envFilePath, 'utf-8');\n        const map = new Map();\n        content.split('\\n').forEach((line)=>{\n            if (line.trim() && !line.startsWith('#')) {\n                const [key, ...valueParts] = line.split('=');\n                if (key) {\n                    map.set(key.trim(), valueParts.join('=').trim().replace(/^\"|\"$/g, '').replace(/^'|'$/g, ''));\n                }\n            }\n        });\n        return map;\n    } catch (error) {\n        if (error.code === 'ENOENT') {\n            return new Map();\n        }\n        throw error;\n    }\n}\nasync function writeEnvFile(envMap) {\n    const content = Array.from(envMap.entries()).map(([key, value])=>`${key}=\"${value}\"`).join('\\n');\n    await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().writeFile(envFilePath, content + '\\n', 'utf-8');\n}\nasync function getSettings() {\n    const envMap = await readEnvFile();\n    return {\n        mongodbUri: envMap.get('MONGODB_URI') || '',\n        apiKey: envMap.get('API_SECRET_KEY') || '',\n        geminiApiKey: envMap.get('GEMINI_API_KEY') || ''\n    };\n}\nasync function updateSettings(settings) {\n    if (!settings.apiKey || settings.apiKey.length < 16) {\n        return {\n            success: false,\n            message: 'API Key must be at least 16 characters long.'\n        };\n    }\n    if (!settings.mongodbUri) {\n        return {\n            success: false,\n            message: 'MongoDB URI cannot be empty.'\n        };\n    }\n    try {\n        const envMap = await readEnvFile();\n        envMap.set('MONGODB_URI', settings.mongodbUri);\n        envMap.set('API_SECRET_KEY', settings.apiKey);\n        envMap.set('GEMINI_API_KEY', settings.geminiApiKey);\n        await writeEnvFile(envMap);\n        // This is a server-side environment variable, so we update the running process\n        process.env.MONGODB_URI = settings.mongodbUri;\n        process.env.API_SECRET_KEY = settings.apiKey;\n        process.env.GEMINI_API_KEY = settings.geminiApiKey;\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/'); // Revalidate to reflect changes if needed anywhere\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Failed to update settings:', error);\n        return {\n            success: false,\n            message: 'Failed to write to the environment file.'\n        };\n    }\n}\nasync function exportSettings() {\n    const servers = await (0,_server_actions__WEBPACK_IMPORTED_MODULE_6__.getServers)();\n    const tunnels = await (0,_tunnels_core__WEBPACK_IMPORTED_MODULE_7__.getTunnels)();\n    const exportedServers = servers.map(({ _id, ...s })=>({\n            ...s,\n            id: _id.toHexString()\n        }));\n    const exportedTunnels = tunnels.map(({ _id, ...t })=>({\n            ...t,\n            id: _id.toHexString()\n        }));\n    return JSON.stringify({\n        servers: exportedServers,\n        tunnels: exportedTunnels\n    }, null, 2);\n}\nasync function importSettings(jsonContent) {\n    try {\n        const data = JSON.parse(jsonContent);\n        if (!data || typeof data !== 'object' || !('servers' in data) || !('tunnels' in data) || !Array.isArray(data.servers) || !Array.isArray(data.tunnels)) {\n            throw new Error('Invalid JSON structure. The file must contain \"servers\" and \"tunnels\" arrays.');\n        }\n        const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_8__.getServersCollection)();\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_8__.getTunnelsCollection)();\n        await serversCollection.deleteMany({});\n        await tunnelsCollection.deleteMany({});\n        if (data.servers.length > 0) {\n            const serversToInsert = data.servers.map(({ id, ...s })=>({\n                    ...s,\n                    _id: mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id) ? new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id) : new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId()\n                }));\n            await serversCollection.insertMany(serversToInsert);\n        }\n        if (data.tunnels.length > 0) {\n            const tunnelsToInsert = data.tunnels.map(({ id, ...t })=>({\n                    ...t,\n                    _id: mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id) ? new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id) : new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId()\n                }));\n            await tunnelsCollection.insertMany(tunnelsToInsert);\n        }\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true\n        };\n    } catch (e) {\n        let message = 'An unexpected error occurred during import.';\n        if (e instanceof SyntaxError) {\n            message = 'The provided file is not valid JSON.';\n        } else if (e instanceof Error) {\n            message = e.message;\n        }\n        return {\n            success: false,\n            message\n        };\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__.ensureServerEntryExports)([\n    getSettings,\n    updateSettings,\n    exportSettings,\n    importSettings\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getSettings, \"00f55f0cdd640c800a51b51aeeaf333bb889462661\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(updateSettings, \"4097de45677aff4b6039dbcdeffbf7f5d93d703776\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(exportSettings, \"00f5e081870b713973dbc3e271ddda02b5a6916904\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(importSettings, \"40ef21943900395634aeedbe183ab2412197ba9b20\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/settings-actions.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/ssh.ts":
/*!********************************!*\
  !*** ./src/app/actions/ssh.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectWithKeyManagement: () => (/* binding */ connectWithKeyManagement),\n/* harmony export */   getSshKeys: () => (/* binding */ getSshKeys)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var node_ssh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node-ssh */ \"node-ssh\");\n/* harmony import */ var node_ssh__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_ssh__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"00c9e6823748a36541745bb11e17cba10849acd3ca\":\"getSshKeys\",\"600993e1eb30a690b4243c78ac9c1612781c031f04\":\"connectWithKeyManagement\"} */ \n\n\n\n\n\n\n\n\nconst SSH_KEY_PATH = path__WEBPACK_IMPORTED_MODULE_5___default().join(process.cwd(), 'ssh_keys.json');\nasync function generateSshKeyPair() {\n    try {\n        const keyPath = `/tmp/tunnelvision_key_${Date.now()}`;\n        // Generate SSH key pair\n        (0,child_process__WEBPACK_IMPORTED_MODULE_7__.execSync)(`ssh-keygen -t rsa -b 2048 -f ${keyPath} -N \"\"`, {\n            stdio: 'pipe'\n        });\n        const privateKey = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(keyPath, 'utf-8');\n        const publicKey = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(`${keyPath}.pub`, 'utf-8');\n        // Clean up temporary files\n        await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().unlink(keyPath).catch(()=>{});\n        await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().unlink(`${keyPath}.pub`).catch(()=>{});\n        return {\n            privateKey,\n            publicKey\n        };\n    } catch (error) {\n        // Fallback: generate using Node.js crypto\n        const { generateKeyPairSync } = (crypto__WEBPACK_IMPORTED_MODULE_6___default());\n        const { privateKey, publicKey } = generateKeyPairSync('rsa', {\n            modulusLength: 2048,\n            privateKeyEncoding: {\n                type: 'pkcs8',\n                format: 'pem'\n            },\n            publicKeyEncoding: {\n                type: 'spki',\n                format: 'pem'\n            }\n        });\n        // Convert to SSH format\n        const sshPublicKey = `ssh-rsa ${Buffer.from(publicKey).toString('base64')} tunnelvision@auto-generated`;\n        return {\n            privateKey,\n            publicKey: sshPublicKey\n        };\n    }\n}\nasync function getSshKeys() {\n    try {\n        const data = await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(SSH_KEY_PATH, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if (error.code === 'ENOENT') {\n            console.log(\"SSH key file not found, generating new key pair...\");\n            const newKeys = await generateSshKeyPair();\n            await fs_promises__WEBPACK_IMPORTED_MODULE_4___default().writeFile(SSH_KEY_PATH, JSON.stringify(newKeys, null, 2));\n            console.log(\"New SSH key pair generated and saved.\");\n            return newKeys;\n        }\n        throw error;\n    }\n}\nasync function connectWithKeyManagement(server, log) {\n    const ssh = new node_ssh__WEBPACK_IMPORTED_MODULE_2__.NodeSSH();\n    const keys = await getSshKeys();\n    let connectionOptions = {\n        host: server.ipAddress,\n        port: server.sshPort || 22,\n        username: server.username,\n        readyTimeout: 60000\n    };\n    const connectAndSetup = async (options, needsKeySetup = false)=>{\n        await ssh.connect(options);\n        log?.({\n            type: 'success',\n            message: `Successfully connected to server ${server.name}.`\n        });\n        if (needsKeySetup) {\n            log?.({\n                type: 'info',\n                message: 'Setting up SSH key authentication for future connections...'\n            });\n            try {\n                const authorizedKeysPath = `~/.ssh/authorized_keys`;\n                await ssh.execCommand(`mkdir -p ~/.ssh && chmod 700 ~/.ssh`);\n                const tempKeyFile = `/tmp/pubkey_${crypto__WEBPACK_IMPORTED_MODULE_6___default().randomBytes(8).toString('hex')}`;\n                await ssh.execCommand(`echo '${keys.publicKey}' > ${tempKeyFile}`);\n                await ssh.execCommand(`cat ${tempKeyFile} >> ${authorizedKeysPath} && rm ${tempKeyFile} && chmod 600 ${authorizedKeysPath}`);\n                log?.({\n                    type: 'success',\n                    message: 'SSH public key added to authorized_keys.'\n                });\n                const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_8__.getServersCollection)();\n                await serversCollection.updateOne({\n                    _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(server.id)\n                }, {\n                    $set: {\n                        sshKeyConfigured: true\n                    }\n                });\n                server.sshKeyConfigured = true;\n            } catch (setupError) {\n                log?.({\n                    type: 'warning',\n                    message: `Failed to set up SSH key automatically: ${setupError.message}`\n                });\n            }\n        }\n    };\n    if (server.sshKeyConfigured) {\n        try {\n            log?.({\n                type: 'info',\n                message: `Attempting key-based authentication for ${server.name}...`\n            });\n            connectionOptions.privateKey = keys.privateKey;\n            await connectAndSetup(connectionOptions);\n            return ssh;\n        } catch (keyError) {\n            log?.({\n                type: 'warning',\n                message: `Key-based authentication failed for ${server.name}. Falling back to other methods.`\n            });\n            if (ssh.isConnected()) ssh.dispose();\n        }\n    }\n    if (server.sshKey) {\n        try {\n            log?.({\n                type: 'info',\n                message: `Attempting connection with server-specific SSH key for ${server.name}...`\n            });\n            connectionOptions.privateKey = server.sshKey;\n            await connectAndSetup(connectionOptions, true);\n            return ssh;\n        } catch (specificKeyError) {\n            log?.({\n                type: 'warning',\n                message: `Server-specific key authentication failed for ${server.name}. Falling back to password.`\n            });\n            if (ssh.isConnected()) ssh.dispose();\n        }\n    }\n    if (server.password) {\n        try {\n            log?.({\n                type: 'info',\n                message: `Attempting password authentication for ${server.name}...`\n            });\n            connectionOptions.privateKey = undefined;\n            connectionOptions.password = server.password;\n            await connectAndSetup(connectionOptions, true);\n            return ssh;\n        } catch (passwordError) {\n            log?.({\n                type: 'error',\n                message: `Password authentication failed for ${server.name}: ${passwordError.message}`\n            });\n            if (ssh.isConnected()) ssh.dispose();\n            throw passwordError;\n        }\n    }\n    try {\n        log?.({\n            type: 'info',\n            message: `Final attempt: Trying shared key authentication for ${server.name}...`\n        });\n        connectionOptions = {\n            host: server.ipAddress,\n            port: server.sshPort || 22,\n            username: server.username,\n            readyTimeout: 60000,\n            privateKey: keys.privateKey\n        };\n        await connectAndSetup(connectionOptions);\n        return ssh;\n    } catch (finalKeyError) {\n        log?.({\n            type: 'error',\n            message: `All authentication methods have failed for ${server.name}. Please check credentials and server SSH configuration.`\n        });\n        if (ssh.isConnected()) ssh.dispose();\n        throw finalKeyError;\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_9__.ensureServerEntryExports)([\n    getSshKeys,\n    connectWithKeyManagement\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getSshKeys, \"00c9e6823748a36541745bb11e17cba10849acd3ca\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(connectWithKeyManagement, \"600993e1eb30a690b4243c78ac9c1612781c031f04\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/ssh.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/commands.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/tunnels/commands.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTunnelCommands: () => (/* binding */ getTunnelCommands)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"40bae7aa4efbd4f53f84fd4f60afdeca92ae32bc5c\":\"getTunnelCommands\"} */ \n\nasync function getTunnelCommands(options) {\n    const { tunnelType, server1, server2, ssh1, ssh2, tunnelName, tunnelIp1, tunnelIp2, domain, log } = options;\n    let commandsS1 = [];\n    let commandsS2 = [];\n    const extraLogs = [];\n    const localLog = (entry)=>extraLogs.push(entry);\n    switch(tunnelType){\n        case 'GRE':\n            // Check for existing tunnel\n            const greCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const greCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (greCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `GRE tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (greCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `GRE tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            commandsS1.push(`ip tunnel add ${tunnelName} mode gre remote ${server2.ipAddress} local ${server1.ipAddress} ttl 255`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode gre remote ${server1.ipAddress} local ${server2.ipAddress} ttl 255`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'IPIP':\n            // Check for existing tunnel\n            const ipipCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const ipipCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (ipipCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `IPIP tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (ipipCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `IPIP tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            commandsS1.push(`ip tunnel add ${tunnelName} mode ipip remote ${server2.ipAddress} local ${server1.ipAddress} ttl 255`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode ipip remote ${server1.ipAddress} local ${server2.ipAddress} ttl 255`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'SIT':\n            // Check for existing tunnel\n            const sitCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const sitCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (sitCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `SIT tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (sitCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `SIT tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            commandsS1.push(`ip tunnel add ${tunnelName} mode sit remote ${server2.ipAddress} local ${server1.ipAddress} ttl 255`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode sit remote ${server1.ipAddress} local ${server2.ipAddress} ttl 255`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'VTI':\n            // Check for existing tunnel\n            const vtiCheckS1 = await ssh1.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            const vtiCheckS2 = await ssh2.execCommand(`ip link show ${tunnelName} 2>/dev/null`);\n            if (vtiCheckS1.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `VTI tunnel ${tunnelName} already exists on ${server1.name}. Removing...`\n                });\n                await ssh1.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            if (vtiCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `VTI tunnel ${tunnelName} already exists on ${server2.name}. Removing...`\n                });\n                await ssh2.execCommand(`ip link delete ${tunnelName} 2>/dev/null || true`);\n            }\n            const vtiKey = Math.floor(Math.random() * 100000);\n            localLog({\n                type: 'info',\n                message: `Using VTI key: ${vtiKey}`\n            });\n            commandsS1.push(`ip tunnel add ${tunnelName} mode vti remote ${server2.ipAddress} local ${server1.ipAddress} key ${vtiKey}`);\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunnelName}`);\n            commandsS1.push(`ip link set ${tunnelName} up`);\n            commandsS2.push(`ip tunnel add ${tunnelName} mode vti remote ${server1.ipAddress} local ${server2.ipAddress} key ${vtiKey}`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunnelName}`);\n            commandsS2.push(`ip link set ${tunnelName} up`);\n            break;\n        case 'WireGuard':\n            localLog({\n                type: 'info',\n                message: 'Generating WireGuard keys...'\n            });\n            // Check if config already exists\n            const wgCheckS1 = await ssh1.execCommand(`test -f /etc/wireguard/${tunnelName}.conf`);\n            const wgCheckS2 = await ssh2.execCommand(`test -f /etc/wireguard/${tunnelName}.conf`);\n            if (wgCheckS1.code === 0 || wgCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `WireGuard config ${tunnelName} already exists. Removing old config...`\n                });\n                await ssh1.execCommand(`wg-quick down ${tunnelName} 2>/dev/null || true`);\n                await ssh2.execCommand(`wg-quick down ${tunnelName} 2>/dev/null || true`);\n                await ssh1.execCommand(`rm -f /etc/wireguard/${tunnelName}.conf`);\n                await ssh2.execCommand(`rm -f /etc/wireguard/${tunnelName}.conf`);\n            }\n            const s1_keys_res = await ssh1.execCommand('umask 077 && wg genkey | tee privatekey | wg pubkey > publickey && cat privatekey && cat publickey');\n            const s2_keys_res = await ssh2.execCommand('umask 077 && wg genkey | tee privatekey | wg pubkey > publickey && cat privatekey && cat publickey');\n            if (s1_keys_res.code !== 0 || s2_keys_res.code !== 0) throw new Error(`Failed to generate WireGuard keys: ${s1_keys_res.stderr} ${s2_keys_res.stderr}`);\n            const [s1_priv, s1_pub] = s1_keys_res.stdout.split('\\n');\n            const [s2_priv, s2_pub] = s2_keys_res.stdout.split('\\n');\n            localLog({\n                type: 'success',\n                message: 'WireGuard keys generated.'\n            });\n            const randomPort = ()=>Math.floor(Math.random() * (65535 - 49152 + 1)) + 49152;\n            const s1_port = randomPort();\n            const s2_port = randomPort();\n            localLog({\n                type: 'info',\n                message: `Using port ${s1_port} for ${server1.name} and port ${s2_port} for ${server2.name}`\n            });\n            const wg_s1_config = `[Interface]\\nPrivateKey = ${s1_priv}\\nAddress = ${tunnelIp1}/24\\nListenPort = ${s1_port}\\n\\n[Peer]\\nPublicKey = ${s2_pub}\\nEndpoint = ${server2.ipAddress}:${s2_port}\\nAllowedIPs = ${tunnelIp2}/32\\nPersistentKeepalive = 25`;\n            const wg_s2_config = `[Interface]\\nPrivateKey = ${s2_priv}\\nAddress = ${tunnelIp2}/24\\nListenPort = ${s2_port}\\n\\n[Peer]\\nPublicKey = ${s1_pub}\\nEndpoint = ${server1.ipAddress}:${s1_port}\\nAllowedIPs = ${tunnelIp1}/32\\nPersistentKeepalive = 25`;\n            commandsS1.push(`echo \"${wg_s1_config}\" > /etc/wireguard/${tunnelName}.conf`);\n            commandsS1.push(`wg-quick up ${tunnelName}`);\n            commandsS2.push(`echo \"${wg_s2_config}\" > /etc/wireguard/${tunnelName}.conf`);\n            commandsS2.push(`wg-quick up ${tunnelName}`);\n            break;\n        case 'OpenVPN':\n            localLog({\n                type: 'info',\n                message: 'Checking for existing OpenVPN config...'\n            });\n            // Check and stop existing OpenVPN service\n            const ovpnCheckS1 = await ssh1.execCommand(`test -f /etc/openvpn/${tunnelName}.conf`);\n            const ovpnCheckS2 = await ssh2.execCommand(`test -f /etc/openvpn/${tunnelName}.conf`);\n            if (ovpnCheckS1.code === 0 || ovpnCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `OpenVPN config ${tunnelName} already exists. Stopping old service...`\n                });\n                await ssh1.execCommand(`systemctl stop openvpn@${tunnelName} 2>/dev/null || true`);\n                await ssh2.execCommand(`systemctl stop openvpn@${tunnelName} 2>/dev/null || true`);\n                await ssh1.execCommand(`rm -f /etc/openvpn/${tunnelName}.conf`);\n                await ssh2.execCommand(`rm -f /etc/openvpn/${tunnelName}.conf`);\n            }\n            localLog({\n                type: 'info',\n                message: 'Generating OpenVPN static key...'\n            });\n            const keyRes = await ssh1.execCommand('openvpn --genkey --secret static.key && cat static.key');\n            if (keyRes.code !== 0) throw new Error(`Failed to generate OpenVPN key: ${keyRes.stderr}`);\n            const staticKey = keyRes.stdout;\n            localLog({\n                type: 'success',\n                message: 'OpenVPN static key generated.'\n            });\n            const ovpn_port = Math.floor(Math.random() * (65535 - 49152 + 1)) + 49152;\n            localLog({\n                type: 'info',\n                message: `Using port ${ovpn_port} for OpenVPN connection.`\n            });\n            localLog({\n                type: 'info',\n                message: `Copying key to ${server2.name}...`\n            });\n            await ssh2.execCommand(`echo \"${staticKey}\" > /etc/openvpn/static.key`);\n            localLog({\n                type: 'success',\n                message: `Key copied to ${server2.name}.`\n            });\n            const s1_config = `dev ${tunnelName}\\nifconfig ${tunnelIp1} ${tunnelIp2}\\nremote ${server2.ipAddress}\\nsecret /etc/openvpn/static.key\\nport ${ovpn_port}\\nproto udp\\nkeepalive 10 60\\nping-timer-rem\\npersist-tun\\npersist-key\\nverb 3`;\n            const s2_config = `dev ${tunnelName}\\nifconfig ${tunnelIp2} ${tunnelIp1}\\nremote ${server1.ipAddress}\\nsecret /etc/openvpn/static.key\\nport ${ovpn_port}\\nproto udp\\nkeepalive 10 60\\nping-timer-rem\\npersist-tun\\npersist-key\\nverb 3`;\n            commandsS1.push(`echo \"${s1_config}\" > /etc/openvpn/${tunnelName}.conf`);\n            commandsS1.push(`systemctl start openvpn@${tunnelName}`);\n            commandsS2.push(`echo \"${s2_config}\" > /etc/openvpn/${tunnelName}.conf`);\n            commandsS2.push(`systemctl start openvpn@${tunnelName}`);\n            break;\n        case 'Reverse Tunnel (via SSH)':\n            localLog({\n                type: 'info',\n                message: 'Configuring SSH Reverse Tunnel...'\n            });\n            for (const [ssh, server] of [\n                [\n                    ssh1,\n                    server1\n                ],\n                [\n                    ssh2,\n                    server2\n                ]\n            ]){\n                if (!ssh) continue;\n                localLog({\n                    type: 'info',\n                    message: `Checking for PermitTunnel on ${server.name}`\n                });\n                const checkCmd = `grep -q \"^\\\\s*PermitTunnel\\\\s*yes\" /etc/ssh/sshd_config`;\n                const checkRes = await ssh.execCommand(checkCmd);\n                if (checkRes.code !== 0) {\n                    localLog({\n                        type: 'warning',\n                        message: `PermitTunnel not enabled on ${server.name}. Attempting to enable.`\n                    });\n                    const enableCmd = `echo 'PermitTunnel yes' | sudo tee -a /etc/ssh/sshd_config && sudo systemctl restart sshd`;\n                    log({\n                        type: 'command',\n                        message: `[${server.name}] ${enableCmd}`\n                    });\n                    const enableRes = await ssh.execCommand(enableCmd);\n                    if (enableRes.code !== 0) {\n                        throw new Error(`Failed to enable PermitTunnel on ${server.name}: ${enableRes.stderr}`);\n                    }\n                    localLog({\n                        type: 'success',\n                        message: `PermitTunnel enabled and sshd restarted on ${server.name}`\n                    });\n                } else {\n                    localLog({\n                        type: 'success',\n                        message: `PermitTunnel is already enabled on ${server.name}`\n                    });\n                }\n            }\n            localLog({\n                type: 'info',\n                message: `Establishing tunnel from ${server2.name} to ${server1.name}`\n            });\n            const anyTun = 'any';\n            const sshTunnelCmd = `ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -f -w ${anyTun}:${anyTun} ${server1.username}@${server1.ipAddress} 'true'`;\n            log({\n                type: 'command',\n                message: `[${server2.name}] ${sshTunnelCmd}`\n            });\n            const sshTunnelRes = await ssh2.execCommand(sshTunnelCmd);\n            if (sshTunnelRes.code !== 0 && !sshTunnelRes.stderr.includes(\"already exists\")) {\n                throw new Error(`Failed to establish SSH tunnel from ${server2.name}: ${sshTunnelRes.stderr}`);\n            }\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            localLog({\n                type: 'success',\n                message: `SSH tunnel process initiated on ${server2.name}.`\n            });\n            const findTunS1 = await ssh1.execCommand(\"ip -o tuntap | awk '{print $1}'\");\n            const findTunS2 = await ssh2.execCommand(\"ip -o tuntap | awk '{print $1}'\");\n            const tunDeviceS1 = findTunS1.stdout.split('\\n').filter(Boolean).pop();\n            const tunDeviceS2 = findTunS2.stdout.split('\\n').filter(Boolean).pop();\n            if (!tunDeviceS1 || !tunDeviceS2) {\n                throw new Error(\"Could not determine tunnel device name after SSH tunnel creation.\");\n            }\n            localLog({\n                type: 'info',\n                message: `Found tunnel device ${tunDeviceS1} on ${server1.name}`\n            });\n            localLog({\n                type: 'info',\n                message: `Found tunnel device ${tunDeviceS2} on ${server2.name}`\n            });\n            commandsS1.push(`ip addr add ${tunnelIp1}/30 dev ${tunDeviceS1}`);\n            commandsS1.push(`ip link set ${tunDeviceS1} up`);\n            commandsS2.push(`ip addr add ${tunnelIp2}/30 dev ${tunDeviceS2}`);\n            commandsS2.push(`ip link set ${tunDeviceS2} up`);\n            break;\n        case 'IPsec':\n            localLog({\n                type: 'info',\n                message: 'Configuring IPsec tunnel using strongSwan...'\n            });\n            const connName = `conn-${tunnelName}`;\n            // Check for existing connection\n            const ipsecCheckS1 = await ssh1.execCommand(`ipsec status | grep -q \"${connName}\"`);\n            const ipsecCheckS2 = await ssh2.execCommand(`ipsec status | grep -q \"${connName}\"`);\n            if (ipsecCheckS1.code === 0 || ipsecCheckS2.code === 0) {\n                localLog({\n                    type: 'warning',\n                    message: `IPsec connection ${connName} already exists. Stopping old connection...`\n                });\n                await ssh1.execCommand(`ipsec down ${connName} 2>/dev/null || true`);\n                await ssh2.execCommand(`ipsec down ${connName} 2>/dev/null || true`);\n            }\n            localLog({\n                type: 'info',\n                message: 'Generating Pre-Shared Key (PSK)...'\n            });\n            const pskRes = await ssh1.execCommand('openssl rand -base64 32');\n            if (pskRes.code !== 0) throw new Error('Failed to generate PSK.');\n            const psk = pskRes.stdout.trim();\n            localLog({\n                type: 'success',\n                message: 'PSK generated successfully.'\n            });\n            const ipsecConfigS1 = `\nconfig setup\n    charondebug=\"all\"\n    uniqueids=yes\n    strictcrlpolicy=no\n\nconn %default\n    ikelifetime=60m\n    keylife=20m\n    rekeymargin=3m\n    keyingtries=1\n    keyexchange=ikev2\n    authby=secret\n    \nconn ${connName}\n    left=%defaultroute\n    leftid=${server1.ipAddress}\n    leftsubnet=${tunnelIp1}/32\n    right=${server2.ipAddress}\n    rightid=${server2.ipAddress}\n    rightsubnet=${tunnelIp2}/32\n    auto=start\n`;\n            const ipsecConfigS2 = `\nconfig setup\n    charondebug=\"all\"\n    uniqueids=yes\n    strictcrlpolicy=no\n\nconn %default\n    ikelifetime=60m\n    keylife=20m\n    rekeymargin=3m\n    keyingtries=1\n    keyexchange=ikev2\n    authby=secret\n    \nconn ${connName}\n    left=%defaultroute\n    leftid=${server2.ipAddress}\n    leftsubnet=${tunnelIp2}/32\n    right=${server1.ipAddress}\n    rightid=${server1.ipAddress}\n    rightsubnet=${tunnelIp1}/32\n    auto=start\n`;\n            const ipsecSecrets = `${server1.ipAddress} ${server2.ipAddress} : PSK \"${psk}\"`;\n            commandsS1.push(`echo \"${ipsecConfigS1}\" > /etc/ipsec.conf`);\n            commandsS1.push(`echo \"${ipsecSecrets}\" > /etc/ipsec.secrets`);\n            commandsS1.push('ipsec restart');\n            commandsS1.push(`ipsec up ${connName}`);\n            commandsS2.push(`echo \"${ipsecConfigS2}\" > /etc/ipsec.conf`);\n            commandsS2.push(`echo \"${ipsecSecrets}\" > /etc/ipsec.secrets`);\n            commandsS2.push('ipsec restart');\n            commandsS2.push(`ipsec up ${connName}`);\n            break;\n        case 'V2Ray (WS+TLS)':\n            if (!domain) {\n                throw new Error(\"Domain name is required for V2Ray (WS+TLS) tunnels.\");\n            }\n            localLog({\n                type: 'success',\n                message: `Using domain: ${domain}`\n            });\n            const runCommand = async (ssh, serverName, command, ignoreErrors = false)=>{\n                log({\n                    type: 'command',\n                    message: `[${serverName}] $ ${command}`\n                });\n                const result = await ssh.execCommand(command);\n                if (result.code !== 0 && !ignoreErrors) {\n                    log({\n                        type: 'error',\n                        message: `Stderr: ${result.stderr}`\n                    });\n                    throw new Error(`Command failed on ${serverName}: ${command}`);\n                }\n                if (result.stdout) localLog({\n                    type: 'success',\n                    message: result.stdout\n                });\n                return result;\n            };\n            // Check if V2Ray is already installed\n            const v2rayCheckS2 = await ssh2.execCommand('which v2ray');\n            if (v2rayCheckS2.code !== 0) {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] Installing V2Ray...`\n                });\n                await runCommand(ssh2, server2.name, 'bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)');\n                localLog({\n                    type: 'success',\n                    message: `[${server2.name}] V2Ray installed.`\n                });\n            } else {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] V2Ray already installed.`\n                });\n            }\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Setting up SSL certificate for ${domain}...`\n            });\n            // Check if certificate already exists\n            const certCheck = await ssh2.execCommand(`test -f /etc/letsencrypt/live/${domain}/fullchain.pem`);\n            let certPath = `/etc/letsencrypt/live/${domain}`;\n            if (certCheck.code !== 0) {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] Creating self-signed certificate...`\n                });\n                await runCommand(ssh2, server2.name, `mkdir -p /etc/ssl/certs/${domain}`);\n                await runCommand(ssh2, server2.name, `openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/certs/${domain}/privkey.pem -out /etc/ssl/certs/${domain}/fullchain.pem -subj \"/C=US/ST=State/L=City/O=Organization/CN=${domain}\"`);\n                certPath = `/etc/ssl/certs/${domain}`;\n                localLog({\n                    type: 'success',\n                    message: `[${server2.name}] Self-signed certificate created.`\n                });\n            } else {\n                localLog({\n                    type: 'info',\n                    message: `[${server2.name}] Using existing certificate.`\n                });\n            }\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Setting up nginx SSL config...`\n            });\n            const sslNginxConfig = `server {\n    listen 80;\n    server_name ${domain};\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ${domain};\n    \n    ssl_certificate ${certPath}/fullchain.pem;\n    ssl_certificate_key ${certPath}/privkey.pem;\n    \n    location / {\n        return 200 'OK';\n        add_header Content-Type text/plain;\n    }\n}`;\n            await runCommand(ssh2, server2.name, `echo '${sslNginxConfig}' > /etc/nginx/sites-available/default`);\n            await runCommand(ssh2, server2.name, 'systemctl restart nginx');\n            localLog({\n                type: 'success',\n                message: `[${server2.name}] SSL certificate obtained and Nginx configured by Certbot.`\n            });\n            const v2rayPath = \"/v2raypath\";\n            const v2rayPort = 10000;\n            const v2rayUUID = (await ssh1.execCommand('cat /proc/sys/kernel/random/uuid')).stdout.trim();\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Generated V2Ray UUID: ${v2rayUUID}`\n            });\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Configuring V2Ray...`\n            });\n            const v2rayConfigS2 = `\n{\n  \"inbounds\": [{\n    \"port\": ${v2rayPort},\n    \"listen\":\"127.0.0.1\",\n    \"protocol\": \"vmess\",\n    \"settings\": {\n      \"clients\": [\n        {\n          \"id\": \"${v2rayUUID}\",\n          \"alterId\": 0\n        }\n      ]\n    },\n    \"streamSettings\": {\n      \"network\": \"ws\",\n      \"wsSettings\": {\n        \"path\": \"${v2rayPath}\"\n      }\n    }\n  }],\n  \"outbounds\": [{\n    \"protocol\": \"freedom\",\n    \"settings\": {}\n  }]\n}`;\n            await runCommand(ssh2, server2.name, `echo '${v2rayConfigS2}' > /usr/local/etc/v2ray/config.json`);\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Adding V2Ray proxy location to Nginx...`\n            });\n            const nginxConfPath = `/etc/nginx/sites-available/default`;\n            const nginxV2rayLocationBlock = `\n    location ${v2rayPath} {\n      if ($http_upgrade != \"websocket\") {\n        return 404;\n      }\n      proxy_redirect off;\n      proxy_pass http://127.0.0.1:${v2rayPort};\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n`;\n            const sedCommand = `sed -i '/^\\\\s*server\\\\s*{/,$ {/}/i \\\\${nginxV2rayLocationBlock.split('\\n').join('\\\\n')}}' ${nginxConfPath}`;\n            // Remove any existing v2raypath locations to prevent duplicates\n            await runCommand(ssh2, server2.name, `sed -i '/location.*\\/v2raypath/,/^[[:space:]]*}/d' ${nginxConfPath}`, true);\n            const nginxResult = await ssh2.execCommand(`cat ${nginxConfPath}`);\n            if (nginxResult.code !== 0) {\n                throw new Error(`Failed to read Nginx config on ${server2.name}: ${nginxResult.stderr}`);\n            }\n            let nginxConf = nginxResult.stdout;\n            // Find the HTTPS server block and add location there\n            const httpsServerMatch = nginxConf.match(/(server\\s*{[^}]*listen\\s+443[^}]*)(})/);\n            if (httpsServerMatch) {\n                const beforeClosing = httpsServerMatch[1];\n                const newServerBlock = beforeClosing + nginxV2rayLocationBlock + '\\n    }';\n                nginxConf = nginxConf.replace(httpsServerMatch[0], newServerBlock);\n            } else {\n                // Fallback: add to the end of first server block\n                const lastBracketIndex = nginxConf.lastIndexOf('}');\n                nginxConf = nginxConf.slice(0, lastBracketIndex) + nginxV2rayLocationBlock + nginxConf.slice(lastBracketIndex);\n            }\n            await runCommand(ssh2, server2.name, `echo '${nginxConf.replace(/'/g, \"'\\\\''\")}' > ${nginxConfPath}`);\n            localLog({\n                type: 'success',\n                message: `[${server2.name}] V2Ray location block added to Nginx config.`\n            });\n            localLog({\n                type: 'info',\n                message: `[${server2.name}] Restarting services...`\n            });\n            await runCommand(ssh2, server2.name, 'systemctl enable v2ray && systemctl restart v2ray');\n            await runCommand(ssh2, server2.name, 'nginx -t');\n            await runCommand(ssh2, server2.name, 'systemctl restart nginx');\n            localLog({\n                type: 'success',\n                message: `[${server2.name}] V2Ray and Nginx configured and started.`\n            });\n            // Check if V2Ray is already installed on client\n            const v2rayCheckS1 = await ssh1.execCommand('which v2ray');\n            if (v2rayCheckS1.code !== 0) {\n                localLog({\n                    type: 'info',\n                    message: `[${server1.name}] Installing V2Ray...`\n                });\n                await runCommand(ssh1, server1.name, 'bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)');\n            } else {\n                localLog({\n                    type: 'info',\n                    message: `[${server1.name}] V2Ray already installed.`\n                });\n            }\n            localLog({\n                type: 'info',\n                message: `[${server1.name}] Configuring V2Ray...`\n            });\n            const v2rayConfigS1 = `\n{\n  \"inbounds\": [{\n    \"port\": 1080,\n    \"protocol\": \"socks\",\n    \"settings\": {\n      \"auth\": \"noauth\"\n    }\n  }],\n  \"outbounds\": [{\n    \"protocol\": \"vmess\",\n    \"settings\": {\n      \"vnext\": [\n        {\n          \"address\": \"${domain}\",\n          \"port\": 443,\n          \"users\": [\n            {\n              \"id\": \"${v2rayUUID}\",\n              \"alterId\": 0\n            }\n          ]\n        }\n      ]\n    },\n    \"streamSettings\": {\n      \"network\": \"ws\",\n      \"security\": \"tls\",\n      \"wsSettings\": {\n        \"path\": \"${v2rayPath}\"\n      }\n    }\n  }]\n}`;\n            await runCommand(ssh1, server1.name, `echo '${v2rayConfigS1}' > /usr/local/etc/v2ray/config.json`);\n            localLog({\n                type: 'info',\n                message: `[${server1.name}] Restarting V2Ray...`\n            });\n            await runCommand(ssh1, server1.name, 'systemctl enable v2ray && systemctl restart v2ray');\n            localLog({\n                type: 'success',\n                message: `[${server1.name}] V2Ray client configured and started.`\n            });\n            localLog({\n                type: 'warning',\n                message: `V2Ray setup complete. Use SOCKS5 proxy on ${server1.ipAddress}:1080 to route traffic through the tunnel.`\n            });\n            break;\n        default:\n            localLog({\n                type: 'error',\n                message: `Tunnel type \"${tunnelType}\" is not yet implemented.`\n            });\n            throw new Error(`Tunnel type \"${tunnelType}\" is not yet implemented.`);\n    }\n    return {\n        commandsS1,\n        commandsS2,\n        extraLogs\n    };\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_2__.ensureServerEntryExports)([\n    getTunnelCommands\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getTunnelCommands, \"40bae7aa4efbd4f53f84fd4f60afdeca92ae32bc5c\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/commands.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/core.ts":
/*!*****************************************!*\
  !*** ./src/app/actions/tunnels/core.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteTunnel: () => (/* binding */ deleteTunnel),\n/* harmony export */   getTunnels: () => (/* binding */ getTunnels),\n/* harmony export */   pingTunnel: () => (/* binding */ pingTunnel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"000ed80c6fdc077deb6fb9f565dcc135d4ff16b8bc\":\"getTunnels\",\"40b83c8d5f09b1cc3f5885bab9bded9e67a5a84bf0\":\"deleteTunnel\",\"40c576232a675aa2c82c8c794c63ed4e55bb1e928d\":\"pingTunnel\"} */ \n\n\n\n\n\n// Tunnel Actions\nasync function getTunnels() {\n    const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n    const tunnels = await tunnelsCollection.find({}).sort({\n        createdAt: -1\n    }).toArray();\n    return tunnels;\n}\nasync function deleteTunnel(id) {\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(id)) return;\n    const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n    await tunnelsCollection.deleteOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id)\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n}\nasync function pingTunnel(tunnel) {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getServersCollection)();\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(tunnel.server1Id)) return {\n        latency: null\n    };\n    const server1 = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(tunnel.server1Id)\n    });\n    if (!server1) {\n        console.error(`Server with ID ${tunnel.server1Id} not found for tunnel ping.`);\n        return {\n            latency: null\n        };\n    }\n    let ssh = null;\n    try {\n        ssh = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server1);\n        const result = await ssh.execCommand(`ping -c 1 -W 3 ${tunnel.tunnelIp2}`);\n        if (result.code !== 0) {\n            console.error(`Tunnel ping failed from ${server1.ipAddress} to ${tunnel.tunnelIp2}:`, result.stderr);\n            return {\n                latency: null\n            };\n        }\n        const match = result.stdout.match(/time=([\\d.]+) ms/);\n        if (match && match[1]) {\n            return {\n                latency: parseFloat(match[1])\n            };\n        }\n        return {\n            latency: null\n        };\n    } catch (error) {\n        console.error(`Tunnel ping failed for tunnel ${tunnel.id}:`, error);\n        return {\n            latency: null\n        };\n    } finally{\n        if (ssh?.isConnected()) {\n            ssh.dispose();\n        }\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__.ensureServerEntryExports)([\n    getTunnels,\n    deleteTunnel,\n    pingTunnel\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getTunnels, \"000ed80c6fdc077deb6fb9f565dcc135d4ff16b8bc\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(deleteTunnel, \"40b83c8d5f09b1cc3f5885bab9bded9e67a5a84bf0\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(pingTunnel, \"40c576232a675aa2c82c8c794c63ed4e55bb1e928d\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FjdGlvbnMvdHVubmVscy9jb3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU0QztBQUVUO0FBR2dDO0FBQ2pCO0FBRWxELGlCQUFpQjtBQUNWLGVBQWVLO0lBQ2xCLE1BQU1DLG9CQUFvQixNQUFNSCx5REFBb0JBO0lBQ3BELE1BQU1JLFVBQVUsTUFBTUQsa0JBQWtCRSxJQUFJLENBQUMsQ0FBQyxHQUFHQyxJQUFJLENBQUM7UUFBRUMsV0FBVyxDQUFDO0lBQUUsR0FBR0MsT0FBTztJQUNoRixPQUFPSjtBQUNYO0FBRU8sZUFBZUssYUFBYUMsRUFBVTtJQUN6QyxJQUFJLENBQUNaLDZDQUFRQSxDQUFDYSxPQUFPLENBQUNELEtBQUs7SUFDM0IsTUFBTVAsb0JBQW9CLE1BQU1ILHlEQUFvQkE7SUFDcEQsTUFBTUcsa0JBQWtCUyxTQUFTLENBQUM7UUFBRUMsS0FBSyxJQUFJZiw2Q0FBUUEsQ0FBQ1k7SUFBSTtJQUMxRGIsMERBQWNBLENBQUM7QUFDbkI7QUFFTyxlQUFlaUIsV0FBV0MsTUFBYztJQUM3QyxNQUFNQyxvQkFBb0IsTUFBTWpCLHlEQUFvQkE7SUFDcEQsSUFBSSxDQUFDRCw2Q0FBUUEsQ0FBQ2EsT0FBTyxDQUFDSSxPQUFPRSxTQUFTLEdBQUcsT0FBTztRQUFFQyxTQUFTO0lBQUs7SUFDaEUsTUFBTUMsVUFBVSxNQUFNSCxrQkFBa0JJLE9BQU8sQ0FBQztRQUFFUCxLQUFLLElBQUlmLDZDQUFRQSxDQUFDaUIsT0FBT0UsU0FBUztJQUFFO0lBRXRGLElBQUksQ0FBQ0UsU0FBUztRQUNaRSxRQUFRQyxLQUFLLENBQUMsQ0FBQyxlQUFlLEVBQUVQLE9BQU9FLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQztRQUM3RSxPQUFPO1lBQUVDLFNBQVM7UUFBSztJQUN6QjtJQUVBLElBQUlLLE1BQXNCO0lBQzFCLElBQUk7UUFDRkEsTUFBTSxNQUFNdEIsOERBQXdCQSxDQUFDa0I7UUFFckMsTUFBTUssU0FBUyxNQUFNRCxJQUFJRSxXQUFXLENBQUMsQ0FBQyxlQUFlLEVBQUVWLE9BQU9XLFNBQVMsRUFBRTtRQUV6RSxJQUFJRixPQUFPRyxJQUFJLEtBQUssR0FBRztZQUNuQk4sUUFBUUMsS0FBSyxDQUFDLENBQUMsd0JBQXdCLEVBQUVILFFBQVFTLFNBQVMsQ0FBQyxJQUFJLEVBQUViLE9BQU9XLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRUYsT0FBT0ssTUFBTTtZQUNuRyxPQUFPO2dCQUFFWCxTQUFTO1lBQUs7UUFDM0I7UUFFQSxNQUFNWSxRQUFRTixPQUFPTyxNQUFNLENBQUNELEtBQUssQ0FBQztRQUNsQyxJQUFJQSxTQUFTQSxLQUFLLENBQUMsRUFBRSxFQUFFO1lBQ25CLE9BQU87Z0JBQUVaLFNBQVNjLFdBQVdGLEtBQUssQ0FBQyxFQUFFO1lBQUU7UUFDM0M7UUFFQSxPQUFPO1lBQUVaLFNBQVM7UUFBSztJQUV6QixFQUFFLE9BQU9JLE9BQU87UUFDZEQsUUFBUUMsS0FBSyxDQUFDLENBQUMsOEJBQThCLEVBQUVQLE9BQU9MLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRVk7UUFDN0QsT0FBTztZQUFFSixTQUFTO1FBQUs7SUFDekIsU0FBVTtRQUNOLElBQUdLLEtBQUtVLGVBQWU7WUFDbkJWLElBQUlXLE9BQU87UUFDZjtJQUNKO0FBQ0Y7OztJQWpEc0JoQztJQU1BTztJQU9BSzs7QUFiQVosMEZBQUFBLENBQUFBO0FBTUFPLDBGQUFBQSxDQUFBQTtBQU9BSywwRkFBQUEsQ0FBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uXFxzcmNcXGFwcFxcYWN0aW9uc1xcdHVubmVsc1xcY29yZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IHJldmFsaWRhdGVQYXRoIH0gZnJvbSAnbmV4dC9jYWNoZSc7XG5pbXBvcnQgeyBOb2RlU1NIIH0gZnJvbSAnbm9kZS1zc2gnO1xuaW1wb3J0IHsgT2JqZWN0SWQgfSBmcm9tICdtb25nb2RiJztcblxuaW1wb3J0IHR5cGUgeyBTZXJ2ZXIsIFR1bm5lbCB9IGZyb20gJ0AvbGliL3R5cGVzJztcbmltcG9ydCB7IGdldFNlcnZlcnNDb2xsZWN0aW9uLCBnZXRUdW5uZWxzQ29sbGVjdGlvbiB9IGZyb20gJy4uL2RiJztcbmltcG9ydCB7IGNvbm5lY3RXaXRoS2V5TWFuYWdlbWVudCB9IGZyb20gJy4uL3NzaCc7XG5cbi8vIFR1bm5lbCBBY3Rpb25zXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VHVubmVscygpOiBQcm9taXNlPFR1bm5lbFtdPiB7XG4gICAgY29uc3QgdHVubmVsc0NvbGxlY3Rpb24gPSBhd2FpdCBnZXRUdW5uZWxzQ29sbGVjdGlvbigpO1xuICAgIGNvbnN0IHR1bm5lbHMgPSBhd2FpdCB0dW5uZWxzQ29sbGVjdGlvbi5maW5kKHt9KS5zb3J0KHsgY3JlYXRlZEF0OiAtMSB9KS50b0FycmF5KCk7XG4gICAgcmV0dXJuIHR1bm5lbHMgYXMgVHVubmVsW107XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVUdW5uZWwoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICghT2JqZWN0SWQuaXNWYWxpZChpZCkpIHJldHVybjtcbiAgICBjb25zdCB0dW5uZWxzQ29sbGVjdGlvbiA9IGF3YWl0IGdldFR1bm5lbHNDb2xsZWN0aW9uKCk7XG4gICAgYXdhaXQgdHVubmVsc0NvbGxlY3Rpb24uZGVsZXRlT25lKHsgX2lkOiBuZXcgT2JqZWN0SWQoaWQpIH0pO1xuICAgIHJldmFsaWRhdGVQYXRoKCcvJyk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwaW5nVHVubmVsKHR1bm5lbDogVHVubmVsKTogUHJvbWlzZTx7IGxhdGVuY3k6IG51bWJlciB8IG51bGwgfT4ge1xuICBjb25zdCBzZXJ2ZXJzQ29sbGVjdGlvbiA9IGF3YWl0IGdldFNlcnZlcnNDb2xsZWN0aW9uKCk7XG4gIGlmICghT2JqZWN0SWQuaXNWYWxpZCh0dW5uZWwuc2VydmVyMUlkKSkgcmV0dXJuIHsgbGF0ZW5jeTogbnVsbCB9O1xuICBjb25zdCBzZXJ2ZXIxID0gYXdhaXQgc2VydmVyc0NvbGxlY3Rpb24uZmluZE9uZSh7IF9pZDogbmV3IE9iamVjdElkKHR1bm5lbC5zZXJ2ZXIxSWQpIH0pO1xuXG4gIGlmICghc2VydmVyMSkge1xuICAgIGNvbnNvbGUuZXJyb3IoYFNlcnZlciB3aXRoIElEICR7dHVubmVsLnNlcnZlcjFJZH0gbm90IGZvdW5kIGZvciB0dW5uZWwgcGluZy5gKTtcbiAgICByZXR1cm4geyBsYXRlbmN5OiBudWxsIH07XG4gIH1cbiAgXG4gIGxldCBzc2g6IE5vZGVTU0ggfCBudWxsID0gbnVsbDtcbiAgdHJ5IHtcbiAgICBzc2ggPSBhd2FpdCBjb25uZWN0V2l0aEtleU1hbmFnZW1lbnQoc2VydmVyMSk7XG4gICAgXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc3NoLmV4ZWNDb21tYW5kKGBwaW5nIC1jIDEgLVcgMyAke3R1bm5lbC50dW5uZWxJcDJ9YCk7XG4gICAgXG4gICAgaWYgKHJlc3VsdC5jb2RlICE9PSAwKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYFR1bm5lbCBwaW5nIGZhaWxlZCBmcm9tICR7c2VydmVyMS5pcEFkZHJlc3N9IHRvICR7dHVubmVsLnR1bm5lbElwMn06YCwgcmVzdWx0LnN0ZGVycik7XG4gICAgICAgIHJldHVybiB7IGxhdGVuY3k6IG51bGwgfTtcbiAgICB9XG5cbiAgICBjb25zdCBtYXRjaCA9IHJlc3VsdC5zdGRvdXQubWF0Y2goL3RpbWU9KFtcXGQuXSspIG1zLyk7XG4gICAgaWYgKG1hdGNoICYmIG1hdGNoWzFdKSB7XG4gICAgICAgIHJldHVybiB7IGxhdGVuY3k6IHBhcnNlRmxvYXQobWF0Y2hbMV0pIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgbGF0ZW5jeTogbnVsbCB9O1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihgVHVubmVsIHBpbmcgZmFpbGVkIGZvciB0dW5uZWwgJHt0dW5uZWwuaWR9OmAsIGVycm9yKTtcbiAgICByZXR1cm4geyBsYXRlbmN5OiBudWxsIH07XG4gIH0gZmluYWxseSB7XG4gICAgICBpZihzc2g/LmlzQ29ubmVjdGVkKCkpIHtcbiAgICAgICAgICBzc2guZGlzcG9zZSgpO1xuICAgICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsicmV2YWxpZGF0ZVBhdGgiLCJPYmplY3RJZCIsImdldFNlcnZlcnNDb2xsZWN0aW9uIiwiZ2V0VHVubmVsc0NvbGxlY3Rpb24iLCJjb25uZWN0V2l0aEtleU1hbmFnZW1lbnQiLCJnZXRUdW5uZWxzIiwidHVubmVsc0NvbGxlY3Rpb24iLCJ0dW5uZWxzIiwiZmluZCIsInNvcnQiLCJjcmVhdGVkQXQiLCJ0b0FycmF5IiwiZGVsZXRlVHVubmVsIiwiaWQiLCJpc1ZhbGlkIiwiZGVsZXRlT25lIiwiX2lkIiwicGluZ1R1bm5lbCIsInR1bm5lbCIsInNlcnZlcnNDb2xsZWN0aW9uIiwic2VydmVyMUlkIiwibGF0ZW5jeSIsInNlcnZlcjEiLCJmaW5kT25lIiwiY29uc29sZSIsImVycm9yIiwic3NoIiwicmVzdWx0IiwiZXhlY0NvbW1hbmQiLCJ0dW5uZWxJcDIiLCJjb2RlIiwiaXBBZGRyZXNzIiwic3RkZXJyIiwibWF0Y2giLCJzdGRvdXQiLCJwYXJzZUZsb2F0IiwiaXNDb25uZWN0ZWQiLCJkaXNwb3NlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/core.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/creation.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/tunnels/creation.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCombinedTunnel: () => (/* binding */ createCombinedTunnel),\n/* harmony export */   createTunnel: () => (/* binding */ createTunnel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands */ \"(rsc)/./src/app/actions/tunnels/commands.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"786acde69fe9a2898968aa8ff6ac0b4d5fa5ef34d7\":\"createTunnel\",\"7e7f985842e37947e0ef423ea7032a0ffeb5fc090d\":\"createCombinedTunnel\"} */ \n\n\n\n\n\n\nasync function createCombinedTunnel(server1, server2, server3, tunnelType1, tunnelType2, domain) {\n    const combinedLogs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        combinedLogs.push(entry);\n    };\n    log({\n        type: 'info',\n        message: `Starting combined tunnel creation: ${server1.name} -> ${server2.name} -> ${server3.name}`\n    });\n    log({\n        type: 'info',\n        message: `--- Creating Tunnel 1: ${server1.name} to ${server2.name} (${tunnelType1}) ---`\n    });\n    const result1 = await createTunnel(server1, server2, tunnelType1, domain);\n    combinedLogs.push(...result1.logs);\n    if (!result1.success) {\n        log({\n            type: 'error',\n            message: 'Failed to create the first tunnel. Aborting combined tunnel creation.'\n        });\n        return {\n            success: false,\n            logs: combinedLogs\n        };\n    }\n    log({\n        type: 'success',\n        message: `--- Tunnel 1 (${server1.name} -> ${server2.name}) created successfully. ---`\n    });\n    log({\n        type: 'info',\n        message: `--- Creating Tunnel 2: ${server2.name} to ${server3.name} (${tunnelType2}) ---`\n    });\n    const result2 = await createTunnel(server2, server3, tunnelType2, domain);\n    combinedLogs.push(...result2.logs);\n    if (!result2.success) {\n        log({\n            type: 'error',\n            message: 'Failed to create the second tunnel. The first tunnel was created, but the chain is incomplete.'\n        });\n        return {\n            success: false,\n            logs: combinedLogs\n        };\n    }\n    log({\n        type: 'success',\n        message: `--- Tunnel 2 (${server2.name} -> ${server3.name}) created successfully. ---`\n    });\n    log({\n        type: 'success',\n        message: 'Combined tunnel creation process completed successfully!'\n    });\n    (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    return {\n        success: true,\n        logs: combinedLogs\n    };\n}\nasync function createTunnel(server1, server2, tunnelType, domain) {\n    const logs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        logs.push(entry);\n    };\n    let ssh1 = null;\n    let ssh2 = null;\n    const tunnelName = `tun${Math.floor(Math.random() * 1000)}`;\n    const randomOctet = ()=>Math.floor(Math.random() * 253) + 1;\n    const subnet = randomOctet();\n    const tunnelIp1 = `10.0.${subnet}.1`;\n    const tunnelIp2 = `10.0.${subnet}.2`;\n    try {\n        log({\n            type: 'info',\n            message: 'Starting tunnel creation process...'\n        });\n        log({\n            type: 'info',\n            message: `Tunnel type: ${tunnelType}`\n        });\n        log({\n            type: 'info',\n            message: `Server 1: ${server1.name} (${server1.ipAddress})`\n        });\n        log({\n            type: 'info',\n            message: `Server 2: ${server2.name} (${server2.ipAddress})`\n        });\n        log({\n            type: 'info',\n            message: `Using tunnel name: ${tunnelName}`\n        });\n        log({\n            type: 'success',\n            message: `Server 1 Tunnel IP: ${tunnelIp1}`\n        });\n        log({\n            type: 'success',\n            message: `Server 2 Tunnel IP: ${tunnelIp2}`\n        });\n        log({\n            type: 'info',\n            message: `Connecting to ${server1.name}...`\n        });\n        ssh1 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server1, log);\n        log({\n            type: 'success',\n            message: `Connected to ${server1.name}`\n        });\n        log({\n            type: 'info',\n            message: `Connecting to ${server2.name}...`\n        });\n        ssh2 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server2, log);\n        log({\n            type: 'success',\n            message: `Connected to ${server2.name}`\n        });\n        log({\n            type: 'info',\n            message: `Selected tunnel type: ${tunnelType}`\n        });\n        const depsMap = {\n            'WireGuard': [\n                'wireguard-tools'\n            ],\n            'OpenVPN': [\n                'openvpn'\n            ],\n            'IPsec': [\n                'strongswan'\n            ],\n            'V2Ray (WS+TLS)': [\n                'curl',\n                'nginx',\n                'certbot',\n                'python3-certbot-nginx'\n            ]\n        };\n        const requiredDeps = depsMap[tunnelType] || [];\n        if (requiredDeps.length > 0) {\n            log({\n                type: 'info',\n                message: 'Checking and installing dependencies...'\n            });\n            const serversToProcess = [\n                {\n                    ssh: ssh1,\n                    server: server1,\n                    deps: requiredDeps\n                },\n                {\n                    ssh: ssh2,\n                    server: server2,\n                    deps: requiredDeps\n                }\n            ];\n            // Special handling for V2Ray: server1 (client) only needs curl.\n            if (tunnelType === 'V2Ray (WS+TLS)') {\n                serversToProcess[0].deps = [\n                    'curl'\n                ];\n            }\n            for (const { ssh, server, deps } of serversToProcess){\n                if (!ssh) continue;\n                let needsUpdate = false;\n                const depsToInstall = [];\n                for (const dep of deps){\n                    log({\n                        type: 'command',\n                        message: `[${server.name}] Checking for ${dep}...`\n                    });\n                    const checkResult = await ssh.execCommand(`dpkg -s ${dep}`);\n                    if (checkResult.code !== 0) {\n                        log({\n                            type: 'warning',\n                            message: `Dependency '${dep}' not found on ${server.name}. It will be installed.`\n                        });\n                        depsToInstall.push(dep);\n                        needsUpdate = true;\n                    } else {\n                        log({\n                            type: 'success',\n                            message: `Dependency '${dep}' is already installed on ${server.name}.`\n                        });\n                    }\n                }\n                if (depsToInstall.length > 0) {\n                    if (needsUpdate) {\n                        log({\n                            type: 'command',\n                            message: `[${server.name}] Running apt-get update...`\n                        });\n                        const updateResult = await ssh.execCommand('apt-get update');\n                        if (updateResult.code !== 0) {\n                            throw new Error(`Failed to run apt-get update on ${server.name}: ${updateResult.stderr}`);\n                        }\n                        log({\n                            type: 'success',\n                            message: `[${server.name}] Package list updated.`\n                        });\n                    }\n                    const installCmd = `apt-get install -y ${depsToInstall.join(' ')}`;\n                    log({\n                        type: 'command',\n                        message: `[${server.name}] ${installCmd}`\n                    });\n                    const installResult = await ssh.execCommand(installCmd);\n                    if (installResult.code !== 0) {\n                        throw new Error(`Failed to install dependencies on ${server.name}: ${installResult.stderr}`);\n                    }\n                    log({\n                        type: 'success',\n                        message: `[${server.name}] Dependencies installed successfully.`\n                    });\n                }\n            }\n        }\n        log({\n            type: 'info',\n            message: 'Generating tunnel commands...'\n        });\n        const { commandsS1, commandsS2, extraLogs } = await (0,_commands__WEBPACK_IMPORTED_MODULE_6__.getTunnelCommands)({\n            tunnelType,\n            server1,\n            server2,\n            ssh1,\n            ssh2,\n            tunnelName,\n            tunnelIp1,\n            tunnelIp2,\n            domain,\n            log\n        });\n        logs.push(...extraLogs);\n        log({\n            type: 'success',\n            message: 'Tunnel commands generated successfully'\n        });\n        if (tunnelType !== 'V2Ray (WS+TLS)') {\n            log({\n                type: 'info',\n                message: `Configuring tunnel on ${server1.name}...`\n            });\n            for (const cmd of commandsS1){\n                log({\n                    type: 'command',\n                    message: `[${server1.name}] ${cmd}`\n                });\n                const result = await ssh1.execCommand(cmd);\n                if (result.code !== 0) {\n                    log({\n                        type: 'error',\n                        message: `Stderr: ${result.stderr}`\n                    });\n                    throw new Error(`Command failed on ${server1.name}: ${cmd}`);\n                }\n                log({\n                    type: 'success',\n                    message: result.stdout || `Command executed successfully.`\n                });\n            }\n            log({\n                type: 'success',\n                message: `Tunnel configured on ${server1.name}.`\n            });\n            log({\n                type: 'info',\n                message: `Configuring tunnel on ${server2.name}...`\n            });\n            for (const cmd of commandsS2){\n                log({\n                    type: 'command',\n                    message: `[${server2.name}] ${cmd}`\n                });\n                const result = await ssh2.execCommand(cmd);\n                if (result.code !== 0) {\n                    log({\n                        type: 'error',\n                        message: `Stderr: ${result.stderr}`\n                    });\n                    throw new Error(`Command failed on ${server2.name}: ${cmd}`);\n                }\n                log({\n                    type: 'success',\n                    message: result.stdout || `Command executed successfully.`\n                });\n            }\n            log({\n                type: 'success',\n                message: `Tunnel configured on ${server2.name}.`\n            });\n        }\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n        log({\n            type: 'info',\n            message: 'Saving tunnel configuration...'\n        });\n        const newTunnelData = {\n            server1Id: server1.id,\n            server2Id: server2.id,\n            type: tunnelType,\n            createdAt: new Date().toISOString(),\n            isSaved: false,\n            tunnelName,\n            tunnelIp1,\n            tunnelIp2,\n            domain: tunnelType === 'V2Ray (WS+TLS)' ? domain : undefined\n        };\n        const { insertedId } = await tunnelsCollection.insertOne({\n            ...newTunnelData,\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(),\n            id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId().toString()\n        });\n        log({\n            type: 'success',\n            message: 'Tunnel configuration saved.'\n        });\n        log({\n            type: 'success',\n            message: 'Tunnel creation process completed successfully!'\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true,\n            logs\n        };\n    } catch (e) {\n        log({\n            type: 'error',\n            message: `Error: ${e.message || 'An unexpected error occurred during tunnel creation.'}`\n        });\n        log({\n            type: 'error',\n            message: `Stack: ${e.stack || 'No stack trace available'}`\n        });\n        log({\n            type: 'error',\n            message: 'Tunnel creation process failed. Please review the logs.'\n        });\n        return {\n            success: false,\n            logs\n        };\n    } finally{\n        try {\n            if (ssh1?.isConnected()) {\n                log({\n                    type: 'info',\n                    message: `Disconnecting from ${server1.name}...`\n                });\n                ssh1.dispose();\n            }\n            if (ssh2?.isConnected()) {\n                log({\n                    type: 'info',\n                    message: `Disconnecting from ${server2.name}...`\n                });\n                ssh2.dispose();\n            }\n        } catch (cleanupError) {\n            log({\n                type: 'warning',\n                message: `Cleanup error: ${cleanupError.message}`\n            });\n        }\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__.ensureServerEntryExports)([\n    createCombinedTunnel,\n    createTunnel\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(createCombinedTunnel, \"7e7f985842e37947e0ef423ea7032a0ffeb5fc090d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(createTunnel, \"786acde69fe9a2898968aa8ff6ac0b4d5fa5ef34d7\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/creation.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/netmaker.ts":
/*!*********************************************!*\
  !*** ./src/app/actions/tunnels/netmaker.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMeshNetwork: () => (/* binding */ createMeshNetwork)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"60ad97c4f82abfa4e725da4b0637eb078a2d44b45f\":\"createMeshNetwork\"} */ \n\n\n\n\n\n\nfunction generateKeys() {\n    const privateKey = (0,child_process__WEBPACK_IMPORTED_MODULE_6__.execSync)('wg genkey', {\n        encoding: 'utf8'\n    }).trim();\n    const publicKey = (0,child_process__WEBPACK_IMPORTED_MODULE_6__.execSync)(`echo '${privateKey}' | wg pubkey`, {\n        encoding: 'utf8'\n    }).trim();\n    return {\n        privateKey,\n        publicKey\n    };\n}\nasync function generateSimpleNetmakerConfig(input) {\n    const brokerKeys = generateKeys();\n    const brokerIp = '10.20.0.1';\n    const clientConfigs = input.clients.map((client, index)=>{\n        const clientKeys = generateKeys();\n        const clientIp = `10.20.0.${index + 2}`;\n        const configFile = `[Interface]\\nPrivateKey = ${clientKeys.privateKey}\\nAddress = ${clientIp}/24\\n\\n[Peer]\\nPublicKey = ${brokerKeys.publicKey}\\nEndpoint = ${input.broker.ipAddress}:${input.listenPort}\\nAllowedIPs = 10.20.0.0/24\\nPersistentKeepalive = 25`;\n        return {\n            serverId: client.id,\n            configFile,\n            keys: clientKeys,\n            address: clientIp\n        };\n    });\n    const brokerPeers = clientConfigs.map((c)=>`[Peer]\\nPublicKey = ${c.keys.publicKey}\\nAllowedIPs = ${c.address}/32`).join('\\n\\n');\n    const brokerConfig = {\n        serverId: input.broker.id,\n        configFile: `[Interface]\\nPrivateKey = ${brokerKeys.privateKey}\\nAddress = ${brokerIp}/24\\nListenPort = ${input.listenPort}\\n\\n${brokerPeers}`,\n        keys: brokerKeys,\n        address: brokerIp\n    };\n    return {\n        brokerConfig,\n        clientConfigs\n    };\n}\nasync function executeCommand(ssh, command, serverName, log) {\n    log({\n        type: 'command',\n        message: `[${serverName}] $ ${command}`\n    });\n    const result = await ssh.execCommand(command);\n    if (result.code !== 0) {\n        log({\n            type: 'error',\n            message: `Stderr on ${serverName}: ${result.stderr}`\n        });\n        throw new Error(`Command failed on ${serverName}: ${command}`);\n    }\n    log({\n        type: 'success',\n        message: `[${serverName}] Command executed successfully.`\n    });\n    return result.stdout;\n}\nasync function createMeshNetwork(broker, clients) {\n    const logs = [];\n    const log = (entry)=>{\n        console.log(`[${entry.type}] ${entry.message}`);\n        logs.push(entry);\n    };\n    const sshConnections = {};\n    try {\n        log({\n            type: 'info',\n            message: 'Starting Netmaker mesh network creation...'\n        });\n        // 1. Generate all configs (fallback implementation)\n        log({\n            type: 'info',\n            message: 'Generating WireGuard configurations...'\n        });\n        const networkConfig = await generateSimpleNetmakerConfig({\n            broker: {\n                id: broker.id,\n                name: broker.name,\n                ipAddress: broker.ipAddress\n            },\n            clients: clients.map((c)=>({\n                    id: c.id,\n                    name: c.name,\n                    ipAddress: c.ipAddress\n                })),\n            networkBaseIp: '10.20.0.0',\n            listenPort: 51820\n        });\n        log({\n            type: 'success',\n            message: 'WireGuard configurations generated.'\n        });\n        // 2. Connect to all servers\n        const allServers = [\n            broker,\n            ...clients\n        ];\n        for (const server of allServers){\n            log({\n                type: 'info',\n                message: `Connecting to ${server.name}...`\n            });\n            sshConnections[server.id] = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server, log);\n            log({\n                type: 'success',\n                message: `Connected to ${server.name}.`\n            });\n        }\n        // 3. Install WireGuard on all servers\n        for (const server of allServers){\n            log({\n                type: 'info',\n                message: `Checking dependencies on ${server.name}...`\n            });\n            const ssh = sshConnections[server.id];\n            await executeCommand(ssh, 'apt-get update', server.name, log);\n            await executeCommand(ssh, 'apt-get install -y wireguard-tools', server.name, log);\n            log({\n                type: 'success',\n                message: `WireGuard is ready on ${server.name}.`\n            });\n        }\n        const tunnelName = \"nm0\"; // Static name for the Netmaker interface\n        // 4. Configure Broker\n        log({\n            type: 'info',\n            message: `Configuring broker server: ${broker.name}...`\n        });\n        const brokerSsh = sshConnections[broker.id];\n        await executeCommand(brokerSsh, `echo \"${networkConfig.brokerConfig.configFile}\" > /etc/wireguard/${tunnelName}.conf`, broker.name, log);\n        await executeCommand(brokerSsh, `wg-quick up ${tunnelName}`, broker.name, log);\n        await executeCommand(brokerSsh, `systemctl enable wg-quick@${tunnelName}`, broker.name, log);\n        log({\n            type: 'success',\n            message: `Broker ${broker.name} configured and tunnel is up.`\n        });\n        // 5. Configure Clients\n        for (const clientConfig of networkConfig.clientConfigs){\n            const clientServer = clients.find((c)=>c.id === clientConfig.serverId);\n            if (!clientServer) {\n                log({\n                    type: 'error',\n                    message: `Configuration generated for an unknown client ID: ${clientConfig.serverId}`\n                });\n                continue;\n            }\n            log({\n                type: 'info',\n                message: `Configuring client server: ${clientServer.name}...`\n            });\n            const clientSsh = sshConnections[clientServer.id];\n            await executeCommand(clientSsh, `echo \"${clientConfig.configFile}\" > /etc/wireguard/${tunnelName}.conf`, clientServer.name, log);\n            await executeCommand(clientSsh, `wg-quick up ${tunnelName}`, clientServer.name, log);\n            await executeCommand(clientSsh, `systemctl enable wg-quick@${tunnelName}`, clientServer.name, log);\n            log({\n                type: 'success',\n                message: `Client ${clientServer.name} configured and tunnel is up.`\n            });\n        }\n        // 6. Save tunnels to DB for visualization (each client to broker)\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n        const tunnelDocs = networkConfig.clientConfigs.map((clientConfig)=>({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(),\n                id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId().toString(),\n                server1Id: clientConfig.serverId,\n                server2Id: broker.id,\n                type: 'WireGuard',\n                createdAt: new Date().toISOString(),\n                isSaved: true,\n                tunnelName: `${tunnelName}-${clientConfig.serverId.substring(0, 4)}`,\n                tunnelIp1: clientConfig.address,\n                tunnelIp2: networkConfig.brokerConfig.address\n            }));\n        if (tunnelDocs.length > 0) {\n            await tunnelsCollection.insertMany(tunnelDocs);\n            log({\n                type: 'info',\n                message: `Saved ${tunnelDocs.length} client-broker tunnel configurations to the database.`\n            });\n        }\n        log({\n            type: 'success',\n            message: 'Netmaker mesh network created successfully!'\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true,\n            logs\n        };\n    } catch (e) {\n        log({\n            type: 'error',\n            message: `Mesh creation failed: ${e.message}`\n        });\n        return {\n            success: false,\n            logs\n        };\n    } finally{\n        for (const ssh of Object.values(sshConnections)){\n            if (ssh.isConnected()) {\n                ssh.dispose();\n            }\n        }\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_7__.ensureServerEntryExports)([\n    createMeshNetwork\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(createMeshNetwork, \"60ad97c4f82abfa4e725da4b0637eb078a2d44b45f\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/netmaker.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/actions/tunnels/persistence.ts":
/*!************************************************!*\
  !*** ./src/app/actions/tunnels/persistence.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   saveTunnelConfig: () => (/* binding */ saveTunnelConfig)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../db */ \"(rsc)/./src/app/actions/db.ts\");\n/* harmony import */ var _ssh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ssh */ \"(rsc)/./src/app/actions/ssh.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"40489b8faa7a7cebcd6457d02a4950f55b6e81a586\":\"saveTunnelConfig\"} */ \n\n\n\n\n\nasync function saveTunnelConfig(tunnel) {\n    const serversCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getServersCollection)();\n    if (!mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(tunnel.server1Id) || !mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId.isValid(tunnel.server2Id)) {\n        return {\n            success: false,\n            message: 'Invalid server ID in tunnel data.'\n        };\n    }\n    const server1 = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(tunnel.server1Id)\n    });\n    const server2 = await serversCollection.findOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(tunnel.server2Id)\n    });\n    if (!server1 || !server2) {\n        return {\n            success: false,\n            message: 'Source or destination server not found.'\n        };\n    }\n    let ssh1 = null;\n    let ssh2 = null;\n    try {\n        ssh1 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server1);\n        ssh2 = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.connectWithKeyManagement)(server2);\n        const { tunnelName, tunnelIp1, tunnelIp2, type, id } = tunnel;\n        const run = async (ssh, cmd)=>{\n            const result = await ssh.execCommand(cmd);\n            if (result.code !== 0) {\n                throw new Error(`Failed to run '${cmd}' on server: ${result.stderr}`);\n            }\n            return result.stdout;\n        };\n        switch(type){\n            case 'GRE':\n            case 'IPIP':\n            case 'SIT':\n            case 'VTI':\n                const mode = type.toLowerCase();\n                const configPathS1 = `/etc/network/interfaces.d/${tunnelName}`;\n                const configPathS2 = `/etc/network/interfaces.d/${tunnelName}`;\n                const baseConfig = (local, remote, address, key)=>`auto ${tunnelName}\\niface ${tunnelName} inet tunnel\\nmode ${mode}\\nlocal ${local}\\nremote ${remote}\\naddress ${address}\\nnetmask 255.255.255.252\\nttl 255\\n` + (key ? `ikey ${key}\\nokey ${key}\\n` : '') + `up ip link set dev ${tunnelName} up`;\n                const vtiKey = type === 'VTI' ? Math.floor(Math.random() * 100000) : undefined;\n                const configS1 = baseConfig(server1.ipAddress, server2.ipAddress, tunnelIp1, vtiKey);\n                const configS2 = baseConfig(server2.ipAddress, server1.ipAddress, tunnelIp2, vtiKey);\n                await run(ssh1, `echo -e \"${configS1}\" | sudo tee ${configPathS1}`);\n                await run(ssh2, `echo -e \"${configS2}\" | sudo tee ${configPathS2}`);\n                break;\n            case 'OpenVPN':\n            case 'WireGuard':\n                const serviceNameWG = type === 'OpenVPN' ? `openvpn@${tunnelName}` : `wg-quick@${tunnelName}`;\n                await run(ssh1, `sudo systemctl enable ${serviceNameWG}`);\n                await run(ssh2, `sudo systemctl enable ${serviceNameWG}`);\n                break;\n            case 'IPsec':\n                await run(ssh1, `sudo systemctl enable ipsec`);\n                await run(ssh2, `sudo systemctl enable ipsec`);\n                break;\n            case 'Reverse Tunnel (via SSH)':\n                const serviceNameR = `reverse-tunnel-${server1.name.replace(/\\s/g, '_')}.service`;\n                const servicePath = `/etc/systemd/system/${serviceNameR}`;\n                const { privateKey } = await (0,_ssh__WEBPACK_IMPORTED_MODULE_5__.getSshKeys)();\n                // Important: The user running the service on server2 needs the key.\n                const remoteKeyPath = `/home/${server2.username}/.ssh/reverse_tunnel_key_${tunnel.id}`;\n                await run(ssh2, `mkdir -p /home/${server2.username}/.ssh && chmod 700 /home/${server2.username}/.ssh`);\n                // Write the private key content directly\n                await run(ssh2, `echo '${privateKey.replace(/'/g, \"'\\\\''\")}' > ${remoteKeyPath} && chmod 600 ${remoteKeyPath}`);\n                const sshCommand = `/usr/bin/ssh -o \"ServerAliveInterval=60\" -o \"ExitOnForwardFailure=yes\" -o \"StrictHostKeyChecking=no\" -i ${remoteKeyPath} -w any:any ${server1.username}@${server1.ipAddress} 'true'`;\n                const serviceFileContent = `\n[Unit]\nDescription=Reverse SSH tunnel to ${server1.name}\nWants=network-online.target\nAfter=network-online.target\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nUser=${server2.username}\nExecStart=${sshCommand}\nRestart=always\nRestartSec=15\n\n[Install]\nWantedBy=multi-user.target\n`;\n                await run(ssh2, `echo '${serviceFileContent.replace(/'/g, \"'\\\\''\")}' | sudo tee ${servicePath}`);\n                await run(ssh2, `sudo systemctl daemon-reload`);\n                await run(ssh2, `sudo systemctl enable ${serviceNameR}`);\n                await run(ssh2, `sudo systemctl restart ${serviceNameR}`);\n                await new Promise((r)=>setTimeout(r, 2000));\n                const configureInterface = async (ssh, ip, serverName)=>{\n                    const findTunCmd = \"ip -o tuntap | awk '{print $1; exit}'\";\n                    let tunDevice = '';\n                    for(let i = 0; i < 5; i++){\n                        tunDevice = (await run(ssh, findTunCmd)).trim();\n                        if (tunDevice) break;\n                        await new Promise((r)=>setTimeout(r, 1000));\n                    }\n                    if (tunDevice) {\n                        await run(ssh, `ip addr add ${ip}/30 dev ${tunDevice}`);\n                        await run(ssh, `ip link set ${tunDevice} up`);\n                    } else {\n                        throw new Error(`Could not find tun device to configure on ${serverName}.`);\n                    }\n                };\n                await configureInterface(ssh1, tunnelIp1, server1.name);\n                await configureInterface(ssh2, tunnelIp2, server2.name);\n                break;\n            case 'V2Ray (WS+TLS)':\n                await run(ssh1, `sudo systemctl enable v2ray`);\n                await run(ssh2, `sudo systemctl enable v2ray`);\n                await run(ssh2, `sudo systemctl enable nginx`);\n                break;\n            default:\n                return {\n                    success: false,\n                    message: `Saving configuration for ${type} is not implemented.`\n                };\n        }\n        const tunnelsCollection = await (0,_db__WEBPACK_IMPORTED_MODULE_4__.getTunnelsCollection)();\n        await tunnelsCollection.updateOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_3__.ObjectId(id)\n        }, {\n            $set: {\n                isSaved: true\n            }\n        });\n        (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)('/');\n        return {\n            success: true\n        };\n    } catch (e) {\n        console.error('Failed to save tunnel config:', e);\n        return {\n            success: false,\n            message: e.message || 'An unexpected error occurred.'\n        };\n    } finally{\n        if (ssh1?.isConnected()) ssh1.dispose();\n        if (ssh2?.isConnected()) ssh2.dispose();\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__.ensureServerEntryExports)([\n    saveTunnelConfig\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(saveTunnelConfig, \"40489b8faa7a7cebcd6457d02a4950f55b6e81a586\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/actions/tunnels/persistence.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"09dd5d46d93c\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxhcHBcXGdsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiMDlkZDVkNDZkOTNjXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_ui_toaster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/toaster */ \"(rsc)/./src/components/ui/toaster.tsx\");\n/* harmony import */ var _lib_process_cleanup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/process-cleanup */ \"(rsc)/./src/lib/process-cleanup.ts\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\n\n\nconst metadata = {\n    title: \"TunnelVision\",\n    description: \"Manage and create network tunnels with ease.\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preconnect\",\n                        href: \"https://fonts.googleapis.com\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preconnect\",\n                        href: \"https://fonts.gstatic.com\",\n                        crossOrigin: \"anonymous\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        href: \"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300..700&display=swap\",\n                        rel: \"stylesheet\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 16 16%22><g fill=%22none%22 stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%221.1%22><path stroke=%22%23e10885%22 d=%22M8 15S5 6.5 1 4c1 .2 3.3.5 4.5.5c1 .5 2.5 3 2.5 4c0-1 1.5-3.5 2.5-4A31 31 0 0 0 15 4c-4 2.5-7 11-7 11%22 /><path stroke=%22%23928d99%22 d=%22M3.4 2.6S5 1 7.7 1S12 2.6 12 2.6m-10.9 4S.5 8.7 2 11a6 6 0 0 0 3.4 3m4.6 0s2.2-.6 3.5-3c1.4-2.2.8-4.5.8-4.5%22 /></g></svg>\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: \"font-body antialiased min-h-screen bg-background text-foreground\",\n                children: [\n                    children,\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toaster__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFDa0Q7QUFDbkI7QUFDUjtBQUVoQixNQUFNQyxXQUFxQjtJQUNoQ0MsT0FBTztJQUNQQyxhQUFhO0FBQ2YsRUFBRTtBQUVhLFNBQVNDLFdBQVcsRUFDakNDLFFBQVEsRUFHUjtJQUNBLHFCQUNFLDhEQUFDQztRQUFLQyxNQUFLOzswQkFDVCw4REFBQ0M7O2tDQUNDLDhEQUFDQzt3QkFBS0MsS0FBSTt3QkFBYUMsTUFBSzs7Ozs7O2tDQUM1Qiw4REFBQ0Y7d0JBQUtDLEtBQUk7d0JBQWFDLE1BQUs7d0JBQTRCQyxhQUFZOzs7Ozs7a0NBQ3BFLDhEQUFDSDt3QkFBS0UsTUFBSzt3QkFBb0ZELEtBQUk7Ozs7OztrQ0FDbkcsOERBQUNEO3dCQUFLQyxLQUFJO3dCQUFPQyxNQUFLOzs7Ozs7Ozs7Ozs7MEJBRXhCLDhEQUFDRTtnQkFBS0MsV0FBVTs7b0JBQ2JUO2tDQUNELDhEQUFDTCwyREFBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSWhCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxhcHBcXGxheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNZXRhZGF0YSB9IGZyb20gXCJuZXh0XCI7XHJcbmltcG9ydCB7IFRvYXN0ZXIgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3RvYXN0ZXJcIjtcclxuaW1wb3J0IFwiQC9saWIvcHJvY2Vzcy1jbGVhbnVwXCI7XHJcbmltcG9ydCBcIi4vZ2xvYmFscy5jc3NcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XHJcbiAgdGl0bGU6IFwiVHVubmVsVmlzaW9uXCIsXHJcbiAgZGVzY3JpcHRpb246IFwiTWFuYWdlIGFuZCBjcmVhdGUgbmV0d29yayB0dW5uZWxzIHdpdGggZWFzZS5cIixcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoe1xyXG4gIGNoaWxkcmVuLFxyXG59OiBSZWFkb25seTx7XHJcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcclxufT4pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPGh0bWwgbGFuZz1cImVuXCI+XHJcbiAgICAgIDxoZWFkPlxyXG4gICAgICAgIDxsaW5rIHJlbD1cInByZWNvbm5lY3RcIiBocmVmPVwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbVwiIC8+XHJcbiAgICAgICAgPGxpbmsgcmVsPVwicHJlY29ubmVjdFwiIGhyZWY9XCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tXCIgY3Jvc3NPcmlnaW49XCJhbm9ueW1vdXNcIiAvPlxyXG4gICAgICAgIDxsaW5rIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVNwYWNlK0dyb3Rlc2s6d2dodEAzMDAuLjcwMCZkaXNwbGF5PXN3YXBcIiByZWw9XCJzdHlsZXNoZWV0XCIgLz5cclxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSUyMmh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJTIyIHZpZXdCb3g9JTIyMCAwIDE2IDE2JTIyPjxnIGZpbGw9JTIybm9uZSUyMiBzdHJva2UtbGluZWNhcD0lMjJyb3VuZCUyMiBzdHJva2UtbGluZWpvaW49JTIycm91bmQlMjIgc3Ryb2tlLXdpZHRoPSUyMjEuMSUyMj48cGF0aCBzdHJva2U9JTIyJTIzZTEwODg1JTIyIGQ9JTIyTTggMTVTNSA2LjUgMSA0YzEgLjIgMy4zLjUgNC41LjVjMSAuNSAyLjUgMyAyLjUgNGMwLTEgMS41LTMuNSAyLjUtNEEzMSAzMSAwIDAgMCAxNSA0Yy00IDIuNS03IDExLTcgMTElMjIgLz48cGF0aCBzdHJva2U9JTIyJTIzOTI4ZDk5JTIyIGQ9JTIyTTMuNCAyLjZTNSAxIDcuNyAxUzEyIDIuNiAxMiAyLjZtLTEwLjkgNFMuNSA4LjcgMiAxMWE2IDYgMCAwIDAgMy40IDNtNC42IDBzMi4yLS42IDMuNS0zYzEuNC0yLjIuOC00LjUuOC00LjUlMjIgLz48L2c+PC9zdmc+XCIgLz5cclxuICAgICAgPC9oZWFkPlxyXG4gICAgICA8Ym9keSBjbGFzc05hbWU9XCJmb250LWJvZHkgYW50aWFsaWFzZWQgbWluLWgtc2NyZWVuIGJnLWJhY2tncm91bmQgdGV4dC1mb3JlZ3JvdW5kXCI+XHJcbiAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICAgIDxUb2FzdGVyIC8+XHJcbiAgICAgIDwvYm9keT5cclxuICAgIDwvaHRtbD5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJUb2FzdGVyIiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJoZWFkIiwibGluayIsInJlbCIsImhyZWYiLCJjcm9zc09yaWdpbiIsImJvZHkiLCJjbGFzc05hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/actions */ \"(rsc)/./src/app/actions/index.ts\");\n/* harmony import */ var _components_main_page_dynamic_main_page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/main-page/dynamic-main-page */ \"(rsc)/./src/components/main-page/dynamic-main-page.tsx\");\n\n\n\nasync function Home() {\n    // This value is not used, but it's a good practice to set revalidate to 0\n    // for pages that fetch dynamic data on every request.\n    const revalidate = 0;\n    let initialServers = [];\n    let initialTunnels = [];\n    try {\n        const serversFromDb = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_1__.getServers)();\n        const tunnelsFromDb = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_1__.getTunnels)();\n        // Correctly and robustly serialize the data from the database.\n        // This is crucial to prevent hydration errors when passing data\n        // from a Server Component to a Client Component.\n        initialServers = serversFromDb.map((server)=>{\n            const { _id, ...rest } = server;\n            return {\n                ...rest,\n                id: _id.toHexString()\n            };\n        });\n        initialTunnels = tunnelsFromDb.map((tunnel)=>{\n            const { _id, ...rest } = tunnel;\n            return {\n                ...rest,\n                id: _id.toHexString(),\n                // Ensure createdAt is also a plain string if it's a Date object\n                createdAt: new Date(tunnel.createdAt).toISOString()\n            };\n        });\n    } catch (error) {\n        console.error(\"Could not load initial data from the database.\", error);\n    // It's safe to proceed with empty arrays. The UI will handle this state.\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_main_page_dynamic_main_page__WEBPACK_IMPORTED_MODULE_2__.DynamicMainPageLoader, {\n        initialServers: initialServers,\n        initialTunnels: initialTunnels\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 51,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUcwQjtBQVNsRSxlQUFlRztJQUM1QiwwRUFBMEU7SUFDMUUsc0RBQXNEO0lBQ3RELE1BQU1DLGFBQWE7SUFFbkIsSUFBSUMsaUJBQWdDLEVBQUU7SUFDdEMsSUFBSUMsaUJBQWdDLEVBQUU7SUFFdEMsSUFBSTtRQUNGLE1BQU1DLGdCQUFnQixNQUFNUCx3REFBVUE7UUFDdEMsTUFBTVEsZ0JBQWdCLE1BQU1QLHdEQUFVQTtRQUV0QywrREFBK0Q7UUFDL0QsZ0VBQWdFO1FBQ2hFLGlEQUFpRDtRQUNqREksaUJBQWlCRSxjQUFjRSxHQUFHLENBQUNDLENBQUFBO1lBQ2pDLE1BQU0sRUFBQ0MsR0FBRyxFQUFFLEdBQUdDLE1BQUssR0FBR0Y7WUFDdkIsT0FBTztnQkFDTCxHQUFHRSxJQUFJO2dCQUNQQyxJQUFJRixJQUFJRyxXQUFXO1lBQ3JCO1FBQ0Y7UUFFQVIsaUJBQWlCRSxjQUFjQyxHQUFHLENBQUNNLENBQUFBO1lBQ2hDLE1BQU0sRUFBQ0osR0FBRyxFQUFFLEdBQUdDLE1BQUssR0FBR0c7WUFDdkIsT0FBTztnQkFDTCxHQUFHSCxJQUFJO2dCQUNQQyxJQUFJRixJQUFJRyxXQUFXO2dCQUNuQixnRUFBZ0U7Z0JBQ2hFRSxXQUFXLElBQUlDLEtBQUtGLE9BQU9DLFNBQVMsRUFBRUUsV0FBVztZQUNuRDtRQUNIO0lBRUYsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrREFBa0RBO0lBQ2hFLHlFQUF5RTtJQUMzRTtJQUVBLHFCQUFPLDhEQUFDakIsMEZBQXFCQTtRQUFDRyxnQkFBZ0JBO1FBQWdCQyxnQkFBZ0JBOzs7Ozs7QUFDaEYiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uXFxzcmNcXGFwcFxccGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U2VydmVycywgZ2V0VHVubmVscyB9IGZyb20gXCJAL2FwcC9hY3Rpb25zXCI7XG5pbXBvcnQgdHlwZSB7IFNlcnZlciwgVHVubmVsIH0gZnJvbSBcIkAvbGliL3R5cGVzXCI7XG5pbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gXCJtb25nb2RiXCI7XG5pbXBvcnQgeyBEeW5hbWljTWFpblBhZ2VMb2FkZXIgfSBmcm9tIFwiQC9jb21wb25lbnRzL21haW4tcGFnZS9keW5hbWljLW1haW4tcGFnZVwiO1xuXG5cbi8vIEhlbHBlciB0eXBlIGZvciBzZXJpYWxpemVkIGRhdGEsIGVuc3VyaW5nIGl0J3MgYSBwbGFpbiBvYmplY3QuXG50eXBlIFBsYWluPFQ+ID0gVCBleHRlbmRzIE9iamVjdElkID8gc3RyaW5nIDogVCBleHRlbmRzIERhdGUgPyBzdHJpbmcgOiBUIGV4dGVuZHMgb2JqZWN0ID8ge1tLIGluIGtleW9mIFRdOiBQbGFpbjxUW0tdPn0gOiBUO1xudHlwZSBQbGFpblNlcnZlciA9IFBsYWluPE9taXQ8U2VydmVyLCAnX2lkJz4+ICYgeyBpZDogc3RyaW5nIH07XG50eXBlIFBsYWluVHVubmVsID0gUGxhaW48T21pdDxUdW5uZWwsICdfaWQnPj4gJiB7IGlkOiBzdHJpbmcgfTtcblxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBIb21lKCkge1xuICAvLyBUaGlzIHZhbHVlIGlzIG5vdCB1c2VkLCBidXQgaXQncyBhIGdvb2QgcHJhY3RpY2UgdG8gc2V0IHJldmFsaWRhdGUgdG8gMFxuICAvLyBmb3IgcGFnZXMgdGhhdCBmZXRjaCBkeW5hbWljIGRhdGEgb24gZXZlcnkgcmVxdWVzdC5cbiAgY29uc3QgcmV2YWxpZGF0ZSA9IDA7XG5cbiAgbGV0IGluaXRpYWxTZXJ2ZXJzOiBQbGFpblNlcnZlcltdID0gW107XG4gIGxldCBpbml0aWFsVHVubmVsczogUGxhaW5UdW5uZWxbXSA9IFtdO1xuXG4gIHRyeSB7XG4gICAgY29uc3Qgc2VydmVyc0Zyb21EYiA9IGF3YWl0IGdldFNlcnZlcnMoKTtcbiAgICBjb25zdCB0dW5uZWxzRnJvbURiID0gYXdhaXQgZ2V0VHVubmVscygpO1xuXG4gICAgLy8gQ29ycmVjdGx5IGFuZCByb2J1c3RseSBzZXJpYWxpemUgdGhlIGRhdGEgZnJvbSB0aGUgZGF0YWJhc2UuXG4gICAgLy8gVGhpcyBpcyBjcnVjaWFsIHRvIHByZXZlbnQgaHlkcmF0aW9uIGVycm9ycyB3aGVuIHBhc3NpbmcgZGF0YVxuICAgIC8vIGZyb20gYSBTZXJ2ZXIgQ29tcG9uZW50IHRvIGEgQ2xpZW50IENvbXBvbmVudC5cbiAgICBpbml0aWFsU2VydmVycyA9IHNlcnZlcnNGcm9tRGIubWFwKHNlcnZlciA9PiB7XG4gICAgICBjb25zdCB7X2lkLCAuLi5yZXN0fSA9IHNlcnZlcjtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnJlc3QsXG4gICAgICAgIGlkOiBfaWQudG9IZXhTdHJpbmcoKSxcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgICBpbml0aWFsVHVubmVscyA9IHR1bm5lbHNGcm9tRGIubWFwKHR1bm5lbCA9PiB7XG4gICAgICAgY29uc3Qge19pZCwgLi4ucmVzdH0gPSB0dW5uZWw7XG4gICAgICAgcmV0dXJuIHtcbiAgICAgICAgIC4uLnJlc3QsXG4gICAgICAgICBpZDogX2lkLnRvSGV4U3RyaW5nKCksXG4gICAgICAgICAvLyBFbnN1cmUgY3JlYXRlZEF0IGlzIGFsc28gYSBwbGFpbiBzdHJpbmcgaWYgaXQncyBhIERhdGUgb2JqZWN0XG4gICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKHR1bm5lbC5jcmVhdGVkQXQpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgfTtcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJDb3VsZCBub3QgbG9hZCBpbml0aWFsIGRhdGEgZnJvbSB0aGUgZGF0YWJhc2UuXCIsIGVycm9yKTtcbiAgICAvLyBJdCdzIHNhZmUgdG8gcHJvY2VlZCB3aXRoIGVtcHR5IGFycmF5cy4gVGhlIFVJIHdpbGwgaGFuZGxlIHRoaXMgc3RhdGUuXG4gIH1cblxuICByZXR1cm4gPER5bmFtaWNNYWluUGFnZUxvYWRlciBpbml0aWFsU2VydmVycz17aW5pdGlhbFNlcnZlcnN9IGluaXRpYWxUdW5uZWxzPXtpbml0aWFsVHVubmVsc30gLz47XG59XG4iXSwibmFtZXMiOlsiZ2V0U2VydmVycyIsImdldFR1bm5lbHMiLCJEeW5hbWljTWFpblBhZ2VMb2FkZXIiLCJIb21lIiwicmV2YWxpZGF0ZSIsImluaXRpYWxTZXJ2ZXJzIiwiaW5pdGlhbFR1bm5lbHMiLCJzZXJ2ZXJzRnJvbURiIiwidHVubmVsc0Zyb21EYiIsIm1hcCIsInNlcnZlciIsIl9pZCIsInJlc3QiLCJpZCIsInRvSGV4U3RyaW5nIiwidHVubmVsIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZXJyb3IiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/main-page/dynamic-main-page.tsx":
/*!********************************************************!*\
  !*** ./src/components/main-page/dynamic-main-page.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicMainPageLoader: () => (/* binding */ DynamicMainPageLoader)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js\");\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);\n// This file is generated by the Webpack next-flight-loader.\n\nconst DynamicMainPageLoader = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call DynamicMainPageLoader() from the server but DynamicMainPageLoader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n\"DynamicMainPageLoader\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy9tYWluLXBhZ2UvZHluYW1pYy1tYWluLXBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBIiwic291cmNlcyI6WyJfTl9FLy4vc3JjL2NvbXBvbmVudHMvbWFpbi1wYWdlL2R5bmFtaWMtbWFpbi1wYWdlLnRzeC9fX25leHRqcy1pbnRlcm5hbC1wcm94eS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSB0aGUgV2VicGFjayBuZXh0LWZsaWdodC1sb2FkZXIuXG5pbXBvcnQgeyByZWdpc3RlckNsaWVudFJlZmVyZW5jZSB9IGZyb20gXCJyZWFjdC1zZXJ2ZXItZG9tLXdlYnBhY2svc2VydmVyXCI7XG5leHBvcnQgY29uc3QgRHluYW1pY01haW5QYWdlTG9hZGVyID0gcmVnaXN0ZXJDbGllbnRSZWZlcmVuY2UoXG5mdW5jdGlvbigpIHsgdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGNhbGwgRHluYW1pY01haW5QYWdlTG9hZGVyKCkgZnJvbSB0aGUgc2VydmVyIGJ1dCBEeW5hbWljTWFpblBhZ2VMb2FkZXIgaXMgb24gdGhlIGNsaWVudC4gSXQncyBub3QgcG9zc2libGUgdG8gaW52b2tlIGEgY2xpZW50IGZ1bmN0aW9uIGZyb20gdGhlIHNlcnZlciwgaXQgY2FuIG9ubHkgYmUgcmVuZGVyZWQgYXMgYSBDb21wb25lbnQgb3IgcGFzc2VkIHRvIHByb3BzIG9mIGEgQ2xpZW50IENvbXBvbmVudC5cIik7IH0sXG5cIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxzcmNcXFxcY29tcG9uZW50c1xcXFxtYWluLXBhZ2VcXFxcZHluYW1pYy1tYWluLXBhZ2UudHN4XCIsXG5cIkR5bmFtaWNNYWluUGFnZUxvYWRlclwiLFxuKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/components/main-page/dynamic-main-page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/ui/toaster.tsx":
/*!***************************************!*\
  !*** ./src/components/ui/toaster.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js\");\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);\n// This file is generated by the Webpack next-flight-loader.\n\nconst Toaster = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n\"Toaster\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSIsInNvdXJjZXMiOlsiX05fRS8uL3NyYy9jb21wb25lbnRzL3VpL3RvYXN0ZXIudHN4L19fbmV4dGpzLWludGVybmFsLXByb3h5Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IHRoZSBXZWJwYWNrIG5leHQtZmxpZ2h0LWxvYWRlci5cbmltcG9ydCB7IHJlZ2lzdGVyQ2xpZW50UmVmZXJlbmNlIH0gZnJvbSBcInJlYWN0LXNlcnZlci1kb20td2VicGFjay9zZXJ2ZXJcIjtcbmV4cG9ydCBjb25zdCBUb2FzdGVyID0gcmVnaXN0ZXJDbGllbnRSZWZlcmVuY2UoXG5mdW5jdGlvbigpIHsgdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGNhbGwgVG9hc3RlcigpIGZyb20gdGhlIHNlcnZlciBidXQgVG9hc3RlciBpcyBvbiB0aGUgY2xpZW50LiBJdCdzIG5vdCBwb3NzaWJsZSB0byBpbnZva2UgYSBjbGllbnQgZnVuY3Rpb24gZnJvbSB0aGUgc2VydmVyLCBpdCBjYW4gb25seSBiZSByZW5kZXJlZCBhcyBhIENvbXBvbmVudCBvciBwYXNzZWQgdG8gcHJvcHMgb2YgYSBDbGllbnQgQ29tcG9uZW50LlwiKTsgfSxcblwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXHVpXFxcXHRvYXN0ZXIudHN4XCIsXG5cIlRvYXN0ZXJcIixcbik7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/components/ui/toaster.tsx\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// This approach is taken from https://github.com/vercel/next.js/tree/canary/examples/with-mongodb\n\nif (!process.env.MONGODB_URI) {\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {\n    serverSelectionTimeoutMS: 5000,\n    socketTimeoutMS: 45000,\n    connectTimeoutMS: 10000,\n    maxPoolSize: 10\n};\nlet client;\nlet clientPromise;\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    let globalWithMongo = global;\n    if (!globalWithMongo._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        globalWithMongo._mongoClientPromise = client.connect();\n    }\n    clientPromise = globalWithMongo._mongoClientPromise;\n} else {}\n// Export a module-scoped MongoClient promise. By doing this in a\n// separate module, the client can be shared across functions.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0dBQWtHO0FBQzdEO0FBRXJDLElBQUksQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLEVBQUU7SUFDNUIsTUFBTSxJQUFJQyxNQUFNO0FBQ2xCO0FBRUEsTUFBTUMsTUFBTUosUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0FBQ25DLE1BQU1HLFVBQVU7SUFDZEMsMEJBQTBCO0lBQzFCQyxpQkFBaUI7SUFDakJDLGtCQUFrQjtJQUNsQkMsYUFBYTtBQUNmO0FBRUEsSUFBSUM7QUFDSixJQUFJQztBQUVKLElBQUlYLElBQXNDLEVBQUU7SUFDMUMsK0RBQStEO0lBQy9ELDZFQUE2RTtJQUM3RSxJQUFJWSxrQkFBa0JDO0lBSXRCLElBQUksQ0FBQ0QsZ0JBQWdCRSxtQkFBbUIsRUFBRTtRQUN4Q0osU0FBUyxJQUFJWCxnREFBV0EsQ0FBQ0ssS0FBS0M7UUFDOUJPLGdCQUFnQkUsbUJBQW1CLEdBQUdKLE9BQU9LLE9BQU87SUFDdEQ7SUFDQUosZ0JBQWdCQyxnQkFBZ0JFLG1CQUFtQjtBQUNyRCxPQUFPLEVBSU47QUFFRCxpRUFBaUU7QUFDakUsOERBQThEO0FBQzlELGlFQUFlSCxhQUFhQSxFQUFBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxsaWJcXG1vbmdvZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBhcHByb2FjaCBpcyB0YWtlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy90cmVlL2NhbmFyeS9leGFtcGxlcy93aXRoLW1vbmdvZGJcbmltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSBcIm1vbmdvZGJcIlxuXG5pZiAoIXByb2Nlc3MuZW52Lk1PTkdPREJfVVJJKSB7XG4gIHRocm93IG5ldyBFcnJvcignSW52YWxpZC9NaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiBcIk1PTkdPREJfVVJJXCInKVxufVxuXG5jb25zdCB1cmkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSVxuY29uc3Qgb3B0aW9ucyA9IHtcbiAgc2VydmVyU2VsZWN0aW9uVGltZW91dE1TOiA1MDAwLFxuICBzb2NrZXRUaW1lb3V0TVM6IDQ1MDAwLFxuICBjb25uZWN0VGltZW91dE1TOiAxMDAwMCxcbiAgbWF4UG9vbFNpemU6IDEwXG59XG5cbmxldCBjbGllbnRcbmxldCBjbGllbnRQcm9taXNlOiBQcm9taXNlPE1vbmdvQ2xpZW50PlxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAvLyBJbiBkZXZlbG9wbWVudCBtb2RlLCB1c2UgYSBnbG9iYWwgdmFyaWFibGUgc28gdGhhdCB0aGUgdmFsdWVcbiAgLy8gaXMgcHJlc2VydmVkIGFjcm9zcyBtb2R1bGUgcmVsb2FkcyBjYXVzZWQgYnkgSE1SIChIb3QgTW9kdWxlIFJlcGxhY2VtZW50KS5cbiAgbGV0IGdsb2JhbFdpdGhNb25nbyA9IGdsb2JhbCBhcyB0eXBlb2YgZ2xvYmFsVGhpcyAmIHtcbiAgICBfbW9uZ29DbGllbnRQcm9taXNlPzogUHJvbWlzZTxNb25nb0NsaWVudD5cbiAgfVxuXG4gIGlmICghZ2xvYmFsV2l0aE1vbmdvLl9tb25nb0NsaWVudFByb21pc2UpIHtcbiAgICBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCBvcHRpb25zKVxuICAgIGdsb2JhbFdpdGhNb25nby5fbW9uZ29DbGllbnRQcm9taXNlID0gY2xpZW50LmNvbm5lY3QoKVxuICB9XG4gIGNsaWVudFByb21pc2UgPSBnbG9iYWxXaXRoTW9uZ28uX21vbmdvQ2xpZW50UHJvbWlzZVxufSBlbHNlIHtcbiAgLy8gSW4gcHJvZHVjdGlvbiBtb2RlLCBpdCdzIGJlc3QgdG8gbm90IHVzZSBhIGdsb2JhbCB2YXJpYWJsZS5cbiAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSwgb3B0aW9ucylcbiAgY2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KClcbn1cblxuLy8gRXhwb3J0IGEgbW9kdWxlLXNjb3BlZCBNb25nb0NsaWVudCBwcm9taXNlLiBCeSBkb2luZyB0aGlzIGluIGFcbi8vIHNlcGFyYXRlIG1vZHVsZSwgdGhlIGNsaWVudCBjYW4gYmUgc2hhcmVkIGFjcm9zcyBmdW5jdGlvbnMuXG5leHBvcnQgZGVmYXVsdCBjbGllbnRQcm9taXNlXG4iXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJFcnJvciIsInVyaSIsIm9wdGlvbnMiLCJzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVMiLCJzb2NrZXRUaW1lb3V0TVMiLCJjb25uZWN0VGltZW91dE1TIiwibWF4UG9vbFNpemUiLCJjbGllbnQiLCJjbGllbnRQcm9taXNlIiwiZ2xvYmFsV2l0aE1vbmdvIiwiZ2xvYmFsIiwiX21vbmdvQ2xpZW50UHJvbWlzZSIsImNvbm5lY3QiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/process-cleanup.ts":
/*!************************************!*\
  !*** ./src/lib/process-cleanup.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanup: () => (/* binding */ cleanup)\n/* harmony export */ });\n// Prevent EventEmitter memory leak by setting max listeners\nprocess.setMaxListeners(20);\n// Global cleanup handler to prevent memory leaks\nconst cleanup = ()=>{\n    // Remove all listeners to prevent memory leaks\n    process.removeAllListeners('SIGTERM');\n    process.removeAllListeners('SIGINT');\n    process.removeAllListeners('uncaughtException');\n    process.removeAllListeners('unhandledRejection');\n};\n// Set up single cleanup handlers\nif (!process.listenerCount('SIGTERM')) {\n    process.once('SIGTERM', cleanup);\n}\nif (!process.listenerCount('SIGINT')) {\n    process.once('SIGINT', cleanup);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3Byb2Nlc3MtY2xlYW51cC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNERBQTREO0FBQzVEQSxRQUFRQyxlQUFlLENBQUM7QUFFeEIsaURBQWlEO0FBQ2pELE1BQU1DLFVBQVU7SUFDZCwrQ0FBK0M7SUFDL0NGLFFBQVFHLGtCQUFrQixDQUFDO0lBQzNCSCxRQUFRRyxrQkFBa0IsQ0FBQztJQUMzQkgsUUFBUUcsa0JBQWtCLENBQUM7SUFDM0JILFFBQVFHLGtCQUFrQixDQUFDO0FBQzdCO0FBRUEsaUNBQWlDO0FBQ2pDLElBQUksQ0FBQ0gsUUFBUUksYUFBYSxDQUFDLFlBQVk7SUFDckNKLFFBQVFLLElBQUksQ0FBQyxXQUFXSDtBQUMxQjtBQUVBLElBQUksQ0FBQ0YsUUFBUUksYUFBYSxDQUFDLFdBQVc7SUFDcENKLFFBQVFLLElBQUksQ0FBQyxVQUFVSDtBQUN6QjtBQUVtQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb25cXHNyY1xcbGliXFxwcm9jZXNzLWNsZWFudXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUHJldmVudCBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgYnkgc2V0dGluZyBtYXggbGlzdGVuZXJzXG5wcm9jZXNzLnNldE1heExpc3RlbmVycygyMCk7XG5cbi8vIEdsb2JhbCBjbGVhbnVwIGhhbmRsZXIgdG8gcHJldmVudCBtZW1vcnkgbGVha3NcbmNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XG4gIC8vIFJlbW92ZSBhbGwgbGlzdGVuZXJzIHRvIHByZXZlbnQgbWVtb3J5IGxlYWtzXG4gIHByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzKCdTSUdURVJNJyk7XG4gIHByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzKCdTSUdJTlQnKTtcbiAgcHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3VuY2F1Z2h0RXhjZXB0aW9uJyk7XG4gIHByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzKCd1bmhhbmRsZWRSZWplY3Rpb24nKTtcbn07XG5cbi8vIFNldCB1cCBzaW5nbGUgY2xlYW51cCBoYW5kbGVyc1xuaWYgKCFwcm9jZXNzLmxpc3RlbmVyQ291bnQoJ1NJR1RFUk0nKSkge1xuICBwcm9jZXNzLm9uY2UoJ1NJR1RFUk0nLCBjbGVhbnVwKTtcbn1cblxuaWYgKCFwcm9jZXNzLmxpc3RlbmVyQ291bnQoJ1NJR0lOVCcpKSB7XG4gIHByb2Nlc3Mub25jZSgnU0lHSU5UJywgY2xlYW51cCk7XG59XG5cbmV4cG9ydCB7IGNsZWFudXAgfTsiXSwibmFtZXMiOlsicHJvY2VzcyIsInNldE1heExpc3RlbmVycyIsImNsZWFudXAiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJsaXN0ZW5lckNvdW50Iiwib25jZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/process-cleanup.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/schemas.ts":
/*!****************************!*\
  !*** ./src/lib/schemas.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverSchema: () => (/* binding */ serverSchema),\n/* harmony export */   serverSchemaWithId: () => (/* binding */ serverSchemaWithId)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n\nconst baseServerSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, {\n        message: \"Server name is required\"\n    }),\n    ipAddress: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().ip({\n        version: 'v4',\n        message: \"Invalid IP address\"\n    }),\n    username: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, {\n        message: 'Username is required'\n    }),\n    sshPort: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().min(1).max(65535).optional().default(22),\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().or(zod__WEBPACK_IMPORTED_MODULE_0__.z.literal('')),\n    sshKey: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().or(zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(''))\n});\nconst serverSchema = baseServerSchema.refine((data)=>data.password || data.sshKey, {\n    message: \"Password or SSH Key is required\",\n    path: [\n        \"password\"\n    ]\n});\nconst serverSchemaWithId = baseServerSchema.extend({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3NjaGVtYXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdCO0FBRXhCLE1BQU1DLG1CQUFtQkQsa0NBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUNoQ0MsTUFBTUgsa0NBQUNBLENBQUNJLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUc7UUFBRUMsU0FBUztJQUEwQjtJQUM3REMsV0FBV1Asa0NBQUNBLENBQUNJLE1BQU0sR0FBR0ksRUFBRSxDQUFDO1FBQUVDLFNBQVM7UUFBTUgsU0FBUztJQUFxQjtJQUN4RUksVUFBVVYsa0NBQUNBLENBQUNJLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUc7UUFBRUMsU0FBUztJQUF1QjtJQUM5REssU0FBU1gsa0NBQUNBLENBQUNZLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHQyxHQUFHLEdBQUdULEdBQUcsQ0FBQyxHQUFHVSxHQUFHLENBQUMsT0FBT0MsUUFBUSxHQUFHQyxPQUFPLENBQUM7SUFDdEVDLFVBQVVsQixrQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHWSxRQUFRLEdBQUdHLEVBQUUsQ0FBQ25CLGtDQUFDQSxDQUFDb0IsT0FBTyxDQUFDO0lBQzdDQyxRQUFRckIsa0NBQUNBLENBQUNJLE1BQU0sR0FBR1ksUUFBUSxHQUFHRyxFQUFFLENBQUNuQixrQ0FBQ0EsQ0FBQ29CLE9BQU8sQ0FBQztBQUM3QztBQUVPLE1BQU1FLGVBQWVyQixpQkFBaUJzQixNQUFNLENBQUNDLENBQUFBLE9BQVFBLEtBQUtOLFFBQVEsSUFBSU0sS0FBS0gsTUFBTSxFQUFFO0lBQ3RGZixTQUFTO0lBQ1RtQixNQUFNO1FBQUM7S0FBVztBQUN0QixHQUFHO0FBRUksTUFBTUMscUJBQXFCekIsaUJBQWlCMEIsTUFBTSxDQUFDO0lBQ3hEQyxJQUFJNUIsa0NBQUNBLENBQUNJLE1BQU07QUFDZCxHQUFHIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxsaWJcXHNjaGVtYXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcblxuY29uc3QgYmFzZVNlcnZlclNjaGVtYSA9IHoub2JqZWN0KHtcbiAgbmFtZTogei5zdHJpbmcoKS5taW4oMSwgeyBtZXNzYWdlOiBcIlNlcnZlciBuYW1lIGlzIHJlcXVpcmVkXCIgfSksXG4gIGlwQWRkcmVzczogei5zdHJpbmcoKS5pcCh7IHZlcnNpb246ICd2NCcsIG1lc3NhZ2U6IFwiSW52YWxpZCBJUCBhZGRyZXNzXCIgfSksXG4gIHVzZXJuYW1lOiB6LnN0cmluZygpLm1pbigxLCB7IG1lc3NhZ2U6ICdVc2VybmFtZSBpcyByZXF1aXJlZCcgfSksXG4gIHNzaFBvcnQ6IHouY29lcmNlLm51bWJlcigpLmludCgpLm1pbigxKS5tYXgoNjU1MzUpLm9wdGlvbmFsKCkuZGVmYXVsdCgyMiksXG4gIHBhc3N3b3JkOiB6LnN0cmluZygpLm9wdGlvbmFsKCkub3Ioei5saXRlcmFsKCcnKSksXG4gIHNzaEtleTogei5zdHJpbmcoKS5vcHRpb25hbCgpLm9yKHoubGl0ZXJhbCgnJykpLFxufSk7XG5cbmV4cG9ydCBjb25zdCBzZXJ2ZXJTY2hlbWEgPSBiYXNlU2VydmVyU2NoZW1hLnJlZmluZShkYXRhID0+IGRhdGEucGFzc3dvcmQgfHwgZGF0YS5zc2hLZXksIHtcbiAgICBtZXNzYWdlOiBcIlBhc3N3b3JkIG9yIFNTSCBLZXkgaXMgcmVxdWlyZWRcIixcbiAgICBwYXRoOiBbXCJwYXNzd29yZFwiXSxcbn0pO1xuXG5leHBvcnQgY29uc3Qgc2VydmVyU2NoZW1hV2l0aElkID0gYmFzZVNlcnZlclNjaGVtYS5leHRlbmQoe1xuICBpZDogei5zdHJpbmcoKSxcbn0pO1xuIl0sIm5hbWVzIjpbInoiLCJiYXNlU2VydmVyU2NoZW1hIiwib2JqZWN0IiwibmFtZSIsInN0cmluZyIsIm1pbiIsIm1lc3NhZ2UiLCJpcEFkZHJlc3MiLCJpcCIsInZlcnNpb24iLCJ1c2VybmFtZSIsInNzaFBvcnQiLCJjb2VyY2UiLCJudW1iZXIiLCJpbnQiLCJtYXgiLCJvcHRpb25hbCIsImRlZmF1bHQiLCJwYXNzd29yZCIsIm9yIiwibGl0ZXJhbCIsInNzaEtleSIsInNlcnZlclNjaGVtYSIsInJlZmluZSIsImRhdGEiLCJwYXRoIiwic2VydmVyU2NoZW1hV2l0aElkIiwiZXh0ZW5kIiwiaWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/schemas.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/framework/boundary-components.js */ \"(ssr)/./node_modules/next/dist/lib/framework/boundary-components.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2J1aWx0aW4lNUMlNUNnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q21ldGFkYXRhJTVDJTVDYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNhbWluXyU1QyU1Q0Rvd25sb2FkcyU1QyU1Q0NvbXByZXNzZWQlNUMlNUNUdW5uZWxWaXNpb24lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2xpYiU1QyU1Q2ZyYW1ld29yayU1QyU1Q2JvdW5kYXJ5LWNvbXBvbmVudHMuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYW1pbl8lNUMlNUNEb3dubG9hZHMlNUMlNUNDb21wcmVzc2VkJTVDJTVDVHVubmVsVmlzaW9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q2dlbmVyYXRlJTVDJTVDaWNvbi1tYXJrLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDbmV4dC1kZXZ0b29scyU1QyU1Q3VzZXJzcGFjZSU1QyU1Q2FwcCU1QyU1Q3NlZ21lbnQtZXhwbG9yZXItbm9kZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsc1BBQWtLO0FBQ2xLO0FBQ0Esb09BQXdKO0FBQ3hKO0FBQ0EsME9BQTJKO0FBQzNKO0FBQ0Esb1JBQWlMO0FBQ2pMO0FBQ0Esd09BQTBKO0FBQzFKO0FBQ0EsNFBBQXFLO0FBQ3JLO0FBQ0Esc1FBQXlLO0FBQ3pLO0FBQ0EsNE9BQTRKO0FBQzVKO0FBQ0Esa09BQTJKO0FBQzNKO0FBQ0EsNFFBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxidWlsdGluXFxcXGdsb2JhbC1lcnJvci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1zZWdtZW50LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhbWluX1xcXFxEb3dubG9hZHNcXFxcQ29tcHJlc3NlZFxcXFxUdW5uZWxWaXNpb25cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxodHRwLWFjY2Vzcy1mYWxsYmFja1xcXFxlcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbWV0YWRhdGFcXFxcYXN5bmMtbWV0YWRhdGEuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXHJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFtaW5fXFxcXERvd25sb2Fkc1xcXFxDb21wcmVzc2VkXFxcXFR1bm5lbFZpc2lvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGxpYlxcXFxmcmFtZXdvcmtcXFxcYm91bmRhcnktY29tcG9uZW50cy5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcbGliXFxcXG1ldGFkYXRhXFxcXGdlbmVyYXRlXFxcXGljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcbmV4dC1kZXZ0b29sc1xcXFx1c2Vyc3BhY2VcXFxcYXBwXFxcXHNlZ21lbnQtZXhwbG9yZXItbm9kZS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cframework%5C%5Cboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/toaster.tsx */ \"(ssr)/./src/components/ui/toaster.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q2dsb2JhbHMuY3NzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2NvbXBvbmVudHMlNUMlNUN1aSU1QyU1Q3RvYXN0ZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyVG9hc3RlciUyMiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQXlKIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUb2FzdGVyXCJdICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXHVpXFxcXHRvYXN0ZXIudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/main-page/dynamic-main-page.tsx */ \"(ssr)/./src/components/main-page/dynamic-main-page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2FtaW5fJTVDJTVDRG93bmxvYWRzJTVDJTVDQ29tcHJlc3NlZCU1QyU1Q1R1bm5lbFZpc2lvbiU1QyU1Q3NyYyU1QyU1Q2NvbXBvbmVudHMlNUMlNUNtYWluLXBhZ2UlNUMlNUNkeW5hbWljLW1haW4tcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJEeW5hbWljTWFpblBhZ2VMb2FkZXIlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDRNQUF3TCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiRHluYW1pY01haW5QYWdlTG9hZGVyXCJdICovIFwiQzpcXFxcVXNlcnNcXFxcYW1pbl9cXFxcRG93bmxvYWRzXFxcXENvbXByZXNzZWRcXFxcVHVubmVsVmlzaW9uXFxcXHNyY1xcXFxjb21wb25lbnRzXFxcXG1haW4tcGFnZVxcXFxkeW5hbWljLW1haW4tcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Camin_%5C%5CDownloads%5C%5CCompressed%5C%5CTunnelVision%5C%5Csrc%5C%5Ccomponents%5C%5Cmain-page%5C%5Cdynamic-main-page.tsx%22%2C%22ids%22%3A%5B%22DynamicMainPageLoader%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/components/main-page/dynamic-main-page.tsx":
/*!********************************************************!*\
  !*** ./src/components/main-page/dynamic-main-page.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicMainPageLoader: () => (/* binding */ DynamicMainPageLoader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(ssr)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/skeleton */ \"(ssr)/./src/components/ui/skeleton.tsx\");\n/* __next_internal_client_entry_do_not_use__ DynamicMainPageLoader auto */ \n\n\nconst DynamicMainPage = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(async ()=>{\n     true && /*require.resolve*/(null /* weak dependency, without id */);\n}, {\n    loadableGenerated: {\n        modules: [\n            \"components\\\\main-page\\\\dynamic-main-page.tsx -> \" + \"@/components/main-page/main-page\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 lg:grid-cols-2 gap-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-col gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[500px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 23,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[400px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 24,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-col gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[500px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_2__.Skeleton, {\n                                className: \"h-[400px] w-full\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, undefined)\n});\n// Sanitize string values to prevent XSS\nfunction sanitizeString(str) {\n    return str.replace(/[<>\"'&]/g, (match)=>{\n        const entities = {\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#x27;',\n            '&': '&amp;'\n        };\n        return entities[match] || match;\n    });\n}\n// Sanitize server data\nfunction sanitizeServer(server) {\n    return {\n        ...server,\n        name: sanitizeString(server.name),\n        ipAddress: sanitizeString(server.ipAddress),\n        username: sanitizeString(server.username)\n    };\n}\n// Sanitize tunnel data\nfunction sanitizeTunnel(tunnel) {\n    return {\n        ...tunnel,\n        tunnelIp1: sanitizeString(tunnel.tunnelIp1 || ''),\n        tunnelIp2: sanitizeString(tunnel.tunnelIp2 || '')\n    };\n}\nfunction DynamicMainPageLoader({ initialServers, initialTunnels }) {\n    const sanitizedServers = initialServers.map(sanitizeServer);\n    const sanitizedTunnels = initialTunnels.map(sanitizeTunnel);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicMainPage, {\n        initialServers: sanitizedServers,\n        initialTunnels: sanitizedTunnels\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\main-page\\\\dynamic-main-page.tsx\",\n        lineNumber: 79,\n        columnNumber: 12\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9tYWluLXBhZ2UvZHluYW1pYy1tYWluLXBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdtQztBQUNpQjtBQVVwRCxNQUFNRSxrQkFBa0JGLHdEQUFPQTs7Ozs7Ozs7SUFHM0JHLEtBQUs7SUFDTEMsU0FBUyxrQkFDUCw4REFBQ0M7WUFBSUMsV0FBVTtzQkFDYiw0RUFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNMLDZEQUFRQTtnQ0FBQ0ssV0FBVTs7Ozs7OzBDQUNwQiw4REFBQ0wsNkRBQVFBO2dDQUFDSyxXQUFVOzs7Ozs7Ozs7Ozs7a0NBRXRCLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNMLDZEQUFRQTtnQ0FBQ0ssV0FBVTs7Ozs7OzBDQUNwQiw4REFBQ0wsNkRBQVFBO2dDQUFDSyxXQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRaEMsd0NBQXdDO0FBQ3hDLFNBQVNDLGVBQWVDLEdBQVc7SUFDL0IsT0FBT0EsSUFBSUMsT0FBTyxDQUFDLFlBQVksQ0FBQ0M7UUFDNUIsTUFBTUMsV0FBc0M7WUFDeEMsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLE9BQU9BLFFBQVEsQ0FBQ0QsTUFBTSxJQUFJQTtJQUM5QjtBQUNKO0FBRUEsdUJBQXVCO0FBQ3ZCLFNBQVNFLGVBQWVDLE1BQW1CO0lBQ3ZDLE9BQU87UUFDSCxHQUFHQSxNQUFNO1FBQ1RDLE1BQU1QLGVBQWVNLE9BQU9DLElBQUk7UUFDaENDLFdBQVdSLGVBQWVNLE9BQU9FLFNBQVM7UUFDMUNDLFVBQVVULGVBQWVNLE9BQU9HLFFBQVE7SUFDNUM7QUFDSjtBQUVBLHVCQUF1QjtBQUN2QixTQUFTQyxlQUFlQyxNQUFtQjtJQUN2QyxPQUFPO1FBQ0gsR0FBR0EsTUFBTTtRQUNUQyxXQUFXWixlQUFlVyxPQUFPQyxTQUFTLElBQUk7UUFDOUNDLFdBQVdiLGVBQWVXLE9BQU9FLFNBQVMsSUFBSTtJQUNsRDtBQUNKO0FBRU8sU0FBU0Msc0JBQXNCLEVBQ2xDQyxjQUFjLEVBQ2RDLGNBQWMsRUFJakI7SUFDRyxNQUFNQyxtQkFBbUJGLGVBQWVHLEdBQUcsQ0FBQ2I7SUFDNUMsTUFBTWMsbUJBQW1CSCxlQUFlRSxHQUFHLENBQUNSO0lBRTVDLHFCQUFPLDhEQUFDZjtRQUFnQm9CLGdCQUFnQkU7UUFBa0JELGdCQUFnQkc7Ozs7OztBQUM5RSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb25cXHNyY1xcY29tcG9uZW50c1xcbWFpbi1wYWdlXFxkeW5hbWljLW1haW4tcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXG4ndXNlIGNsaWVudCc7XG5cbmltcG9ydCBkeW5hbWljIGZyb20gXCJuZXh0L2R5bmFtaWNcIjtcbmltcG9ydCB7IFNrZWxldG9uIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9za2VsZXRvblwiO1xuaW1wb3J0IHR5cGUgeyBTZXJ2ZXIsIFR1bm5lbCB9IGZyb20gXCJAL2xpYi90eXBlc1wiO1xuaW1wb3J0IHsgT2JqZWN0SWQgfSBmcm9tIFwibW9uZ29kYlwiO1xuXG4vLyBIZWxwZXIgdHlwZSBmb3Igc2VyaWFsaXplZCBkYXRhLCBlbnN1cmluZyBpdCdzIGEgcGxhaW4gb2JqZWN0LlxudHlwZSBQbGFpbjxUPiA9IFQgZXh0ZW5kcyBPYmplY3RJZCA/IHN0cmluZyA6IFQgZXh0ZW5kcyBEYXRlID8gc3RyaW5nIDogVCBleHRlbmRzIG9iamVjdCA/IHtbSyBpbiBrZXlvZiBUXTogUGxhaW48VFtLXT59IDogVDtcbnR5cGUgUGxhaW5TZXJ2ZXIgPSBQbGFpbjxPbWl0PFNlcnZlciwgJ19pZCc+PiAmIHsgaWQ6IHN0cmluZyB9O1xudHlwZSBQbGFpblR1bm5lbCA9IFBsYWluPE9taXQ8VHVubmVsLCAnX2lkJz4+ICYgeyBpZDogc3RyaW5nIH07XG5cblxuY29uc3QgRHluYW1pY01haW5QYWdlID0gZHluYW1pYyhcbiAgKCkgPT4gaW1wb3J0KCdAL2NvbXBvbmVudHMvbWFpbi1wYWdlL21haW4tcGFnZScpLnRoZW4oKG1vZCkgPT4gbW9kLk1haW5QYWdlKSxcbiAge1xuICAgIHNzcjogZmFsc2UsXG4gICAgbG9hZGluZzogKCkgPT4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtMSBmbGV4LWNvbCBnYXAtNCBwLTQgbWQ6Z2FwLTggbWQ6cC04XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBsZzpncmlkLWNvbHMtMiBnYXAtNFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBnYXAtNFwiPlxuICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtWzUwMHB4XSB3LWZ1bGxcIiAvPlxuICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtWzQwMHB4XSB3LWZ1bGxcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBnYXAtNFwiPlxuICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtWzUwMHB4XSB3LWZ1bGxcIiAvPlxuICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtWzQwMHB4XSB3LWZ1bGxcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICksXG4gIH1cbik7XG5cbi8vIFNhbml0aXplIHN0cmluZyB2YWx1ZXMgdG8gcHJldmVudCBYU1NcbmZ1bmN0aW9uIHNhbml0aXplU3RyaW5nKHN0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1s8PlwiJyZdL2csIChtYXRjaCkgPT4ge1xuICAgICAgICBjb25zdCBlbnRpdGllczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHtcbiAgICAgICAgICAgICc8JzogJyZsdDsnLFxuICAgICAgICAgICAgJz4nOiAnJmd0OycsXG4gICAgICAgICAgICAnXCInOiAnJnF1b3Q7JyxcbiAgICAgICAgICAgIFwiJ1wiOiAnJiN4Mjc7JyxcbiAgICAgICAgICAgICcmJzogJyZhbXA7J1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gZW50aXRpZXNbbWF0Y2hdIHx8IG1hdGNoO1xuICAgIH0pO1xufVxuXG4vLyBTYW5pdGl6ZSBzZXJ2ZXIgZGF0YVxuZnVuY3Rpb24gc2FuaXRpemVTZXJ2ZXIoc2VydmVyOiBQbGFpblNlcnZlcik6IFBsYWluU2VydmVyIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5zZXJ2ZXIsXG4gICAgICAgIG5hbWU6IHNhbml0aXplU3RyaW5nKHNlcnZlci5uYW1lKSxcbiAgICAgICAgaXBBZGRyZXNzOiBzYW5pdGl6ZVN0cmluZyhzZXJ2ZXIuaXBBZGRyZXNzKSxcbiAgICAgICAgdXNlcm5hbWU6IHNhbml0aXplU3RyaW5nKHNlcnZlci51c2VybmFtZSlcbiAgICB9O1xufVxuXG4vLyBTYW5pdGl6ZSB0dW5uZWwgZGF0YVxuZnVuY3Rpb24gc2FuaXRpemVUdW5uZWwodHVubmVsOiBQbGFpblR1bm5lbCk6IFBsYWluVHVubmVsIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi50dW5uZWwsXG4gICAgICAgIHR1bm5lbElwMTogc2FuaXRpemVTdHJpbmcodHVubmVsLnR1bm5lbElwMSB8fCAnJyksXG4gICAgICAgIHR1bm5lbElwMjogc2FuaXRpemVTdHJpbmcodHVubmVsLnR1bm5lbElwMiB8fCAnJylcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRHluYW1pY01haW5QYWdlTG9hZGVyKHsgXG4gICAgaW5pdGlhbFNlcnZlcnMsIFxuICAgIGluaXRpYWxUdW5uZWxzIFxufTogeyBcbiAgICBpbml0aWFsU2VydmVyczogUGxhaW5TZXJ2ZXJbXSwgXG4gICAgaW5pdGlhbFR1bm5lbHM6IFBsYWluVHVubmVsW10gXG59KSB7XG4gICAgY29uc3Qgc2FuaXRpemVkU2VydmVycyA9IGluaXRpYWxTZXJ2ZXJzLm1hcChzYW5pdGl6ZVNlcnZlcik7XG4gICAgY29uc3Qgc2FuaXRpemVkVHVubmVscyA9IGluaXRpYWxUdW5uZWxzLm1hcChzYW5pdGl6ZVR1bm5lbCk7XG4gICAgXG4gICAgcmV0dXJuIDxEeW5hbWljTWFpblBhZ2UgaW5pdGlhbFNlcnZlcnM9e3Nhbml0aXplZFNlcnZlcnN9IGluaXRpYWxUdW5uZWxzPXtzYW5pdGl6ZWRUdW5uZWxzfSAvPjtcbn1cbiJdLCJuYW1lcyI6WyJkeW5hbWljIiwiU2tlbGV0b24iLCJEeW5hbWljTWFpblBhZ2UiLCJzc3IiLCJsb2FkaW5nIiwiZGl2IiwiY2xhc3NOYW1lIiwic2FuaXRpemVTdHJpbmciLCJzdHIiLCJyZXBsYWNlIiwibWF0Y2giLCJlbnRpdGllcyIsInNhbml0aXplU2VydmVyIiwic2VydmVyIiwibmFtZSIsImlwQWRkcmVzcyIsInVzZXJuYW1lIiwic2FuaXRpemVUdW5uZWwiLCJ0dW5uZWwiLCJ0dW5uZWxJcDEiLCJ0dW5uZWxJcDIiLCJEeW5hbWljTWFpblBhZ2VMb2FkZXIiLCJpbml0aWFsU2VydmVycyIsImluaXRpYWxUdW5uZWxzIiwic2FuaXRpemVkU2VydmVycyIsIm1hcCIsInNhbml0aXplZFR1bm5lbHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/main-page/dynamic-main-page.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/skeleton.tsx":
/*!****************************************!*\
  !*** ./src/components/ui/skeleton.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Skeleton: () => (/* binding */ Skeleton)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n\n\nfunction Skeleton({ className, ...props }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.cn)(\"animate-pulse rounded-md bg-muted\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\skeleton.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy91aS9za2VsZXRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFFaEMsU0FBU0MsU0FBUyxFQUNoQkMsU0FBUyxFQUNULEdBQUdDLE9BQ2tDO0lBQ3JDLHFCQUNFLDhEQUFDQztRQUNDRixXQUFXRiw4Q0FBRUEsQ0FBQyxxQ0FBcUNFO1FBQ2xELEdBQUdDLEtBQUs7Ozs7OztBQUdmO0FBRW1CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFtaW5fXFxEb3dubG9hZHNcXENvbXByZXNzZWRcXFR1bm5lbFZpc2lvblxcc3JjXFxjb21wb25lbnRzXFx1aVxcc2tlbGV0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuZnVuY3Rpb24gU2tlbGV0b24oe1xuICBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2NuKFwiYW5pbWF0ZS1wdWxzZSByb3VuZGVkLW1kIGJnLW11dGVkXCIsIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBTa2VsZXRvbiB9XG4iXSwibmFtZXMiOlsiY24iLCJTa2VsZXRvbiIsImNsYXNzTmFtZSIsInByb3BzIiwiZGl2Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/skeleton.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/toast.tsx":
/*!*************************************!*\
  !*** ./src/components/ui/toast.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-toast */ \"(ssr)/./node_modules/@radix-ui/react-toast/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=X!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ ToastProvider,ToastViewport,Toast,ToastTitle,ToastDescription,ToastClose,ToastAction auto */ \n\n\n\n\n\nconst ToastProvider = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Provider;\nconst ToastViewport = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 16,\n        columnNumber: 3\n    }, undefined));\nToastViewport.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport.displayName;\nconst toastVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\", {\n    variants: {\n        variant: {\n            default: \"border bg-background text-foreground\",\n            destructive: \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Toast = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, ...props }, ref)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(toastVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, undefined);\n});\nToast.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\nconst ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 62,\n        columnNumber: 3\n    }, undefined));\nToastAction.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action.displayName;\nconst ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\", className),\n        \"toast-close\": \"\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n            lineNumber: 86,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 77,\n        columnNumber: 3\n    }, undefined));\nToastClose.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close.displayName;\nconst ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm font-semibold\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 95,\n        columnNumber: 3\n    }, undefined));\nToastTitle.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title.displayName;\nconst ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm opacity-90\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 107,\n        columnNumber: 3\n    }, undefined));\nToastDescription.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description.displayName;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/toast.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/toaster.tsx":
/*!***************************************!*\
  !*** ./src/components/ui/toaster.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/use-toast */ \"(ssr)/./src/hooks/use-toast.ts\");\n/* harmony import */ var _components_ui_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/toast */ \"(ssr)/./src/components/ui/toast.tsx\");\n/* __next_internal_client_entry_do_not_use__ Toaster auto */ \n\n\nfunction Toaster() {\n    const { toasts } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastProvider, {\n        children: [\n            toasts.map(function({ id, title, description, action, ...props }) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.Toast, {\n                    ...props,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid gap-1\",\n                            children: [\n                                title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastTitle, {\n                                    children: title\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 22,\n                                    columnNumber: 25\n                                }, this),\n                                description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastDescription, {\n                                    children: description\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this),\n                        action,\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastClose, {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, id, true, {\n                    fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 11\n                }, this);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastViewport, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\amin_\\\\Downloads\\\\Compressed\\\\TunnelVision\\\\src\\\\components\\\\ui\\\\toaster.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFNEM7QUFRZDtBQUV2QixTQUFTTztJQUNkLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdSLDBEQUFRQTtJQUUzQixxQkFDRSw4REFBQ0ksK0RBQWFBOztZQUNYSSxPQUFPQyxHQUFHLENBQUMsU0FBVSxFQUFFQyxFQUFFLEVBQUVDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsT0FBTztnQkFDaEUscUJBQ0UsOERBQUNiLHVEQUFLQTtvQkFBVyxHQUFHYSxLQUFLOztzQ0FDdkIsOERBQUNDOzRCQUFJQyxXQUFVOztnQ0FDWkwsdUJBQVMsOERBQUNOLDREQUFVQTs4Q0FBRU07Ozs7OztnQ0FDdEJDLDZCQUNDLDhEQUFDVCxrRUFBZ0JBOzhDQUFFUzs7Ozs7Ozs7Ozs7O3dCQUd0QkM7c0NBQ0QsOERBQUNYLDREQUFVQTs7Ozs7O21CQVJEUTs7Ozs7WUFXaEI7MEJBQ0EsOERBQUNKLCtEQUFhQTs7Ozs7Ozs7Ozs7QUFHcEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYW1pbl9cXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcVHVubmVsVmlzaW9uXFxzcmNcXGNvbXBvbmVudHNcXHVpXFx0b2FzdGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgeyB1c2VUb2FzdCB9IGZyb20gXCJAL2hvb2tzL3VzZS10b2FzdFwiXG5pbXBvcnQge1xuICBUb2FzdCxcbiAgVG9hc3RDbG9zZSxcbiAgVG9hc3REZXNjcmlwdGlvbixcbiAgVG9hc3RQcm92aWRlcixcbiAgVG9hc3RUaXRsZSxcbiAgVG9hc3RWaWV3cG9ydCxcbn0gZnJvbSBcIkAvY29tcG9uZW50cy91aS90b2FzdFwiXG5cbmV4cG9ydCBmdW5jdGlvbiBUb2FzdGVyKCkge1xuICBjb25zdCB7IHRvYXN0cyB9ID0gdXNlVG9hc3QoKVxuXG4gIHJldHVybiAoXG4gICAgPFRvYXN0UHJvdmlkZXI+XG4gICAgICB7dG9hc3RzLm1hcChmdW5jdGlvbiAoeyBpZCwgdGl0bGUsIGRlc2NyaXB0aW9uLCBhY3Rpb24sIC4uLnByb3BzIH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8VG9hc3Qga2V5PXtpZH0gey4uLnByb3BzfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBnYXAtMVwiPlxuICAgICAgICAgICAgICB7dGl0bGUgJiYgPFRvYXN0VGl0bGU+e3RpdGxlfTwvVG9hc3RUaXRsZT59XG4gICAgICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgICAgICAgPFRvYXN0RGVzY3JpcHRpb24+e2Rlc2NyaXB0aW9ufTwvVG9hc3REZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge2FjdGlvbn1cbiAgICAgICAgICAgIDxUb2FzdENsb3NlIC8+XG4gICAgICAgICAgPC9Ub2FzdD5cbiAgICAgICAgKVxuICAgICAgfSl9XG4gICAgICA8VG9hc3RWaWV3cG9ydCAvPlxuICAgIDwvVG9hc3RQcm92aWRlcj5cbiAgKVxufVxuIl0sIm5hbWVzIjpbInVzZVRvYXN0IiwiVG9hc3QiLCJUb2FzdENsb3NlIiwiVG9hc3REZXNjcmlwdGlvbiIsIlRvYXN0UHJvdmlkZXIiLCJUb2FzdFRpdGxlIiwiVG9hc3RWaWV3cG9ydCIsIlRvYXN0ZXIiLCJ0b2FzdHMiLCJtYXAiLCJpZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhY3Rpb24iLCJwcm9wcyIsImRpdiIsImNsYXNzTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/toaster.tsx\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-toast.ts":
/*!********************************!*\
  !*** ./src/hooks/use-toast.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reducer: () => (/* binding */ reducer),\n/* harmony export */   toast: () => (/* binding */ toast),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ reducer,useToast,toast auto */ // Inspired by react-hot-toast library\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\nconst actionTypes = {\n    ADD_TOAST: \"ADD_TOAST\",\n    UPDATE_TOAST: \"UPDATE_TOAST\",\n    DISMISS_TOAST: \"DISMISS_TOAST\",\n    REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n    count = (count + 1) % Number.MAX_SAFE_INTEGER;\n    return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = (toastId)=>{\n    if (toastTimeouts.has(toastId)) {\n        return;\n    }\n    const timeout = setTimeout(()=>{\n        toastTimeouts.delete(toastId);\n        dispatch({\n            type: \"REMOVE_TOAST\",\n            toastId: toastId\n        });\n    }, TOAST_REMOVE_DELAY);\n    toastTimeouts.set(toastId, timeout);\n};\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case \"ADD_TOAST\":\n            return {\n                ...state,\n                toasts: [\n                    action.toast,\n                    ...state.toasts\n                ].slice(0, TOAST_LIMIT)\n            };\n        case \"UPDATE_TOAST\":\n            return {\n                ...state,\n                toasts: state.toasts.map((t)=>t.id === action.toast.id ? {\n                        ...t,\n                        ...action.toast\n                    } : t)\n            };\n        case \"DISMISS_TOAST\":\n            {\n                const { toastId } = action;\n                // ! Side effects ! - This could be extracted into a dismissToast() action,\n                // but I'll keep it here for simplicity\n                if (toastId) {\n                    addToRemoveQueue(toastId);\n                } else {\n                    state.toasts.forEach((toast)=>{\n                        addToRemoveQueue(toast.id);\n                    });\n                }\n                return {\n                    ...state,\n                    toasts: state.toasts.map((t)=>t.id === toastId || toastId === undefined ? {\n                            ...t,\n                            open: false\n                        } : t)\n                };\n            }\n        case \"REMOVE_TOAST\":\n            if (action.toastId === undefined) {\n                return {\n                    ...state,\n                    toasts: []\n                };\n            }\n            return {\n                ...state,\n                toasts: state.toasts.filter((t)=>t.id !== action.toastId)\n            };\n    }\n};\nconst listeners = [];\nlet memoryState = {\n    toasts: []\n};\nfunction dispatch(action) {\n    memoryState = reducer(memoryState, action);\n    listeners.forEach((listener)=>{\n        listener(memoryState);\n    });\n}\nfunction toast({ ...props }) {\n    const id = genId();\n    const update = (props)=>dispatch({\n            type: \"UPDATE_TOAST\",\n            toast: {\n                ...props,\n                id\n            }\n        });\n    const dismiss = ()=>dispatch({\n            type: \"DISMISS_TOAST\",\n            toastId: id\n        });\n    dispatch({\n        type: \"ADD_TOAST\",\n        toast: {\n            ...props,\n            id,\n            open: true,\n            onOpenChange: (open)=>{\n                if (!open) dismiss();\n            }\n        }\n    });\n    return {\n        id: id,\n        dismiss,\n        update\n    };\n}\nfunction useToast() {\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useToast.useEffect\": ()=>{\n            listeners.push(setState);\n            return ({\n                \"useToast.useEffect\": ()=>{\n                    const index = listeners.indexOf(setState);\n                    if (index > -1) {\n                        listeners.splice(index, 1);\n                    }\n                }\n            })[\"useToast.useEffect\"];\n        }\n    }[\"useToast.useEffect\"], [\n        state\n    ]);\n    return {\n        ...state,\n        toast,\n        dismiss: (toastId)=>dispatch({\n                type: \"DISMISS_TOAST\",\n                toastId\n            })\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-toast.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3V0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNKO0FBRWpDLFNBQVNFLEdBQUcsR0FBR0MsTUFBb0I7SUFDeEMsT0FBT0YsdURBQU9BLENBQUNELDBDQUFJQSxDQUFDRztBQUN0QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbWluX1xcRG93bmxvYWRzXFxDb21wcmVzc2VkXFxUdW5uZWxWaXNpb25cXHNyY1xcbGliXFx1dGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbHN4LCB0eXBlIENsYXNzVmFsdWUgfSBmcm9tIFwiY2xzeFwiXG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSBcInRhaWx3aW5kLW1lcmdlXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmlucHV0czogQ2xhc3NWYWx1ZVtdKSB7XG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcbn1cbiJdLCJuYW1lcyI6WyJjbHN4IiwidHdNZXJnZSIsImNuIiwiaW5wdXRzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/utils.ts\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "async_hooks":
/*!******************************!*\
  !*** external "async_hooks" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("async_hooks");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dgram":
/*!************************!*\
  !*** external "dgram" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("dgram");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("express");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "import-in-the-middle":
/*!***************************************!*\
  !*** external "import-in-the-middle" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = require("import-in-the-middle");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongodb");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "node-ssh":
/*!***************************!*\
  !*** external "node-ssh" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node-ssh");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:perf_hooks":
/*!**********************************!*\
  !*** external "node:perf_hooks" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:perf_hooks");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("perf_hooks");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "require-in-the-middle":
/*!****************************************!*\
  !*** external "require-in-the-middle" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("require-in-the-middle");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/@opentelemetry","vendor-chunks/zod-to-json-schema","vendor-chunks/@genkit-ai","vendor-chunks/yaml","vendor-chunks/ajv","vendor-chunks/@grpc","vendor-chunks/semver","vendor-chunks/protobufjs","vendor-chunks/thriftrw","vendor-chunks/uuid","vendor-chunks/bufrw","vendor-chunks/@radix-ui","vendor-chunks/opentracing","vendor-chunks/genkit","vendor-chunks/zod","vendor-chunks/@protobufjs","vendor-chunks/jaeger-client","vendor-chunks/lucide-react","vendor-chunks/hexer","vendor-chunks/fast-uri","vendor-chunks/ajv-formats","vendor-chunks/xtend","vendor-chunks/partial-json","vendor-chunks/error","vendor-chunks/@google","vendor-chunks/json5","vendor-chunks/tailwind-merge","vendor-chunks/clsx","vendor-chunks/class-variance-authority","vendor-chunks/long","vendor-chunks/xorshift","vendor-chunks/uri-templates","vendor-chunks/string-template","vendor-chunks/shimmer","vendor-chunks/node-int64","vendor-chunks/lodash.camelcase","vendor-chunks/json-schema-traverse","vendor-chunks/handlebars","vendor-chunks/get-port","vendor-chunks/fast-deep-equal","vendor-chunks/dotprompt","vendor-chunks/ansi-color","vendor-chunks/@js-sdsl"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camin_%5CDownloads%5CCompressed%5CTunnelVision&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();